"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(e,t,n){n.r(t),n.d(t,{ACESFilmicToneMapping:function(){return en},AddEquation:function(){return T},AddOperation:function(){return K},AdditiveAnimationBlendMode:function(){return ty},AdditiveBlending:function(){return b},AlphaFormat:function(){return eN},AlwaysDepth:function(){return k},AlwaysStencilFunc:function(){return tq},AmbientLight:function(){return h4},AmbientLightProbe:function(){return uc},AnimationClip:function(){return hC},AnimationLoader:function(){return hO},AnimationMixer:function(){return uW},AnimationObjectGroup:function(){return uk},AnimationUtils:function(){return hg},ArcCurve:function(){return o4},ArrayCamera:function(){return sX},ArrowHelper:function(){return cM},Audio:function(){return uw},AudioAnalyser:function(){return uC},AudioContext:function(){return ul},AudioListener:function(){return uM},AudioLoader:function(){return uh},AxesHelper:function(){return cw},AxisHelper:function(){return dr},BackSide:function(){return m},BasicDepthPacking:function(){return tS},BasicShadowMap:function(){return u},BinaryTextureLoader:function(){return dh},Bone:function(){return ow},BooleanKeyframeTrack:function(){return hM},BoundingBoxHelper:function(){return di},Box2:function(){return u0},Box3:function(){return nj},Box3Helper:function(){return cv},BoxBufferGeometry:function(){return iA},BoxGeometry:function(){return iA},BoxHelper:function(){return cg},BufferAttribute:function(){return rK},BufferGeometry:function(){return is},BufferGeometryLoader:function(){return ut},ByteType:function(){return eS},Cache:function(){return hP},Camera:function(){return iD},CameraHelper:function(){return cp},CanvasRenderer:function(){return dc},CanvasTexture:function(){return o1},CapsuleBufferGeometry:function(){return lm},CapsuleGeometry:function(){return lm},CatmullRomCurve3:function(){return le},CineonToneMapping:function(){return et},CircleBufferGeometry:function(){return lg},CircleGeometry:function(){return lg},ClampToEdgeWrapping:function(){return ec},Clock:function(){return ug},Color:function(){return nA},ColorKeyframeTrack:function(){return hw},ColorManagement:function(){return n_},CompressedTexture:function(){return o0},CompressedTextureLoader:function(){return hU},ConeBufferGeometry:function(){return ly},ConeGeometry:function(){return ly},CubeCamera:function(){return iN},CubeReflectionMapping:function(){return ea},CubeRefractionMapping:function(){return es},CubeTexture:function(){return iB},CubeTextureLoader:function(){return hH},CubeUVReflectionMapping:function(){return eh},CubicBezierCurve:function(){return li},CubicBezierCurve3:function(){return la},CubicInterpolant:function(){return hy},CullFaceBack:function(){return o},CullFaceFront:function(){return l},CullFaceFrontBack:function(){return h},CullFaceNone:function(){return s},Curve:function(){return o3},CurvePath:function(){return ld},CustomBlending:function(){return S},CustomToneMapping:function(){return er},CylinderBufferGeometry:function(){return lv},CylinderGeometry:function(){return lv},Cylindrical:function(){return uQ},Data3DTexture:function(){return nU},DataArrayTexture:function(){return nz},DataTexture:function(){return oS},DataTexture2DArray:function(){return db},DataTexture3D:function(){return dM},DataTextureLoader:function(){return hG},DataUtils:function(){return cT},DecrementStencilOp:function(){return tB},DecrementWrapStencilOp:function(){return tO},DefaultLoadingManager:function(){return hI},DepthFormat:function(){return eF},DepthStencilFormat:function(){return eH},DepthTexture:function(){return sK},DirectionalLight:function(){return h2},DirectionalLightHelper:function(){return cu},DiscreteInterpolant:function(){return h_},DodecahedronBufferGeometry:function(){return l_},DodecahedronGeometry:function(){return l_},DoubleSide:function(){return g},DstAlphaFactor:function(){return z},DstColorFactor:function(){return U},DynamicBufferAttribute:function(){return c2},DynamicCopyUsage:function(){return t0},DynamicDrawUsage:function(){return tJ},DynamicReadUsage:function(){return tK},EdgesGeometry:function(){return lT},EdgesHelper:function(){return da},EllipseCurve:function(){return o2},EqualDepth:function(){return j},EqualStencilFunc:function(){return tG},EquirectangularReflectionMapping:function(){return eo},EquirectangularRefractionMapping:function(){return el},Euler:function(){return rx},EventDispatcher:function(){return t5},ExtrudeBufferGeometry:function(){return l1},ExtrudeGeometry:function(){return l1},FaceColors:function(){return cq},FileLoader:function(){return hz},FlatShading:function(){return v},Float16BufferAttribute:function(){return r5},Float32Attribute:function(){return dt},Float32BufferAttribute:function(){return r6},Float64Attribute:function(){return dn},Float64BufferAttribute:function(){return r7},FloatType:function(){return eC},Fog:function(){return s2},FogExp2:function(){return s3},Font:function(){return dy},FontLoader:function(){return dv},FramebufferTexture:function(){return o$},FrontSide:function(){return f},Frustum:function(){return iV},GLBufferAttribute:function(){return uX},GLSL1:function(){return t3},GLSL3:function(){return t2},GreaterDepth:function(){return X},GreaterEqualDepth:function(){return q},GreaterEqualStencilFunc:function(){return tj},GreaterStencilFunc:function(){return tV},GridHelper:function(){return ca},Group:function(){return sJ},HalfFloatType:function(){return eL},HemisphereLight:function(){return hW},HemisphereLightHelper:function(){return ci},HemisphereLightProbe:function(){return uu},IcosahedronBufferGeometry:function(){return l2},IcosahedronGeometry:function(){return l2},ImageBitmapLoader:function(){return us},ImageLoader:function(){return hF},ImageUtils:function(){return nC},ImmediateRenderObject:function(){return dx},IncrementStencilOp:function(){return tN},IncrementWrapStencilOp:function(){return tz},InstancedBufferAttribute:function(){return oR},InstancedBufferGeometry:function(){return ue},InstancedInterleavedBuffer:function(){return uq},InstancedMesh:function(){return oI},Int16Attribute:function(){return c7},Int16BufferAttribute:function(){return r1},Int32Attribute:function(){return c9},Int32BufferAttribute:function(){return r2},Int8Attribute:function(){return c4},Int8BufferAttribute:function(){return rQ},IntType:function(){return eA},InterleavedBuffer:function(){return s5},InterleavedBufferAttribute:function(){return s7},Interpolant:function(){return hv},InterpolateDiscrete:function(){return tc},InterpolateLinear:function(){return td},InterpolateSmooth:function(){return tp},InvertStencilOp:function(){return tU},JSONLoader:function(){return dd},KeepStencilOp:function(){return tD},KeyframeTrack:function(){return hb},LOD:function(){return og},LatheBufferGeometry:function(){return lf},LatheGeometry:function(){return lf},Layers:function(){return r_},LensFlare:function(){return df},LessDepth:function(){return V},LessEqualDepth:function(){return W},LessEqualStencilFunc:function(){return tk},LessStencilFunc:function(){return tH},Light:function(){return hV},LightProbe:function(){return h7},Line:function(){return oH},Line3:function(){return u2},LineBasicMaterial:function(){return oN},LineCurve:function(){return ls},LineCurve3:function(){return lo},LineDashedMaterial:function(){return hf},LineLoop:function(){return oW},LinePieces:function(){return cW},LineSegments:function(){return oV},LineStrip:function(){return cV},LinearEncoding:function(){return tM},LinearFilter:function(){return ey},LinearInterpolant:function(){return hx},LinearMipMapLinearFilter:function(){return eM},LinearMipMapNearestFilter:function(){return e_},LinearMipmapLinearFilter:function(){return eb},LinearMipmapNearestFilter:function(){return ex},LinearSRGBColorSpace:function(){return tL},LinearToneMapping:function(){return $},Loader:function(){return hN},LoaderUtils:function(){return h9},LoadingManager:function(){return hD},LoopOnce:function(){return tl},LoopPingPong:function(){return tu},LoopRepeat:function(){return th},LuminanceAlphaFormat:function(){return eU},LuminanceFormat:function(){return eO},MOUSE:function(){return i},Material:function(){return rX},MaterialLoader:function(){return h8},Math:function(){return nu},MathUtils:function(){return nu},Matrix3:function(){return nd},Matrix4:function(){return rh},MaxEquation:function(){return C},Mesh:function(){return iT},MeshBasicMaterial:function(){return rJ},MeshDepthMaterial:function(){return sG},MeshDistanceMaterial:function(){return sk},MeshFaceMaterial:function(){return cJ},MeshLambertMaterial:function(){return hd},MeshMatcapMaterial:function(){return hp},MeshNormalMaterial:function(){return hc},MeshPhongMaterial:function(){return hh},MeshPhysicalMaterial:function(){return hl},MeshStandardMaterial:function(){return ho},MeshToonMaterial:function(){return hu},MinEquation:function(){return R},MirroredRepeatWrapping:function(){return ed},MixOperation:function(){return Z},MultiMaterial:function(){return cY},MultiplyBlending:function(){return w},MultiplyOperation:function(){return Y},NearestFilter:function(){return ep},NearestMipMapLinearFilter:function(){return ev},NearestMipMapNearestFilter:function(){return em},NearestMipmapLinearFilter:function(){return eg},NearestMipmapNearestFilter:function(){return ef},NeverDepth:function(){return G},NeverStencilFunc:function(){return tF},NoBlending:function(){return x},NoColorSpace:function(){return tR},NoColors:function(){return cj},NoToneMapping:function(){return Q},NormalAnimationBlendMode:function(){return tv},NormalBlending:function(){return _},NotEqualDepth:function(){return J},NotEqualStencilFunc:function(){return tW},NumberKeyframeTrack:function(){return hS},Object3D:function(){return rN},ObjectLoader:function(){return un},ObjectSpaceNormalMap:function(){return tA},OctahedronBufferGeometry:function(){return l4},OctahedronGeometry:function(){return l4},OneFactor:function(){return P},OneMinusDstAlphaFactor:function(){return O},OneMinusDstColorFactor:function(){return F},OneMinusSrcAlphaFactor:function(){return B},OneMinusSrcColorFactor:function(){return I},OrthographicCamera:function(){return i3},PCFShadowMap:function(){return c},PCFSoftShadowMap:function(){return d},PMREMGenerator:function(){return ae},ParametricGeometry:function(){return dm},Particle:function(){return cK},ParticleBasicMaterial:function(){return c0},ParticleSystem:function(){return cQ},ParticleSystemMaterial:function(){return c1},Path:function(){return lp},PerspectiveCamera:function(){return iI},Plane:function(){return iH},PlaneBufferGeometry:function(){return iq},PlaneGeometry:function(){return iq},PlaneHelper:function(){return cy},PointCloud:function(){return cZ},PointCloudMaterial:function(){return c$},PointLight:function(){return h1},PointLightHelper:function(){return ce},Points:function(){return oZ},PointsMaterial:function(){return oj},PolarGridHelper:function(){return cs},PolyhedronBufferGeometry:function(){return lx},PolyhedronGeometry:function(){return lx},PositionalAudio:function(){return uR},PropertyBinding:function(){return uG},PropertyMixer:function(){return uL},QuadraticBezierCurve:function(){return ll},QuadraticBezierCurve3:function(){return lh},Quaternion:function(){return nG},QuaternionKeyframeTrack:function(){return hE},QuaternionLinearInterpolant:function(){return hT},REVISION:function(){return r},RGBADepthPacking:function(){return tT},RGBAFormat:function(){return ez},RGBAIntegerFormat:function(){return ej},RGBA_ASTC_10x10_Format:function(){return ti},RGBA_ASTC_10x5_Format:function(){return tt},RGBA_ASTC_10x6_Format:function(){return tn},RGBA_ASTC_10x8_Format:function(){return tr},RGBA_ASTC_12x10_Format:function(){return ta},RGBA_ASTC_12x12_Format:function(){return ts},RGBA_ASTC_4x4_Format:function(){return e2},RGBA_ASTC_5x4_Format:function(){return e4},RGBA_ASTC_5x5_Format:function(){return e5},RGBA_ASTC_6x5_Format:function(){return e6},RGBA_ASTC_6x6_Format:function(){return e7},RGBA_ASTC_8x5_Format:function(){return e8},RGBA_ASTC_8x6_Format:function(){return e9},RGBA_ASTC_8x8_Format:function(){return te},RGBA_BPTC_Format:function(){return to},RGBA_ETC2_EAC_Format:function(){return e3},RGBA_PVRTC_2BPPV1_Format:function(){return e$},RGBA_PVRTC_4BPPV1_Format:function(){return eQ},RGBA_S3TC_DXT1_Format:function(){return eX},RGBA_S3TC_DXT3_Format:function(){return eJ},RGBA_S3TC_DXT5_Format:function(){return eY},RGBFormat:function(){return eB},RGB_ETC1_Format:function(){return e0},RGB_ETC2_Format:function(){return e1},RGB_PVRTC_2BPPV1_Format:function(){return eK},RGB_PVRTC_4BPPV1_Format:function(){return eZ},RGB_S3TC_DXT1_Format:function(){return eq},RGFormat:function(){return eV},RGIntegerFormat:function(){return eW},RawShaderMaterial:function(){return hs},Ray:function(){return rl},Raycaster:function(){return uJ},RectAreaLight:function(){return h5},RedFormat:function(){return eG},RedIntegerFormat:function(){return ek},ReinhardToneMapping:function(){return ee},RepeatWrapping:function(){return eu},ReplaceStencilOp:function(){return tI},ReverseSubtractEquation:function(){return A},RingBufferGeometry:function(){return l5},RingGeometry:function(){return l5},SRGBColorSpace:function(){return tC},Scene:function(){return s4},SceneUtils:function(){return dp},ShaderChunk:function(){return iX},ShaderLib:function(){return iY},ShaderMaterial:function(){return iP},ShadowMaterial:function(){return ha},Shape:function(){return lE},ShapeBufferGeometry:function(){return l6},ShapeGeometry:function(){return l6},ShapePath:function(){return cS},ShapeUtils:function(){return lQ},ShortType:function(){return eT},Skeleton:function(){return oA},SkeletonHelper:function(){return u9},SkinnedMesh:function(){return oM},SmoothShading:function(){return y},Source:function(){return nL},Sphere:function(){return re},SphereBufferGeometry:function(){return l7},SphereGeometry:function(){return l7},Spherical:function(){return uK},SphericalHarmonics3:function(){return h6},SplineCurve:function(){return lu},SpotLight:function(){return hZ},SpotLightHelper:function(){return u5},Sprite:function(){return od},SpriteMaterial:function(){return s8},SrcAlphaFactor:function(){return N},SrcAlphaSaturateFactor:function(){return H},SrcColorFactor:function(){return D},StaticCopyUsage:function(){return t$},StaticDrawUsage:function(){return tX},StaticReadUsage:function(){return tZ},StereoCamera:function(){return um},StreamCopyUsage:function(){return t1},StreamDrawUsage:function(){return tY},StreamReadUsage:function(){return tQ},StringKeyframeTrack:function(){return hA},SubtractEquation:function(){return E},SubtractiveBlending:function(){return M},TOUCH:function(){return a},TangentSpaceNormalMap:function(){return tE},TetrahedronBufferGeometry:function(){return l8},TetrahedronGeometry:function(){return l8},TextGeometry:function(){return dg},Texture:function(){return nI},TextureLoader:function(){return hk},TorusBufferGeometry:function(){return l9},TorusGeometry:function(){return l9},TorusKnotBufferGeometry:function(){return he},TorusKnotGeometry:function(){return he},Triangle:function(){return rj},TriangleFanDrawMode:function(){return tb},TriangleStripDrawMode:function(){return t_},TrianglesDrawMode:function(){return tx},TubeBufferGeometry:function(){return ht},TubeGeometry:function(){return ht},UVMapping:function(){return ei},Uint16Attribute:function(){return c8},Uint16BufferAttribute:function(){return r3},Uint32Attribute:function(){return de},Uint32BufferAttribute:function(){return r4},Uint8Attribute:function(){return c5},Uint8BufferAttribute:function(){return r$},Uint8ClampedAttribute:function(){return c6},Uint8ClampedBufferAttribute:function(){return r0},Uniform:function(){return uj},UniformsLib:function(){return iJ},UniformsUtils:function(){return iL},UnsignedByteType:function(){return ew},UnsignedInt248Type:function(){return eI},UnsignedIntType:function(){return eR},UnsignedShort4444Type:function(){return eP},UnsignedShort5551Type:function(){return eD},UnsignedShortType:function(){return eE},VSMShadowMap:function(){return p},Vector2:function(){return nc},Vector3:function(){return nk},Vector4:function(){return nN},VectorKeyframeTrack:function(){return hR},Vertex:function(){return c3},VertexColors:function(){return cX},VideoTexture:function(){return oQ},WebGL1Renderer:function(){return s1},WebGL3DRenderTarget:function(){return nF},WebGLArrayRenderTarget:function(){return nO},WebGLCubeRenderTarget:function(){return iz},WebGLMultipleRenderTargets:function(){return nH},WebGLMultisampleRenderTarget:function(){return d_},WebGLRenderTarget:function(){return nB},WebGLRenderTargetCube:function(){return du},WebGLRenderer:function(){return s0},WebGLUtils:function(){return sq},WireframeGeometry:function(){return hn},WireframeHelper:function(){return ds},WrapAroundEnding:function(){return tg},XHRLoader:function(){return dl},ZeroCurvatureEnding:function(){return tf},ZeroFactor:function(){return L},ZeroSlopeEnding:function(){return tm},ZeroStencilOp:function(){return tP},_SRGBAFormat:function(){return t4},sRGBEncoding:function(){return tw}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let r="140",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,l=2,h=3,u=0,c=1,d=2,p=3,f=0,m=1,g=2,v=1,y=2,x=0,_=1,b=2,M=3,w=4,S=5,T=100,E=101,A=102,R=103,C=104,L=200,P=201,D=202,I=203,N=204,B=205,z=206,O=207,U=208,F=209,H=210,G=0,k=1,V=2,W=3,j=4,q=5,X=6,J=7,Y=0,Z=1,K=2,Q=0,$=1,ee=2,et=3,en=4,er=5,ei=300,ea=301,es=302,eo=303,el=304,eh=306,eu=1e3,ec=1001,ed=1002,ep=1003,ef=1004,em=1004,eg=1005,ev=1005,ey=1006,ex=1007,e_=1007,eb=1008,eM=1008,ew=1009,eS=1010,eT=1011,eE=1012,eA=1013,eR=1014,eC=1015,eL=1016,eP=1017,eD=1018,eI=1020,eN=1021,eB=1022,ez=1023,eO=1024,eU=1025,eF=1026,eH=1027,eG=1028,ek=1029,eV=1030,eW=1031,ej=1033,eq=33776,eX=33777,eJ=33778,eY=33779,eZ=35840,eK=35841,eQ=35842,e$=35843,e0=36196,e1=37492,e3=37496,e2=37808,e4=37809,e5=37810,e6=37811,e7=37812,e8=37813,e9=37814,te=37815,tt=37816,tn=37817,tr=37818,ti=37819,ta=37820,ts=37821,to=36492,tl=2200,th=2201,tu=2202,tc=2300,td=2301,tp=2302,tf=2400,tm=2401,tg=2402,tv=2500,ty=2501,tx=0,t_=1,tb=2,tM=3e3,tw=3001,tS=3200,tT=3201,tE=0,tA=1,tR="",tC="srgb",tL="srgb-linear",tP=0,tD=7680,tI=7681,tN=7682,tB=7683,tz=34055,tO=34056,tU=5386,tF=512,tH=513,tG=514,tk=515,tV=516,tW=517,tj=518,tq=519,tX=35044,tJ=35048,tY=35040,tZ=35045,tK=35049,tQ=35041,t$=35046,t0=35050,t1=35042,t3="100",t2="300 es",t4=1035;class t5{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let n=this._listeners,r=n[e];if(void 0!==r){let i=r.indexOf(t);-1!==i&&r.splice(i,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;let r=n.slice(0);for(let i=0,a=r.length;i<a;i++)r[i].call(this,e);e.target=null}}}let t6=[];for(let t7=0;t7<256;t7++)t6[t7]=(t7<16?"0":"")+t7.toString(16);let t8=1234567,t9=Math.PI/180,ne=180/Math.PI;function nt(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=t6[255&e]+t6[e>>8&255]+t6[e>>16&255]+t6[e>>24&255]+"-"+t6[255&t]+t6[t>>8&255]+"-"+t6[t>>16&15|64]+t6[t>>24&255]+"-"+t6[63&n|128]+t6[n>>8&255]+"-"+t6[n>>16&255]+t6[n>>24&255]+t6[255&r]+t6[r>>8&255]+t6[r>>16&255]+t6[r>>24&255];return i.toLowerCase()}function nn(e,t,n){return Math.max(t,Math.min(n,e))}function nr(e,t){return(e%t+t)%t}function ni(e,t,n){return(1-n)*e+n*t}function na(e){return e*t9}function ns(e){return e*ne}function no(e){return(e&e-1)==0&&0!==e}function nl(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function nh(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var nu=Object.freeze({__proto__:null,DEG2RAD:t9,RAD2DEG:ne,generateUUID:nt,clamp:nn,euclideanModulo:nr,mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:ni,damp:function(e,t,n,r){return ni(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(nr(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(t8=e);let t=t8+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:na,radToDeg:ns,isPowerOfTwo:no,ceilPowerOfTwo:nl,floorPowerOfTwo:nh,setQuaternionFromProperEuler:function(e,t,n,r,i){let a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),h=a((t+r)/2),u=s((t+r)/2),c=a((t-r)/2),d=s((t-r)/2),p=a((r-t)/2),f=s((r-t)/2);switch(i){case"XYX":e.set(o*u,l*c,l*d,o*h);break;case"YZY":e.set(l*d,o*u,l*c,o*h);break;case"ZXZ":e.set(l*c,l*d,o*u,o*h);break;case"XZX":e.set(o*u,l*f,l*p,o*h);break;case"YXY":e.set(l*p,o*u,l*f,o*h);break;case"ZYZ":e.set(l*f,l*p,o*u,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}},denormalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}});class nc{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}nc.prototype.isVector2=!0;class nd{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=r,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,r=t.elements,i=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],h=n[4],u=n[7],c=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],_=r[2],b=r[5],M=r[8];return i[0]=a*f+s*v+o*_,i[3]=a*m+s*y+o*b,i[6]=a*g+s*x+o*M,i[1]=l*f+h*v+u*_,i[4]=l*m+h*y+u*b,i[7]=l*g+h*x+u*M,i[2]=c*f+d*v+p*_,i[5]=c*m+d*y+p*b,i[8]=c*g+d*x+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-n*i*h+n*s*o+r*i*l-r*a*o}invert(){let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=h*a-s*l,c=s*o-h*i,d=l*i-a*o,p=t*u+n*c+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(r*l-h*n)*f,e[2]=(s*n-r*a)*f,e[3]=c*f,e[4]=(h*t-r*o)*f,e[5]=(r*i-s*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(a*t-n*i)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){let o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*a+l*s)+a+e,-r*l,r*o,-r*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){let t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],s=r[6],o=r[1],l=r[4],h=r[7];return r[0]=t*i+n*o,r[3]=t*a+n*l,r[6]=t*s+n*h,r[1]=-n*i+t*o,r[4]=-n*a+t*l,r[7]=-n*s+t*h,this}translate(e,t){let n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){let t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function np(e){for(let t=e.length-1;t>=0;--t)if(e[t]>65535)return!0;return!1}nd.prototype.isMatrix3=!0;let nf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function nm(e,t){return new nf[e](t)}function ng(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function nv(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function ny(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let nx={[tC]:{[tL]:nv},[tL]:{[tC]:ny}},n_={legacyMode:!0,get workingColorSpace(){return tL},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(nx[t]&&void 0!==nx[t][n]){let r=nx[t][n];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},nb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},nM={r:0,g:0,b:0},nw={h:0,s:0,l:0},nS={h:0,s:0,l:0};function nT(e,t,n){return(n<0&&(n+=1),n>1&&(n-=1),n<1/6)?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*6*(2/3-n):e}function nE(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class nA{constructor(e,t,n){if(void 0===t&&void 0===n)return this.set(e);return this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=tC){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,n_.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=tL){return this.r=e,this.g=t,this.b=n,n_.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=tL){if(e=nr(e,1),t=nn(t,0,1),n=nn(n,0,1),0===t)this.r=this.g=this.b=n;else{let i=n<=.5?n*(1+t):n+t-n*t,a=2*n-i;this.r=nT(a,i,e+1/3),this.g=nT(a,i,e),this.b=nT(a,i,e-1/3)}return n_.toWorkingColorSpace(this,r),this}setStyle(e,t=tC){function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i,a=r[1],s=r[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,n_.toWorkingColorSpace(this,t),n(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,n_.toWorkingColorSpace(this,t),n(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){let o=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,h=parseInt(i[3],10)/100;return n(i[4]),this.setHSL(o,l,h,t)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){let u=r[1],c=u.length;if(3===c)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,n_.toWorkingColorSpace(this,t),this;if(6===c)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,n_.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=tC){let n=nb[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=nv(e.r),this.g=nv(e.g),this.b=nv(e.b),this}copyLinearToSRGB(e){return this.r=ny(e.r),this.g=ny(e.g),this.b=ny(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=tC){return n_.fromWorkingColorSpace(nE(this,nM),e),nn(255*nM.r,0,255)<<16^nn(255*nM.g,0,255)<<8^nn(255*nM.b,0,255)<<0}getHexString(e=tC){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=tL){n_.fromWorkingColorSpace(nE(this,nM),t);let n=nM.r,r=nM.g,i=nM.b,a=Math.max(n,r,i),s=Math.min(n,r,i),o,l,h=(s+a)/2;if(s===a)o=0,l=0;else{let u=a-s;switch(l=h<=.5?u/(a+s):u/(2-a-s),a){case n:o=(r-i)/u+(r<i?6:0);break;case r:o=(i-n)/u+2;break;case i:o=(n-r)/u+4}o/=6}return e.h=o,e.s=l,e.l=h,e}getRGB(e,t=tL){return n_.fromWorkingColorSpace(nE(this,nM),t),e.r=nM.r,e.g=nM.g,e.b=nM.b,e}getStyle(e=tC){return(n_.fromWorkingColorSpace(nE(this,nM),e),e!==tC)?`color(${e} ${nM.r} ${nM.g} ${nM.b})`:`rgb(${255*nM.r|0},${255*nM.g|0},${255*nM.b|0})`}offsetHSL(e,t,n){return this.getHSL(nw),nw.h+=e,nw.s+=t,nw.l+=n,this.setHSL(nw.h,nw.s,nw.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(nw),e.getHSL(nS);let n=ni(nw.h,nS.h,t),r=ni(nw.s,nS.s,t),i=ni(nw.l,nS.l,t);return this.setHSL(n,r,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}nA.NAMES=nb,nA.prototype.isColor=!0,nA.prototype.r=1,nA.prototype.g=1,nA.prototype.b=1;let nR;class nC{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===nR&&(nR=ng("canvas")),nR.width=e.width,nR.height=e.height;let n=nR.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=nR}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=ng("canvas");t.width=e.width,t.height=e.height;let n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);let r=n.getImageData(0,0,e.width,e.height),i=r.data;for(let a=0;a<i.length;a++)i[a]=255*nv(i[a]/255);return n.putImageData(r,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let s=e.data.slice(0);for(let o=0;o<s.length;o++)s instanceof Uint8Array||s instanceof Uint8ClampedArray?s[o]=Math.floor(255*nv(s[o]/255)):s[o]=nv(s[o]);return{data:s,width:e.width,height:e.height}}}}class nL{constructor(e=null){this.uuid=nt(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let i;if(Array.isArray(r)){i=[];for(let a=0,s=r.length;a<s;a++)r[a].isDataTexture?i.push(nP(r[a].image)):i.push(nP(r[a]))}else i=nP(r);n.url=i}return t||(e.images[this.uuid]=n),n}}function nP(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?nC.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}nL.prototype.isSource=!0;let nD=0;class nI extends t5{constructor(e=nI.DEFAULT_IMAGE,t=nI.DEFAULT_MAPPING,n=ec,r=ec,i=ey,a=eb,s=ez,o=ew,l=1,h=tM){super(),Object.defineProperty(this,"id",{value:nD++}),this.uuid=nt(),this.name="",this.source=new nL(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new nc(0,0),this.repeat=new nc(1,1),this.center=new nc(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nd,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ei)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case eu:e.x=e.x-Math.floor(e.x);break;case ec:e.x=e.x<0?0:1;break;case ed:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case eu:e.y=e.y-Math.floor(e.y);break;case ec:e.y=e.y<0?0:1;break;case ed:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}nI.DEFAULT_IMAGE=null,nI.DEFAULT_MAPPING=ei,nI.prototype.isTexture=!0;class nN{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i,a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],u=a[5],c=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(s+u+f-3))return this.set(1,0,0,0),this;t=Math.PI;let m=(s+1)/2,g=(u+1)/2,v=(f+1)/2,y=(o+h)/4,x=(l+d)/4,_=(c+p)/4;return m>g&&m>v?m<.01?(n=0,r=.707106781,i=.707106781):(r=y/(n=Math.sqrt(m)),i=x/n):g>v?g<.01?(n=.707106781,r=0,i=.707106781):(n=y/(r=Math.sqrt(g)),i=_/r):v<.01?(n=.707106781,r=.707106781,i=0):(n=x/(i=Math.sqrt(v)),r=_/i),this.set(n,r,i,t),this}let b=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(b)&&(b=1),this.x=(p-c)/b,this.y=(l-d)/b,this.z=(h-o)/b,this.w=Math.acos((s+u+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}nN.prototype.isVector4=!0;class nB extends t5{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new nN(0,0,e,t),this.scissorTest=!1,this.viewport=new nN(0,0,e,t),this.texture=new nI({width:e,height:t,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ey,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}nB.prototype.isWebGLRenderTarget=!0;class nz extends nI{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=ep,this.minFilter=ep,this.wrapR=ec,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}nz.prototype.isDataArrayTexture=!0;class nO extends nB{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new nz(null,e,t,n),this.texture.isRenderTargetTexture=!0}}nO.prototype.isWebGLArrayRenderTarget=!0;class nU extends nI{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=ep,this.minFilter=ep,this.wrapR=ec,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}nU.prototype.isData3DTexture=!0;class nF extends nB{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new nU(null,e,t,n),this.texture.isRenderTargetTexture=!0}}nF.prototype.isWebGL3DRenderTarget=!0;class nH extends nB{constructor(e,t,n,r={}){super(e,t,r);let i=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=i.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}nH.prototype.isWebGLMultipleRenderTargets=!0;class nG{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,i,a,s){let o=n[r+0],l=n[r+1],h=n[r+2],u=n[r+3],c=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||o!==c||l!==d||h!==p){let m=1-s,g=o*c+l*d+h*p+u*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){let x=Math.sqrt(y),_=Math.atan2(x,g*v);m=Math.sin(m*_)/x,s=Math.sin(s*_)/x}let b=s*v;if(o=o*m+c*b,l=l*m+d*b,h=h*m+p*b,u=u*m+f*b,m===1-s){let M=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=M,l*=M,h*=M,u*=M}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,r,i,a){let s=n[r],o=n[r+1],l=n[r+2],h=n[r+3],u=i[a],c=i[a+1],d=i[a+2],p=i[a+3];return e[t]=s*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-s*d,e[t+2]=l*p+h*d+s*c-o*u,e[t+3]=h*p-s*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let n=e._x,r=e._y,i=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(n/2),h=s(r/2),u=s(i/2),c=o(n/2),d=o(r/2),p=o(i/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=n+s+u;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(h-o)*d,this._y=(i-l)*d,this._z=(a-r)*d}else if(n>s&&n>u){let p=2*Math.sqrt(1+n-s-u);this._w=(h-o)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(i+l)/p}else if(s>u){let f=2*Math.sqrt(1+s-n-u);this._w=(i-l)/f,this._x=(r+a)/f,this._y=.25*f,this._z=(o+h)/f}else{let m=2*Math.sqrt(1+u-n-s);this._w=(a-r)/m,this._x=(i+l)/m,this._y=(o+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nn(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);return 0===n||this.slerp(e,Math.min(1,t/n)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let n=e._x,r=e._y,i=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=n*h+a*s+r*l-i*o,this._y=r*h+a*o+i*s-n*l,this._z=i*h+a*l+n*o-r*s,this._w=a*h-n*s-r*o-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let n=this._x,r=this._y,i=this._z,a=this._w,s=a*e._w+n*e._x+r*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;let o=1-s*s;if(o<=Number.EPSILON){let l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}let h=Math.sqrt(o),u=Math.atan2(h,s),c=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=a*c+this._w*d,this._x=n*c+this._x*d,this._y=r*c+this._y*d,this._z=i*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){let e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(i),n*Math.cos(i),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}nG.prototype.isQuaternion=!0;class nk{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(nW.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(nW.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this}applyQuaternion(e){let t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*n,h=o*n+s*t-i*r,u=o*r+i*n-a*t,c=-i*t-a*n-s*r;return this.x=l*o+-(c*i)+-(h*s)- -(u*a),this.y=h*o+-(c*a)+-(u*i)- -(l*s),this.z=u*o+-(c*s)+-(l*a)- -(h*i),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,r=e.y,i=e.z,a=t.x,s=t.y,o=t.z;return this.x=r*o-i*s,this.y=i*a-n*o,this.z=n*s-r*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return nV.copy(this).projectOnVector(e),this.sub(nV)}reflect(e){return this.sub(nV.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}nk.prototype.isVector3=!0;let nV=new nk,nW=new nG;class nj{constructor(e=new nk(Infinity,Infinity,Infinity),t=new nk(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,n=Infinity,r=Infinity,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let h=e[o],u=e[o+1],c=e[o+2];h<t&&(t=h),u<n&&(n=u),c<r&&(r=c),h>i&&(i=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,n,r),this.max.set(i,a,s),this}setFromBufferAttribute(e){let t=Infinity,n=Infinity,r=Infinity,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let h=e.getX(o),u=e.getY(o),c=e.getZ(o);h<t&&(t=h),u<n&&(n=u),c<r&&(r=c),h>i&&(i=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,n,r),this.max.set(i,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=nX.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let n=e.geometry;if(void 0!==n){if(t&&void 0!=n.attributes&&void 0!==n.attributes.position){let r=n.attributes.position;for(let i=0,a=r.count;i<a;i++)nX.fromBufferAttribute(r,i).applyMatrix4(e.matrixWorld),this.expandByPoint(nX)}else null===n.boundingBox&&n.computeBoundingBox(),nJ.copy(n.boundingBox),nJ.applyMatrix4(e.matrixWorld),this.union(nJ)}let s=e.children;for(let o=0,l=s.length;o<l;o++)this.expandByObject(s[o],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,nX),nX.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(n1),n3.subVectors(this.max,n1),nY.subVectors(e.a,n1),nZ.subVectors(e.b,n1),nK.subVectors(e.c,n1),nQ.subVectors(nZ,nY),n$.subVectors(nK,nZ),n0.subVectors(nY,nK);let t=[0,-nQ.z,nQ.y,0,-n$.z,n$.y,0,-n0.z,n0.y,nQ.z,0,-nQ.x,n$.z,0,-n$.x,n0.z,0,-n0.x,-nQ.y,nQ.x,0,-n$.y,n$.x,0,-n0.y,n0.x,0];return!!(n5(t,nY,nZ,nK,n3)&&n5(t=[1,0,0,0,1,0,0,0,1],nY,nZ,nK,n3))&&(n2.crossVectors(nQ,n$),n5(t=[n2.x,n2.y,n2.z],nY,nZ,nK,n3))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=nX.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(nX).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(nq[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),nq[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),nq[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),nq[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),nq[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),nq[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),nq[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),nq[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(nq)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}nj.prototype.isBox3=!0;let nq=[new nk,new nk,new nk,new nk,new nk,new nk,new nk,new nk],nX=new nk,nJ=new nj,nY=new nk,nZ=new nk,nK=new nk,nQ=new nk,n$=new nk,n0=new nk,n1=new nk,n3=new nk,n2=new nk,n4=new nk;function n5(e,t,n,r,i){for(let a=0,s=e.length-3;a<=s;a+=3){n4.fromArray(e,a);let o=i.x*Math.abs(n4.x)+i.y*Math.abs(n4.y)+i.z*Math.abs(n4.z),l=t.dot(n4),h=n.dot(n4),u=r.dot(n4);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>o)return!1}return!0}let n6=new nj,n7=new nk,n8=new nk,n9=new nk;class re{constructor(e=new nk,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;void 0!==t?n.copy(t):n6.setFromPoints(e).getCenter(n);let r=0;for(let i=0,a=e.length;i<a;i++)r=Math.max(r,n.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){n9.subVectors(e,this.center);let t=n9.lengthSq();if(t>this.radius*this.radius){let n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(n9.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return!0===this.center.equals(e.center)?n8.set(0,0,1).multiplyScalar(e.radius):n8.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(n7.copy(e.center).add(n8)),this.expandByPoint(n7.copy(e.center).sub(n8)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let rt=new nk,rn=new nk,rr=new nk,ri=new nk,ra=new nk,rs=new nk,ro=new nk;class rl{constructor(e=new nk,t=new nk(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=rt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rt.copy(this.direction).multiplyScalar(t).add(this.origin),rt.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){rn.copy(e).add(t).multiplyScalar(.5),rr.copy(t).sub(e).normalize(),ri.copy(this.origin).sub(rn);let i=.5*e.distanceTo(t),a=-this.direction.dot(rr),s=ri.dot(this.direction),o=-ri.dot(rr),l=ri.lengthSq(),h=Math.abs(1-a*a),u,c,d,p;if(h>0){if(u=a*o-s,c=a*s-o,p=i*h,u>=0){if(c>=-p){if(c<=p){let f=1/h;u*=f,c*=f,d=u*(u+a*c+2*s)+c*(a*u+c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=i)+s)))*u+c*(c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=-i)+s)))*u+c*(c+2*o)+l}else c<=-p?(c=(u=Math.max(0,-(-a*i+s)))>0?-i:Math.min(Math.max(-i,-o),i),d=-u*u+c*(c+2*o)+l):c<=p?(u=0,d=(c=Math.min(Math.max(-i,-o),i))*(c+2*o)+l):(c=(u=Math.max(0,-(a*i+s)))>0?i:Math.min(Math.max(-i,-o),i),d=-u*u+c*(c+2*o)+l)}else c=a>0?-i:i,d=-(u=Math.max(0,-(a*c+s)))*u+c*(c+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(rr).multiplyScalar(c).add(rn),d}intersectSphere(e,t){rt.subVectors(e.center,this.origin);let n=rt.dot(this.direction),r=rt.dot(rt)-n*n,i=e.radius*e.radius;if(r>i)return null;let a=Math.sqrt(i-r),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let n=e.normal.dot(this.direction);return n*t<0}intersectBox(e,t){let n,r,i,a,s,o,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(n=(e.min.x-c.x)*l,r=(e.max.x-c.x)*l):(n=(e.max.x-c.x)*l,r=(e.min.x-c.x)*l),h>=0?(i=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(i=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),n>a||i>r)?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),u>=0?(s=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(s=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),n>o||s>r)?null:((s>n||n!=n)&&(n=s),(o<r||r!=r)&&(r=o),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return null!==this.intersectBox(e,rt)}intersectTriangle(e,t,n,r,i){ra.subVectors(t,e),rs.subVectors(n,e),ro.crossVectors(ra,rs);let a=this.direction.dot(ro),s;if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}ri.subVectors(this.origin,e);let o=s*this.direction.dot(rs.crossVectors(ri,rs));if(o<0)return null;let l=s*this.direction.dot(ra.cross(ri));if(l<0||o+l>a)return null;let h=-s*ri.dot(ro);return h<0?null:this.at(h/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class rh{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,h,u,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new rh().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,n=e.elements,r=1/ru.setFromMatrixColumn(e,0).length(),i=1/ru.setFromMatrixColumn(e,1).length(),a=1/ru.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(r),l=Math.sin(r),h=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){let c=a*h,d=a*u,p=s*h,f=s*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-s*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=a*o}else if("YXZ"===e.order){let m=o*h,g=o*u,v=l*h,y=l*u;t[0]=m+y*s,t[4]=v*s-g,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-s,t[2]=g*s-v,t[6]=y+m*s,t[10]=a*o}else if("ZXY"===e.order){let x=o*h,_=o*u,b=l*h,M=l*u;t[0]=x-M*s,t[4]=-a*u,t[8]=b+_*s,t[1]=_+b*s,t[5]=a*h,t[9]=M-x*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let w=a*h,S=a*u,T=s*h,E=s*u;t[0]=o*h,t[4]=T*l-S,t[8]=w*l+E,t[1]=o*u,t[5]=E*l+w,t[9]=S*l-T,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let A=a*o,R=a*l,C=s*o,L=s*l;t[0]=o*h,t[4]=L-A*u,t[8]=C*u+R,t[1]=u,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=R*u+C,t[10]=A-L*u}else if("XZY"===e.order){let P=a*o,D=a*l,I=s*o,N=s*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=P*u+N,t[5]=a*h,t[9]=D*u-I,t[2]=I*u-D,t[6]=s*h,t[10]=N*u+P}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(rd,e,rp)}lookAt(e,t,n){let r=this.elements;return rg.subVectors(e,t),0===rg.lengthSq()&&(rg.z=1),rg.normalize(),rf.crossVectors(n,rg),0===rf.lengthSq()&&(1===Math.abs(n.z)?rg.x+=1e-4:rg.z+=1e-4,rg.normalize(),rf.crossVectors(n,rg)),rf.normalize(),rm.crossVectors(rg,rf),r[0]=rf.x,r[4]=rm.x,r[8]=rg.x,r[1]=rf.y,r[5]=rm.y,r[9]=rg.y,r[2]=rf.z,r[6]=rm.z,r[10]=rg.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,r=t.elements,i=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],h=n[1],u=n[5],c=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=r[0],M=r[4],w=r[8],S=r[12],T=r[1],E=r[5],A=r[9],R=r[13],C=r[2],L=r[6],P=r[10],D=r[14],I=r[3],N=r[7],B=r[11],z=r[15];return i[0]=a*b+s*T+o*C+l*I,i[4]=a*M+s*E+o*L+l*N,i[8]=a*w+s*A+o*P+l*B,i[12]=a*S+s*R+o*D+l*z,i[1]=h*b+u*T+c*C+d*I,i[5]=h*M+u*E+c*L+d*N,i[9]=h*w+u*A+c*P+d*B,i[13]=h*S+u*R+c*D+d*z,i[2]=p*b+f*T+m*C+g*I,i[6]=p*M+f*E+m*L+g*N,i[10]=p*w+f*A+m*P+g*B,i[14]=p*S+f*R+m*D+g*z,i[3]=v*b+y*T+x*C+_*I,i[7]=v*M+y*E+x*L+_*N,i[11]=v*w+y*A+x*P+_*B,i[15]=v*S+y*R+x*D+_*z,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],g=e[15];return p*(+i*o*u-r*l*u-i*s*c+n*l*c+r*s*d-n*o*d)+f*(+t*o*d-t*l*c+i*a*c-r*a*d+r*l*h-i*o*h)+m*(+t*l*u-t*s*d-i*a*u+n*a*d+i*s*h-n*l*h)+g*(-r*s*h-t*o*u+t*s*c+r*a*u-n*a*c+n*o*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){let r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=u*m*l-f*c*l+f*o*d-s*m*d-u*o*g+s*c*g,y=p*c*l-h*m*l-p*o*d+a*m*d+h*o*g-a*c*g,x=h*f*l-p*u*l+p*s*d-a*f*d-h*s*g+a*u*g,_=p*u*o-h*f*o-p*s*c+a*f*c+h*s*m-a*u*m,b=t*v+n*y+r*x+i*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/b;return e[0]=v*M,e[1]=(f*c*i-u*m*i-f*r*d+n*m*d+u*r*g-n*c*g)*M,e[2]=(s*m*i-f*o*i+f*r*l-n*m*l-s*r*g+n*o*g)*M,e[3]=(u*o*i-s*c*i-u*r*l+n*c*l+s*r*d-n*o*d)*M,e[4]=y*M,e[5]=(h*m*i-p*c*i+p*r*d-t*m*d-h*r*g+t*c*g)*M,e[6]=(p*o*i-a*m*i-p*r*l+t*m*l+a*r*g-t*o*g)*M,e[7]=(a*c*i-h*o*i+h*r*l-t*c*l-a*r*d+t*o*d)*M,e[8]=x*M,e[9]=(p*u*i-h*f*i-p*n*d+t*f*d+h*n*g-t*u*g)*M,e[10]=(a*f*i-p*s*i+p*n*l-t*f*l-a*n*g+t*s*g)*M,e[11]=(h*s*i-a*u*i-h*n*l+t*u*l+a*n*d-t*s*d)*M,e[12]=_*M,e[13]=(h*f*r-p*u*r+p*n*c-t*f*c-h*n*m+t*u*m)*M,e[14]=(p*s*r-a*f*r-p*n*o+t*f*o+a*n*m-t*s*m)*M,e[15]=(a*u*r-h*s*r+h*n*o-t*u*o-a*n*c+t*s*c)*M,this}scale(e){let t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,s=e.y,o=e.z,l=i*a,h=i*s;return this.set(l*a+n,l*s-r*o,l*o+r*s,0,l*s+r*o,h*s+n,h*o-r*a,0,l*o-r*s,h*o+r*a,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){let r=this.elements,i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,h=a+a,u=s+s,c=i*l,d=i*h,p=i*u,f=a*h,m=a*u,g=s*u,v=o*l,y=o*h,x=o*u,_=n.x,b=n.y,M=n.z;return r[0]=(1-(f+g))*_,r[1]=(d+x)*_,r[2]=(p-y)*_,r[3]=0,r[4]=(d-x)*b,r[5]=(1-(c+g))*b,r[6]=(m+v)*b,r[7]=0,r[8]=(p+y)*M,r[9]=(m-v)*M,r[10]=(1-(c+f))*M,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){let r=this.elements,i=ru.set(r[0],r[1],r[2]).length(),a=ru.set(r[4],r[5],r[6]).length(),s=ru.set(r[8],r[9],r[10]).length(),o=this.determinant();o<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],rc.copy(this);let l=1/i,h=1/a,u=1/s;return rc.elements[0]*=l,rc.elements[1]*=l,rc.elements[2]*=l,rc.elements[4]*=h,rc.elements[5]*=h,rc.elements[6]*=h,rc.elements[8]*=u,rc.elements[9]*=u,rc.elements[10]*=u,t.setFromRotationMatrix(rc),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let s=this.elements;return s[0]=2*i/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*i/(n-r),s[9]=(n+r)/(n-r),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+i)/(a-i),s[14]=-2*a*i/(a-i),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){let s=this.elements,o=1/(t-e),l=1/(n-r),h=1/(a-i);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((n+r)*l),s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-((a+i)*h),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}rh.prototype.isMatrix4=!0;let ru=new nk,rc=new rh,rd=new nk(0,0,0),rp=new nk(1,1,1),rf=new nk,rm=new nk,rg=new nk,rv=new rh,ry=new nG;class rx{constructor(e=0,t=0,n=0,r=rx.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){let r=e.elements,i=r[0],a=r[4],s=r[8],o=r[1],l=r[5],h=r[9],u=r[2],c=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(nn(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-nn(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(nn(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-nn(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(nn(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-nn(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return rv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(rv,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ry.setFromEuler(this),this.setFromQuaternion(ry,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}rx.prototype.isEuler=!0,rx.DefaultOrder="XYZ",rx.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class r_{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let rb=0,rM=new nk,rw=new nG,rS=new rh,rT=new nk,rE=new nk,rA=new nk,rR=new nG,rC=new nk(1,0,0),rL=new nk(0,1,0),rP=new nk(0,0,1),rD={type:"added"},rI={type:"removed"};class rN extends t5{constructor(){super(),Object.defineProperty(this,"id",{value:rb++}),this.uuid=nt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=rN.DefaultUp.clone();let e=new nk,t=new rx,n=new nG,r=new nk(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new rh},normalMatrix:{value:new nd}}),this.matrix=new rh,this.matrixWorld=new rh,this.matrixAutoUpdate=rN.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new r_,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return rw.setFromAxisAngle(e,t),this.quaternion.multiply(rw),this}rotateOnWorldAxis(e,t){return rw.setFromAxisAngle(e,t),this.quaternion.premultiply(rw),this}rotateX(e){return this.rotateOnAxis(rC,e)}rotateY(e){return this.rotateOnAxis(rL,e)}rotateZ(e){return this.rotateOnAxis(rP,e)}translateOnAxis(e,t){return rM.copy(e).applyQuaternion(this.quaternion),this.position.add(rM.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rC,e)}translateY(e){return this.translateOnAxis(rL,e)}translateZ(e){return this.translateOnAxis(rP,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(rS.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?rT.copy(e):rT.set(e,t,n);let r=this.parent;this.updateWorldMatrix(!0,!1),rE.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?rS.lookAt(rE,rT,this.up):rS.lookAt(rT,rE,this.up),this.quaternion.setFromRotationMatrix(rS),r&&(rS.extractRotation(r.matrixWorld),rw.setFromRotationMatrix(rS),this.quaternion.premultiply(rw.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(rD)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let n=this.children.indexOf(e);return -1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(rI)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(rI)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),rS.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),rS.multiply(e.parent.matrixWorld)),e.applyMatrix4(rS),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){let i=this.children[n],a=i.getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rE,e,rA),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rE,rR,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){let n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let r=this.children;for(let i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);let a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){let s=a.shapes;if(Array.isArray(s))for(let o=0,l=s.length;o<l;o++){let h=s[o];i(e.shapes,h)}else i(e.shapes,s)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let u=[];for(let c=0,d=this.material.length;c<d;c++)u.push(i(e.materials,this.material[c]));r.material=u}else r.material=i(e.materials,this.material)}if(this.children.length>0){r.children=[];for(let p=0;p<this.children.length;p++)r.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];r.animations.push(i(e.animations,m))}}if(t){let g=S(e.geometries),v=S(e.materials),y=S(e.textures),x=S(e.images),_=S(e.shapes),b=S(e.skeletons),M=S(e.animations),w=S(e.nodes);g.length>0&&(n.geometries=g),v.length>0&&(n.materials=v),y.length>0&&(n.textures=y),x.length>0&&(n.images=x),_.length>0&&(n.shapes=_),b.length>0&&(n.skeletons=b),M.length>0&&(n.animations=M),w.length>0&&(n.nodes=w)}return n.object=r,n;function S(e){let t=[];for(let n in e){let r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++){let r=e.children[n];this.add(r.clone())}return this}}rN.DefaultUp=new nk(0,1,0),rN.DefaultMatrixAutoUpdate=!0,rN.prototype.isObject3D=!0;let rB=new nk,rz=new nk,rO=new nk,rU=new nk,rF=new nk,rH=new nk,rG=new nk,rk=new nk,rV=new nk,rW=new nk;class rj{constructor(e=new nk,t=new nk,n=new nk){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),rB.subVectors(e,t),r.cross(rB);let i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){rB.subVectors(r,t),rz.subVectors(n,t),rO.subVectors(e,t);let a=rB.dot(rB),s=rB.dot(rz),o=rB.dot(rO),l=rz.dot(rz),h=rz.dot(rO),u=a*l-s*s;if(0===u)return i.set(-2,-1,-1);let c=1/u,d=(l*o-s*h)*c,p=(a*h-s*o)*c;return i.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,rU),rU.x>=0&&rU.y>=0&&rU.x+rU.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,rU),o.set(0,0),o.addScaledVector(i,rU.x),o.addScaledVector(a,rU.y),o.addScaledVector(s,rU.z),o}static isFrontFacing(e,t,n,r){return rB.subVectors(n,t),rz.subVectors(e,t),0>rB.cross(rz).dot(r)}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return rB.subVectors(this.c,this.b),rz.subVectors(this.a,this.b),.5*rB.cross(rz).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return rj.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return rj.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return rj.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return rj.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return rj.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n=this.a,r=this.b,i=this.c,a,s;rF.subVectors(r,n),rH.subVectors(i,n),rk.subVectors(e,n);let o=rF.dot(rk),l=rH.dot(rk);if(o<=0&&l<=0)return t.copy(n);rV.subVectors(e,r);let h=rF.dot(rV),u=rH.dot(rV);if(h>=0&&u<=h)return t.copy(r);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return a=o/(o-h),t.copy(n).addScaledVector(rF,a);rW.subVectors(e,i);let d=rF.dot(rW),p=rH.dot(rW);if(p>=0&&d<=p)return t.copy(i);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),t.copy(n).addScaledVector(rH,s);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return rG.subVectors(i,r),s=(u-h)/(u-h+(d-p)),t.copy(r).addScaledVector(rG,s);let g=1/(m+f+c);return a=f*g,s=c*g,t.copy(n).addScaledVector(rF,a).addScaledVector(rH,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rq=0;class rX extends t5{constructor(){super(),Object.defineProperty(this,"id",{value:rq++}),this.uuid=nt(),this.name="",this.type="Material",this.blending=_,this.side=f,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=N,this.blendDst=B,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=tq,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tD,this.stencilZFail=tD,this.stencilZPass=tD,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===v;continue}let r=this[t];if(void 0===r){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){let t=[];for(let n in e){let r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==_&&(n.blending=this.blending),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){let i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(null!==t){let r=t.length;n=Array(r);for(let i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}rX.prototype.isMaterial=!0,rX.fromType=function(){return null};class rJ extends rX{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new nA(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}rJ.prototype.isMeshBasicMaterial=!0;let rY=new nk,rZ=new nc;class rK{constructor(e,t,n){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=tX,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,n=0;for(let r=0,i=e.length;r<i;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new nA),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}copyVector2sArray(e){let t=this.array,n=0;for(let r=0,i=e.length;r<i;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new nc),t[n++]=a.x,t[n++]=a.y}return this}copyVector3sArray(e){let t=this.array,n=0;for(let r=0,i=e.length;r<i;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new nk),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}copyVector4sArray(e){let t=this.array,n=0;for(let r=0,i=e.length;r<i;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new nN),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)rZ.fromBufferAttribute(this,t),rZ.applyMatrix3(e),this.setXY(t,rZ.x,rZ.y);else if(3===this.itemSize)for(let r=0,i=this.count;r<i;r++)rY.fromBufferAttribute(this,r),rY.applyMatrix3(e),this.setXYZ(r,rY.x,rY.y,rY.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)rY.fromBufferAttribute(this,t),rY.applyMatrix4(e),this.setXYZ(t,rY.x,rY.y,rY.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rY.fromBufferAttribute(this,t),rY.applyNormalMatrix(e),this.setXYZ(t,rY.x,rY.y,rY.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rY.fromBufferAttribute(this,t),rY.transformDirection(e),this.setXYZ(t,rY.x,rY.y,rY.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==tX&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}rK.prototype.isBufferAttribute=!0;class rQ extends rK{constructor(e,t,n){super(new Int8Array(e),t,n)}}class r$ extends rK{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class r0 extends rK{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class r1 extends rK{constructor(e,t,n){super(new Int16Array(e),t,n)}}class r3 extends rK{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class r2 extends rK{constructor(e,t,n){super(new Int32Array(e),t,n)}}class r4 extends rK{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class r5 extends rK{constructor(e,t,n){super(new Uint16Array(e),t,n)}}r5.prototype.isFloat16BufferAttribute=!0;class r6 extends rK{constructor(e,t,n){super(new Float32Array(e),t,n)}}class r7 extends rK{constructor(e,t,n){super(new Float64Array(e),t,n)}}let r8=0,r9=new rh,ie=new rN,it=new nk,ir=new nj,ii=new nj,ia=new nk;class is extends t5{constructor(){super(),Object.defineProperty(this,"id",{value:r8++}),this.uuid=nt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(np(e)?r4:r3)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(void 0!==n){let r=new nd().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}let i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return r9.makeRotationFromQuaternion(e),this.applyMatrix4(r9),this}rotateX(e){return r9.makeRotationX(e),this.applyMatrix4(r9),this}rotateY(e){return r9.makeRotationY(e),this.applyMatrix4(r9),this}rotateZ(e){return r9.makeRotationZ(e),this.applyMatrix4(r9),this}translate(e,t,n){return r9.makeTranslation(e,t,n),this.applyMatrix4(r9),this}scale(e,t,n){return r9.makeScale(e,t,n),this.applyMatrix4(r9),this}lookAt(e){return ie.lookAt(e),ie.updateMatrix(),this.applyMatrix4(ie.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(it).negate(),this.translate(it.x,it.y,it.z),this}setFromPoints(e){let t=[];for(let n=0,r=e.length;n<r;n++){let i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new r6(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new nj);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new nk(-1/0,-1/0,-1/0),new nk(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){let i=t[n];ir.setFromBufferAttribute(i),this.morphTargetsRelative?(ia.addVectors(this.boundingBox.min,ir.min),this.boundingBox.expandByPoint(ia),ia.addVectors(this.boundingBox.max,ir.max),this.boundingBox.expandByPoint(ia)):(this.boundingBox.expandByPoint(ir.min),this.boundingBox.expandByPoint(ir.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new re);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new nk,1/0);return}if(e){let n=this.boundingSphere.center;if(ir.setFromBufferAttribute(e),t)for(let r=0,i=t.length;r<i;r++){let a=t[r];ii.setFromBufferAttribute(a),this.morphTargetsRelative?(ia.addVectors(ir.min,ii.min),ir.expandByPoint(ia),ia.addVectors(ir.max,ii.max),ir.expandByPoint(ia)):(ir.expandByPoint(ii.min),ir.expandByPoint(ii.max))}ir.getCenter(n);let s=0;for(let o=0,l=e.count;o<l;o++)ia.fromBufferAttribute(e,o),s=Math.max(s,n.distanceToSquared(ia));if(t)for(let h=0,u=t.length;h<u;h++){let c=t[h],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)ia.fromBufferAttribute(c,p),d&&(it.fromBufferAttribute(e,p),ia.add(it)),s=Math.max(s,n.distanceToSquared(ia))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let n=e.array,r=t.position.array,i=t.normal.array,a=t.uv.array,s=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new rK(new Float32Array(4*s),4));let o=this.getAttribute("tangent").array,l=[],h=[];for(let u=0;u<s;u++)l[u]=new nk,h[u]=new nk;let c=new nk,d=new nk,p=new nk,f=new nc,m=new nc,g=new nc,v=new nk,y=new nk;function x(e,t,n){c.fromArray(r,3*e),d.fromArray(r,3*t),p.fromArray(r,3*n),f.fromArray(a,2*e),m.fromArray(a,2*t),g.fromArray(a,2*n),d.sub(c),p.sub(c),m.sub(f),g.sub(f);let i=1/(m.x*g.y-g.x*m.y);isFinite(i)&&(v.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(i),y.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(i),l[e].add(v),l[t].add(v),l[n].add(v),h[e].add(y),h[t].add(y),h[n].add(y))}let _=this.groups;0===_.length&&(_=[{start:0,count:n.length}]);for(let b=0,M=_.length;b<M;++b){let w=_[b],S=w.start,T=w.count;for(let E=S,A=S+T;E<A;E+=3)x(n[E+0],n[E+1],n[E+2])}let R=new nk,C=new nk,L=new nk,P=new nk;function D(e){L.fromArray(i,3*e),P.copy(L);let t=l[e];R.copy(t),R.sub(L.multiplyScalar(L.dot(t))).normalize(),C.crossVectors(P,t);let n=C.dot(h[e]);o[4*e]=R.x,o[4*e+1]=R.y,o[4*e+2]=R.z,o[4*e+3]=n<0?-1:1}for(let I=0,N=_.length;I<N;++I){let B=_[I],z=B.start,O=B.count;for(let U=z,F=z+O;U<F;U+=3)D(n[U+0]),D(n[U+1]),D(n[U+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new rK(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let r=0,i=n.count;r<i;r++)n.setXYZ(r,0,0,0);let a=new nk,s=new nk,o=new nk,l=new nk,h=new nk,u=new nk,c=new nk,d=new nk;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),g=e.getX(p+1),v=e.getX(p+2);a.fromBufferAttribute(t,m),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,v),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),l.fromBufferAttribute(n,m),h.fromBufferAttribute(n,g),u.fromBufferAttribute(n,v),l.add(c),h.add(c),u.add(c),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,h.x,h.y,h.z),n.setXYZ(v,u.x,u.y,u.z)}else for(let y=0,x=t.count;y<x;y+=3)a.fromBufferAttribute(t,y+0),s.fromBufferAttribute(t,y+1),o.fromBufferAttribute(t,y+2),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),n.setXYZ(y+0,c.x,c.y,c.z),n.setXYZ(y+1,c.x,c.y,c.z),n.setXYZ(y+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let n=this.attributes;for(let r in n){if(void 0===e.attributes[r])continue;let i=n[r],a=i.array,s=e.attributes[r],o=s.array,l=s.itemSize*t,h=Math.min(o.length,a.length-l);for(let u=0,c=l;u<h;u++,c++)a[c]=o[u]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ia.fromBufferAttribute(e,t),ia.normalize(),e.setXYZ(t,ia.x,ia.y,ia.z)}toNonIndexed(){function e(e,t){let n=e.array,r=e.itemSize,i=e.normalized,a=new n.constructor(t.length*r),s=0,o=0;for(let l=0,h=t.length;l<h;l++){s=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*r;for(let u=0;u<r;u++)a[o++]=n[s++]}return new rK(a,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new is,n=this.index.array,r=this.attributes;for(let i in r){let a=r[i],s=e(a,n);t.setAttribute(i,s)}let o=this.morphAttributes;for(let l in o){let h=[],u=o[l];for(let c=0,d=u.length;c<d;c++){let p=u[c],f=e(p,n);h.push(f)}t.morphAttributes[l]=h}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let g=0,v=m.length;g<v;g++){let y=m[g];t.addGroup(y.start,y.count,y.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};let r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});let i=this.attributes;for(let a in i){let s=i[a];e.data.attributes[a]=s.toJSON(e.data)}let o={},l=!1;for(let h in this.morphAttributes){let u=this.morphAttributes[h],c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d];c.push(f.toJSON(e.data))}c.length>0&&(o[h]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let n=e.index;null!==n&&this.setIndex(n.clone(t));let r=e.attributes;for(let i in r){let a=r[i];this.setAttribute(i,a.clone(t))}let s=e.morphAttributes;for(let o in s){let l=[],h=s[o];for(let u=0,c=h.length;u<c;u++)l.push(h[u].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let v=e.boundingSphere;return null!==v&&(this.boundingSphere=v.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}is.prototype.isBufferGeometry=!0;let io=new rh,il=new rl,ih=new re,iu=new nk,ic=new nk,id=new nk,ip=new nk,im=new nk,ig=new nk,iv=new nk,iy=new nk,ix=new nk,i_=new nc,ib=new nc,iM=new nc,iw=new nk,iS=new nk;class iT extends rN{constructor(e=new is,t=new rJ){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=r.length;i<a;i++){let s=r[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=i}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r||(null===n.boundingSphere&&n.computeBoundingSphere(),ih.copy(n.boundingSphere),ih.applyMatrix4(i),!1===e.ray.intersectsSphere(ih))||(io.copy(i).invert(),il.copy(e.ray).applyMatrix4(io),null!==n.boundingBox&&!1===il.intersectsBox(n.boundingBox)))return;let a;if(n.isBufferGeometry){let s=n.index,o=n.attributes.position,l=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,c=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==s){if(Array.isArray(r))for(let f=0,m=d.length;f<m;f++){let g=d[f],v=r[g.materialIndex],y=Math.max(g.start,p.start),x=Math.min(s.count,Math.min(g.start+g.count,p.start+p.count));for(let _=y;_<x;_+=3){let b=s.getX(_),M=s.getX(_+1),w=s.getX(_+2);(a=iE(this,v,e,il,o,l,h,u,c,b,M,w))&&(a.faceIndex=Math.floor(_/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{let S=Math.max(0,p.start),T=Math.min(s.count,p.start+p.count);for(let E=S;E<T;E+=3){let A=s.getX(E),R=s.getX(E+1),C=s.getX(E+2);(a=iE(this,r,e,il,o,l,h,u,c,A,R,C))&&(a.faceIndex=Math.floor(E/3),t.push(a))}}}else if(void 0!==o){if(Array.isArray(r))for(let L=0,P=d.length;L<P;L++){let D=d[L],I=r[D.materialIndex],N=Math.max(D.start,p.start),B=Math.min(o.count,Math.min(D.start+D.count,p.start+p.count));for(let z=N;z<B;z+=3){let O=z+1,U=z+2;(a=iE(this,I,e,il,o,l,h,u,c,z,O,U))&&(a.faceIndex=Math.floor(z/3),a.face.materialIndex=D.materialIndex,t.push(a))}}else{let F=Math.max(0,p.start),H=Math.min(o.count,p.start+p.count);for(let G=F;G<H;G+=3){let k=G+1,V=G+2;(a=iE(this,r,e,il,o,l,h,u,c,G,k,V))&&(a.faceIndex=Math.floor(G/3),t.push(a))}}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function iE(e,t,n,r,i,a,s,o,l,h,u,c){iu.fromBufferAttribute(i,h),ic.fromBufferAttribute(i,u),id.fromBufferAttribute(i,c);let d=e.morphTargetInfluences;if(a&&d){iv.set(0,0,0),iy.set(0,0,0),ix.set(0,0,0);for(let p=0,f=a.length;p<f;p++){let v=d[p],y=a[p];0!==v&&(ip.fromBufferAttribute(y,h),im.fromBufferAttribute(y,u),ig.fromBufferAttribute(y,c),s?(iv.addScaledVector(ip,v),iy.addScaledVector(im,v),ix.addScaledVector(ig,v)):(iv.addScaledVector(ip.sub(iu),v),iy.addScaledVector(im.sub(ic),v),ix.addScaledVector(ig.sub(id),v)))}iu.add(iv),ic.add(iy),id.add(ix)}e.isSkinnedMesh&&(e.boneTransform(h,iu),e.boneTransform(u,ic),e.boneTransform(c,id));let x=function(e,t,n,r,i,a,s,o){let l;if(null===(t.side===m?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,t.side!==g,o)))return null;iS.copy(o),iS.applyMatrix4(e.matrixWorld);let h=n.ray.origin.distanceTo(iS);return h<n.near||h>n.far?null:{distance:h,point:iS.clone(),object:e}}(e,t,n,r,iu,ic,id,iw);if(x){o&&(i_.fromBufferAttribute(o,h),ib.fromBufferAttribute(o,u),iM.fromBufferAttribute(o,c),x.uv=rj.getUV(iw,iu,ic,id,i_,ib,iM,new nc)),l&&(i_.fromBufferAttribute(l,h),ib.fromBufferAttribute(l,u),iM.fromBufferAttribute(l,c),x.uv2=rj.getUV(iw,iu,ic,id,i_,ib,iM,new nc));let _={a:h,b:u,c:c,normal:new nk,materialIndex:0};rj.getNormal(iu,ic,id,_.normal),x.face=_}return x}iT.prototype.isMesh=!0;class iA extends is{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};let s=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,n,r,i,a,p,f,m,g,v){let y=a/m,x=p/g,_=a/2,b=p/2,M=f/2,w=m+1,S=g+1,T=0,E=0,A=new nk;for(let R=0;R<S;R++){let C=R*x-b;for(let L=0;L<w;L++){let P=L*y-_;A[e]=P*r,A[t]=C*i,A[n]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=f>0?1:-1,h.push(A.x,A.y,A.z),u.push(L/m),u.push(1-R/g),T+=1}}for(let D=0;D<g;D++)for(let I=0;I<m;I++){let N=c+I+w*D,B=c+I+w*(D+1),z=c+(I+1)+w*(D+1),O=c+(I+1)+w*D;o.push(N,B,O),o.push(B,z,O),E+=6}s.addGroup(d,E,v),d+=E,c+=T}p("z","y","x",-1,-1,n,t,e,a,i,0),p("z","y","x",1,-1,n,t,-e,a,i,1),p("x","z","y",1,1,e,n,t,r,a,2),p("x","z","y",1,-1,e,n,-t,r,a,3),p("x","y","z",1,-1,e,t,n,r,i,4),p("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new r6(l,3)),this.setAttribute("normal",new r6(h,3)),this.setAttribute("uv",new r6(u,2))}static fromJSON(e){return new iA(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function iR(e){let t={};for(let n in e)for(let r in t[n]={},e[n]){let i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}return t}function iC(e){let t={};for(let n=0;n<e.length;n++){let r=iR(e[n]);for(let i in r)t[i]=r[i]}return t}let iL={clone:iR,merge:iC};class iP extends rX{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=iR(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let n in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let r=this.uniforms[n],i=r.value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let a={};for(let s in this.extensions)!0===this.extensions[s]&&(a[s]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}iP.prototype.isShaderMaterial=!0;class iD extends rN{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new rh,this.projectionMatrix=new rh,this.projectionMatrixInverse=new rh}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}iD.prototype.isCamera=!0;class iI extends iD{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*ne*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*t9*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*ne*Math.atan(Math.tan(.5*t9*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*t9*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){let s=a.fullWidth,o=a.fullHeight;i+=a.offsetX*r/s,t-=a.offsetY*n/o,r*=a.width/s,n*=a.height/o}let l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}iI.prototype.isPerspectiveCamera=!0;class iN extends rN{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;let r=new iI(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new nk(1,0,0)),this.add(r);let i=new iI(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new nk(-1,0,0)),this.add(i);let a=new iI(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new nk(0,1,0)),this.add(a);let s=new iI(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new nk(0,-1,0)),this.add(s);let o=new iI(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new nk(0,0,1)),this.add(o);let l=new iI(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new nk(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let n=this.renderTarget,[r,i,a,s,o,l]=this.children,h=e.getRenderTarget(),u=e.toneMapping,c=e.xr.enabled;e.toneMapping=Q,e.xr.enabled=!1;let d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=c,n.texture.needsPMREMUpdate=!0}}class iB extends nI{constructor(e,t,n,r,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:ea,n,r,i,a,s,o,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}iB.prototype.isCubeTexture=!0;class iz extends nB{constructor(e,t={}){super(e,e,t);let n={width:e,height:e,depth:1};this.texture=new iB([n,n,n,n,n,n],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:ey}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new iA(5,5,5),i=new iP({name:"CubemapFromEquirect",uniforms:iR(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:m,blending:x});i.uniforms.tEquirect.value=t;let a=new iT(r,i),s=t.minFilter;t.minFilter===eb&&(t.minFilter=ey);let o=new iN(1,10,this);return o.update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,r){let i=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,r);e.setRenderTarget(i)}}iz.prototype.isWebGLCubeRenderTarget=!0;let iO=new nk,iU=new nk,iF=new nd;class iH{constructor(e=new nk(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let r=iO.subVectors(n,t).cross(iU.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let n=e.delta(iO),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(n).multiplyScalar(i).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||iF.getNormalMatrix(e),r=this.coplanarPoint(iO).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}iH.prototype.isPlane=!0;let iG=new re,ik=new nk;class iV{constructor(e=new iH,t=new iH,n=new iH,r=new iH,i=new iH,a=new iH){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){let t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],s=n[3],o=n[4],l=n[5],h=n[6],u=n[7],c=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(s-r,u-o,f-c,y-m).normalize(),t[1].setComponents(s+r,u+o,f+c,y+m).normalize(),t[2].setComponents(s+i,u+l,f+d,y+g).normalize(),t[3].setComponents(s-i,u-l,f-d,y-g).normalize(),t[4].setComponents(s-a,u-h,f-p,y-v).normalize(),t[5].setComponents(s+a,u+h,f+p,y+v).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),iG.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(iG)}intersectsSprite(e){return iG.center.set(0,0,0),iG.radius=.7071067811865476,iG.applyMatrix4(e.matrixWorld),this.intersectsSphere(iG)}intersectsSphere(e){let t=this.planes,n=e.center,r=-e.radius;for(let i=0;i<6;i++){let a=t[i].distanceToPoint(n);if(a<r)return!1}return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let r=t[n];if(ik.x=r.normal.x>0?e.max.x:e.min.x,ik.y=r.normal.y>0?e.max.y:e.min.y,ik.z=r.normal.z>0?e.max.z:e.min.z,0>r.distanceToPoint(ik))return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(0>t[n].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function iW(){let e=null,t=!1,n=null,r=null;function i(t,a){n(t,a),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function ij(e,t){let n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){let a=r.get(t);(!a||a.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let s=r.get(t);void 0===s?r.set(t,function(t,r){let i=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(r,s),e.bufferData(r,i,a),t.onUploadCallback();let o;if(i instanceof Float32Array)o=5126;else if(i instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(n)o=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else o=5123}else if(i instanceof Int16Array)o=5122;else if(i instanceof Uint32Array)o=5125;else if(i instanceof Int32Array)o=5124;else if(i instanceof Int8Array)o=5120;else if(i instanceof Uint8Array)o=5121;else if(i instanceof Uint8ClampedArray)o=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);return{buffer:s,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):s.version<t.version&&(!function(t,r,i){let a=r.array,s=r.updateRange;e.bindBuffer(i,t),-1===s.count?e.bufferSubData(i,0,a):(n?e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,t,i),s.version=t.version)}}}class iq extends is{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};let i=e/2,a=t/2,s=Math.floor(n),o=Math.floor(r),l=s+1,h=o+1,u=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let g=0;g<h;g++){let v=g*c-a;for(let y=0;y<l;y++){let x=y*u-i;p.push(x,-v,0),f.push(0,0,1),m.push(y/s),m.push(1-g/o)}}for(let _=0;_<o;_++)for(let b=0;b<s;b++){let M=b+l*_,w=b+l*(_+1),S=b+1+l*(_+1),T=b+1+l*_;d.push(M,w,T),d.push(w,S,T)}this.setIndex(d),this.setAttribute("position",new r6(p,3)),this.setAttribute("normal",new r6(f,3)),this.setAttribute("uv",new r6(m,2))}static fromJSON(e){return new iq(e.width,e.height,e.widthSegments,e.heightSegments)}}let iX={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},iJ={common:{diffuse:{value:new nA(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nd},uv2Transform:{value:new nd},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new nc(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new nA(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new nA(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nd}},sprite:{diffuse:{value:new nA(16777215)},opacity:{value:1},center:{value:new nc(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nd}}},iY={basic:{uniforms:iC([iJ.common,iJ.specularmap,iJ.envmap,iJ.aomap,iJ.lightmap,iJ.fog]),vertexShader:iX.meshbasic_vert,fragmentShader:iX.meshbasic_frag},lambert:{uniforms:iC([iJ.common,iJ.specularmap,iJ.envmap,iJ.aomap,iJ.lightmap,iJ.emissivemap,iJ.fog,iJ.lights,{emissive:{value:new nA(0)}}]),vertexShader:iX.meshlambert_vert,fragmentShader:iX.meshlambert_frag},phong:{uniforms:iC([iJ.common,iJ.specularmap,iJ.envmap,iJ.aomap,iJ.lightmap,iJ.emissivemap,iJ.bumpmap,iJ.normalmap,iJ.displacementmap,iJ.fog,iJ.lights,{emissive:{value:new nA(0)},specular:{value:new nA(1118481)},shininess:{value:30}}]),vertexShader:iX.meshphong_vert,fragmentShader:iX.meshphong_frag},standard:{uniforms:iC([iJ.common,iJ.envmap,iJ.aomap,iJ.lightmap,iJ.emissivemap,iJ.bumpmap,iJ.normalmap,iJ.displacementmap,iJ.roughnessmap,iJ.metalnessmap,iJ.fog,iJ.lights,{emissive:{value:new nA(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:iX.meshphysical_vert,fragmentShader:iX.meshphysical_frag},toon:{uniforms:iC([iJ.common,iJ.aomap,iJ.lightmap,iJ.emissivemap,iJ.bumpmap,iJ.normalmap,iJ.displacementmap,iJ.gradientmap,iJ.fog,iJ.lights,{emissive:{value:new nA(0)}}]),vertexShader:iX.meshtoon_vert,fragmentShader:iX.meshtoon_frag},matcap:{uniforms:iC([iJ.common,iJ.bumpmap,iJ.normalmap,iJ.displacementmap,iJ.fog,{matcap:{value:null}}]),vertexShader:iX.meshmatcap_vert,fragmentShader:iX.meshmatcap_frag},points:{uniforms:iC([iJ.points,iJ.fog]),vertexShader:iX.points_vert,fragmentShader:iX.points_frag},dashed:{uniforms:iC([iJ.common,iJ.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:iX.linedashed_vert,fragmentShader:iX.linedashed_frag},depth:{uniforms:iC([iJ.common,iJ.displacementmap]),vertexShader:iX.depth_vert,fragmentShader:iX.depth_frag},normal:{uniforms:iC([iJ.common,iJ.bumpmap,iJ.normalmap,iJ.displacementmap,{opacity:{value:1}}]),vertexShader:iX.meshnormal_vert,fragmentShader:iX.meshnormal_frag},sprite:{uniforms:iC([iJ.sprite,iJ.fog]),vertexShader:iX.sprite_vert,fragmentShader:iX.sprite_frag},background:{uniforms:{uvTransform:{value:new nd},t2D:{value:null}},vertexShader:iX.background_vert,fragmentShader:iX.background_frag},cube:{uniforms:iC([iJ.envmap,{opacity:{value:1}}]),vertexShader:iX.cube_vert,fragmentShader:iX.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:iX.equirect_vert,fragmentShader:iX.equirect_frag},distanceRGBA:{uniforms:iC([iJ.common,iJ.displacementmap,{referencePosition:{value:new nk},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:iX.distanceRGBA_vert,fragmentShader:iX.distanceRGBA_frag},shadow:{uniforms:iC([iJ.lights,iJ.fog,{color:{value:new nA(0)},opacity:{value:1}},]),vertexShader:iX.shadow_vert,fragmentShader:iX.shadow_frag}};function iZ(e,t,n,r,i,a){let s=new nA(0),o=!0===i?0:1,l,h,u=null,c=0,d=null;function p(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,a)}return{getClearColor:function(){return s},setClearColor:function(e,t=1){s.set(e),p(s,o=t)},getClearAlpha:function(){return o},setClearAlpha:function(e){p(s,o=e)},render:function(n,i){let a=!1,g=!0===i.isScene?i.background:null;g&&g.isTexture&&(g=t.get(g));let v=e.xr,y=v.getSession&&v.getSession();y&&"additive"===y.environmentBlendMode&&(g=null),null===g?p(s,o):g&&g.isColor&&(p(g,1),a=!0),(e.autoClear||a)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===eh)?(void 0===h&&((h=new iT(new iA(1,1,1),new iP({name:"BackgroundCubeMaterial",uniforms:iR(iY.cube.uniforms),vertexShader:iY.cube.vertexShader,fragmentShader:iY.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),h.material.uniforms.envMap.value=g,h.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,(u!==g||c!==g.version||d!==e.toneMapping)&&(h.material.needsUpdate=!0,u=g,c=g.version,d=e.toneMapping),h.layers.enableAll(),n.unshift(h,h.geometry,h.material,0,0,null)):g&&g.isTexture&&(void 0===l&&((l=new iT(new iq(2,2),new iP({name:"BackgroundMaterial",uniforms:iR(iY.background.uniforms),vertexShader:iY.background.vertexShader,fragmentShader:iY.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),l.material.uniforms.uvTransform.value.copy(g.matrix),(u!==g||c!==g.version||d!==e.toneMapping)&&(l.material.needsUpdate=!0,u=g,c=g.version,d=e.toneMapping),l.layers.enableAll(),n.unshift(l,l.geometry,l.material,0,0,null))}}}function iK(e,t,n,r){let i=e.getParameter(34921),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=p(null),h=l,u=!1;function c(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){let t=[],n=[],r=[];for(let a=0;a<i;a++)t[a]=0,n[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function f(){let e=h.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){g(e,0)}function g(n,i){let a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;if(a[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==i){let l=r.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i}}function v(){let t=h.newAttributes,n=h.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function y(t,n,i,a,s,o){!0===r.isWebGL2&&(5124===i||5125===i)?e.vertexAttribIPointer(t,n,i,s,o):e.vertexAttribPointer(t,n,i,a,s,o)}function x(){_(),u=!0,h!==l&&c((h=l).object)}function _(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,x,_){let b=!1;if(s){let M=function(t,n,i){let s=!0===i.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let h=l[n.id];void 0===h&&(h={},l[n.id]=h);let u=h[s];return void 0===u&&(u=p(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),h[s]=u),u}(x,d,l);h!==M&&c((h=M).object),(b=function(e,t,n,r){let i=h.attributes,a=t.attributes,s=0,o=n.getAttributes();for(let l in o){let u=o[l];if(u.location>=0){let c=i[l],d=a[l];if(void 0===d&&("instanceMatrix"===l&&e.instanceMatrix&&(d=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(d=e.instanceColor)),void 0===c||c.attribute!==d||d&&c.data!==d.data)return!0;s++}}return h.attributesNum!==s||h.index!==r}(i,x,d,_))&&function(e,t,n,r){let i={},a=t.attributes,s=0,o=n.getAttributes();for(let l in o){let u=o[l];if(u.location>=0){let c=a[l];void 0===c&&("instanceMatrix"===l&&e.instanceMatrix&&(c=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(c=e.instanceColor));let d={};d.attribute=c,c&&c.data&&(d.data=c.data),i[l]=d,s++}}h.attributes=i,h.attributesNum=s,h.index=r}(i,x,d,_)}else{let w=!0===l.wireframe;(h.geometry!==x.id||h.program!==d.id||h.wireframe!==w)&&(h.geometry=x.id,h.program=d.id,h.wireframe=w,b=!0)}null!==_&&n.update(_,34963),(b||u)&&(u=!1,function(i,a,s,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let l=o.attributes,h=s.getAttributes(),u=a.defaultAttributeValues;for(let c in h){let d=h[c];if(d.location>=0){let p=l[c];if(void 0===p&&("instanceMatrix"===c&&i.instanceMatrix&&(p=i.instanceMatrix),"instanceColor"===c&&i.instanceColor&&(p=i.instanceColor)),void 0!==p){let x=p.normalized,_=p.itemSize,b=n.get(p);if(void 0===b)continue;let M=b.buffer,w=b.type,S=b.bytesPerElement;if(p.isInterleavedBufferAttribute){let T=p.data,E=T.stride,A=p.offset;if(T.isInstancedInterleavedBuffer){for(let R=0;R<d.locationSize;R++)g(d.location+R,T.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=T.meshPerAttribute*T.count)}else for(let C=0;C<d.locationSize;C++)m(d.location+C);e.bindBuffer(34962,M);for(let L=0;L<d.locationSize;L++)y(d.location+L,_/d.locationSize,w,x,E*S,(A+_/d.locationSize*L)*S)}else{if(p.isInstancedBufferAttribute){for(let P=0;P<d.locationSize;P++)g(d.location+P,p.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=p.meshPerAttribute*p.count)}else for(let D=0;D<d.locationSize;D++)m(d.location+D);e.bindBuffer(34962,M);for(let I=0;I<d.locationSize;I++)y(d.location+I,_/d.locationSize,w,x,_*S,_/d.locationSize*I*S)}}else if(void 0!==u){let N=u[c];if(void 0!==N)switch(N.length){case 2:e.vertexAttrib2fv(d.location,N);break;case 3:e.vertexAttrib3fv(d.location,N);break;case 4:e.vertexAttrib4fv(d.location,N);break;default:e.vertexAttrib1fv(d.location,N)}}}}v()}(i,l,d,x),null!==_&&e.bindBuffer(34963,n.get(_).buffer))},reset:x,resetDefaultState:_,dispose:function(){for(let e in x(),o){let t=o[e];for(let n in t){let r=t[n];for(let i in r)d(r[i].object),delete r[i];delete t[n]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let n in t){let r=t[n];for(let i in r)d(r[i].object),delete r[i];delete t[n]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let n=o[t];if(void 0===n[e.id])continue;let r=n[e.id];for(let i in r)d(r[i].object),delete r[i];delete n[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function iQ(e,t,n,r){let i=r.isWebGL2,a;function s(e){a=e}this.setMode=s,this.render=function(t,r){e.drawArrays(a,t,r),n.update(r,a,1)},this.renderInstances=function(r,s,o){if(0===o)return;let l,h;if(i)l=e,h="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[h](a,r,s,o),n.update(s,a,o)}}function i$(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==n.precision?n.precision:"highp",o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),h=!0===n.logarithmicDepthBuffer,u=e.getParameter(34930),c=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),v=e.getParameter(36349),y=c>0,x=a||t.has("OES_texture_float"),_=a?e.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:_}}function i0(e){let t=this,n=null,r=0,i=!1,a=!1,s=new iH,o=new nd,l={value:null,needsUpdate:!1};function h(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function u(e,n,r,i){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==i||null===h){let u=r+4*a,c=n.matrixWorldInverse;o.getNormalMatrix(c),(null===h||h.length<u)&&(h=new Float32Array(u));for(let d=0,p=r;d!==a;++d,p+=4)s.copy(e[d]).applyMatrix4(c,o),s.normal.toArray(h,p),h[p+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==r||i;return i=t,n=u(e,a,0),r=e.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,h()},this.setState=function(t,s,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(i&&null!==c&&0!==c.length&&(!a||p)){let m=a?0:r,g=4*m,v=f.clippingState||null;l.value=v,v=u(c,s,g,o);for(let y=0;y!==g;++y)v[y]=n[y];f.clippingState=v,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else a?u(null):h()}}function i1(e){let t=new WeakMap;function n(e,t){return t===eo?e.mapping=ea:t===el&&(e.mapping=es),e}function r(e){let n=e.target;n.removeEventListener("dispose",r);let i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){let a=i.mapping;if(a===eo||a===el){if(t.has(i)){let s=t.get(i).texture;return n(s,i.mapping)}{let o=i.image;if(!o||!(o.height>0))return null;{let l=new iz(o.height/2);return l.fromEquirectangularTexture(e,i),t.set(i,l),i.addEventListener("dispose",r),n(l.texture,i.mapping)}}}}return i},dispose:function(){t=new WeakMap}}}iY.physical={uniforms:iC([iY.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new nc(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new nA(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new nc},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new nA(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new nA(1,1,1)},specularColorMap:{value:null}}]),vertexShader:iX.meshphysical_vert,fragmentShader:iX.meshphysical_frag};class i3 extends iD{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=l*this.view.offsetX,a=i+l*this.view.width,s-=h*this.view.offsetY,o=s-h*this.view.height}this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}i3.prototype.isOrthographicCamera=!0;let i2=[.125,.215,.35,.446,.526,.582],i4=new i3,i5=new nA,i6=null,i7=(1+Math.sqrt(5))/2,i8=1/i7,i9=[new nk(1,1,1),new nk(-1,1,1),new nk(1,1,-1),new nk(-1,1,-1),new nk(0,i7,i8),new nk(0,i7,-i8),new nk(i8,0,i7),new nk(-i8,0,i7),new nk(i7,i8,0),new nk(-i7,i8,0)];class ae{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){i6=this._renderer.getRenderTarget(),this._setSize(256);let i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ai(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ar(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(i6),e.scissorTest=!1,an(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ea||e.mapping===es?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),i6=this._renderer.getRenderTarget();let n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ey,minFilter:ey,generateMipmaps:!1,type:eL,format:ez,encoding:tM,depthBuffer:!1},r=at(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=at(e,t,n);let{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],n=[],r=[],i=e,a=e-4+1+i2.length;for(let s=0;s<a;s++){let o=Math.pow(2,i);n.push(o);let l=1/o;s>e-4?l=i2[s-e+4-1]:0===s&&(l=0),r.push(l);let h=1/(o-2),u=-h,c=1+h,d=[u,u,c,u,c,c,u,u,c,c,u,c],p=new Float32Array(108),f=new Float32Array(72),m=new Float32Array(36);for(let g=0;g<6;g++){let v=g%3*2/3-1,y=g>2?0:-1,x=[v,y,0,v+2/3,y,0,v+2/3,y+1,0,v,y,0,v+2/3,y+1,0,v,y+1,0];p.set(x,18*g),f.set(d,12*g);let _=[g,g,g,g,g,g];m.set(_,6*g)}let b=new is;b.setAttribute("position",new rK(p,3)),b.setAttribute("uv",new rK(f,2)),b.setAttribute("faceIndex",new rK(m,1)),t.push(b),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(i)),this._blurMaterial=function(e,t,n){let r=new Float32Array(20),i=new nk(0,1,0),a=new iP({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:aa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:x,depthTest:!1,depthWrite:!1});return a}(i,e,t)}return r}_compileMaterial(e){let t=new iT(this._lodPlanes[0],e);this._renderer.compile(t,i4)}_sceneToCubeUV(e,t,n,r){let i=new iI(90,1,t,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.toneMapping;o.getClearColor(i5),o.toneMapping=Q,o.autoClear=!1;let u=new rJ({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),c=new iT(new iA,u),d=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,d=!0):(u.color.copy(i5),d=!0);for(let f=0;f<6;f++){let g=f%3;0===g?(i.up.set(0,a[f],0),i.lookAt(s[f],0,0)):1===g?(i.up.set(0,0,a[f]),i.lookAt(0,s[f],0)):(i.up.set(0,a[f],0),i.lookAt(0,0,s[f]));let v=this._cubeSize;an(r,g*v,f>2?v:0,v,v),o.setRenderTarget(r),d&&o.render(c,i),o.render(e,i)}c.geometry.dispose(),c.material.dispose(),o.toneMapping=h,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){let n=this._renderer,r=e.mapping===ea||e.mapping===es;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=ai()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ar());let i=r?this._cubemapMaterial:this._equirectMaterial,a=new iT(this._lodPlanes[0],i),s=i.uniforms;s.envMap.value=e;let o=this._cubeSize;an(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(a,i4)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){let i=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=i9[(r-1)%i9.length];this._blur(e,r-1,r,i,a)}t.autoClear=n}_blur(e,t,n,r,i){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new iT(this._lodPlanes[r],l),u=l.uniforms,c=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let v=0;v<20;++v){let y=v/p,x=Math.exp(-y*y/2);m.push(x),0===v?g+=x:v<f&&(g+=2*x)}for(let _=0;_<m.length;_++)m[_]=m[_]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s);let{_lodMax:b}=this;u.dTheta.value=d,u.mipInt.value=b-n;let M=this._sizeLods[r],w=4*(this._cubeSize-M);an(t,3*M*(r>b-4?r-b+4:0),w,3*M,2*M),o.setRenderTarget(t),o.render(h,i4)}}function at(e,t,n){let r=new nB(e,t,n);return r.texture.mapping=eh,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function an(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function ar(){return new iP({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:aa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:x,depthTest:!1,depthWrite:!1})}function ai(){return new iP({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:aa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:x,depthTest:!1,depthWrite:!1})}function aa(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function as(e){let t=new WeakMap,n=null;function r(e){let n=e.target;n.removeEventListener("dispose",r);let i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){let a=i.mapping,s=a===eo||a===el,o=a===ea||a===es;if(s||o){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let l=t.get(i);return null===n&&(n=new ae(e)),l=s?n.fromEquirectangular(i,l):n.fromCubemap(i,l),t.set(i,l),l.texture}if(t.has(i))return t.get(i).texture;{let h=i.image;if(!(s&&h&&h.height>0||o&&h&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(h)))return null;{null===n&&(n=new ae(e));let u=s?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,u),i.addEventListener("dispose",r),u.texture}}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function ao(e){let t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){let t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function al(e,t,n,r){let i={},a=new WeakMap;function s(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",s),delete i[o.id];let h=a.get(o);h&&(t.remove(h),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){let n=[],r=e.index,i=e.attributes.position,s=0;if(null!==r){let o=r.array;s=r.version;for(let l=0,h=o.length;l<h;l+=3){let u=o[l+0],c=o[l+1],d=o[l+2];n.push(u,c,c,d,d,u)}}else{let p=i.array;s=i.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let g=f+0,v=f+1,y=f+2;n.push(g,v,v,y,y,g)}}let x=new(np(n)?r4:r3)(n,1);x.version=s;let _=a.get(e);_&&t.remove(_),a.set(e,x)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",s),i[t.id]=!0,n.memory.geometries++),t},update:function(e){let n=e.attributes;for(let r in n)t.update(n[r],34962);let i=e.morphAttributes;for(let a in i){let s=i[a];for(let o=0,l=s.length;o<l;o++)t.update(s[o],34962)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function ah(e,t,n,r){let i=r.isWebGL2,a;function s(e){a=e}let o,l;this.setMode=s,this.setIndex=function(e){o=e.type,l=e.bytesPerElement},this.render=function(t,r){e.drawElements(a,r,o,t*l),n.update(r,a,1)},this.renderInstances=function(r,s,h){if(0===h)return;let u,c;if(i)u=e,c="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===u){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[c](a,s,o,r*l,h),n.update(s,a,h)}}function au(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function ac(e,t){return e[0]-t[0]}function ad(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ap(e,t){let n=1,r=t.isInterleavedBufferAttribute?t.data.array:t.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),e.divideScalar(n)}function af(e,t,n){let r={},i=new Float32Array(8),a=new WeakMap,s=new nN,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,h,u,c){let d=l.morphTargetInfluences;if(!0===t.isWebGL2){let p=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,f=void 0!==p?p.length:0,m=a.get(h);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();let g=void 0!==h.morphAttributes.position,v=void 0!==h.morphAttributes.normal,y=void 0!==h.morphAttributes.color,x=h.morphAttributes.position||[],_=h.morphAttributes.normal||[],b=h.morphAttributes.color||[],M=0;!0===g&&(M=1),!0===v&&(M=2),!0===y&&(M=3);let w=h.attributes.position.count*M,S=1;w>t.maxTextureSize&&(S=Math.ceil(w/t.maxTextureSize),w=t.maxTextureSize);let T=new Float32Array(w*S*4*f),E=new nz(T,w,S,f);E.type=eC,E.needsUpdate=!0;let A=4*M;for(let R=0;R<f;R++){let C=x[R],L=_[R],P=b[R],D=w*S*4*R;for(let I=0;I<C.count;I++){let N=I*A;!0===g&&(s.fromBufferAttribute(C,I),!0===C.normalized&&ap(s,C),T[D+N+0]=s.x,T[D+N+1]=s.y,T[D+N+2]=s.z,T[D+N+3]=0),!0===v&&(s.fromBufferAttribute(L,I),!0===L.normalized&&ap(s,L),T[D+N+4]=s.x,T[D+N+5]=s.y,T[D+N+6]=s.z,T[D+N+7]=0),!0===y&&(s.fromBufferAttribute(P,I),!0===P.normalized&&ap(s,P),T[D+N+8]=s.x,T[D+N+9]=s.y,T[D+N+10]=s.z,T[D+N+11]=4===P.itemSize?s.w:1)}}function B(){E.dispose(),a.delete(h),h.removeEventListener("dispose",B)}m={count:f,texture:E,size:new nc(w,S)},a.set(h,m),h.addEventListener("dispose",B)}let z=0;for(let O=0;O<d.length;O++)z+=d[O];let U=h.morphTargetsRelative?1:1-z;c.getUniforms().setValue(e,"morphTargetBaseInfluence",U),c.getUniforms().setValue(e,"morphTargetInfluences",d),c.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),c.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{let F=void 0===d?0:d.length,H=r[h.id];if(void 0===H||H.length!==F){H=[];for(let G=0;G<F;G++)H[G]=[G,0];r[h.id]=H}for(let k=0;k<F;k++){let V=H[k];V[0]=k,V[1]=d[k]}H.sort(ad);for(let W=0;W<8;W++)W<F&&H[W][1]?(o[W][0]=H[W][0],o[W][1]=H[W][1]):(o[W][0]=Number.MAX_SAFE_INTEGER,o[W][1]=0);o.sort(ac);let j=h.morphAttributes.position,q=h.morphAttributes.normal,X=0;for(let J=0;J<8;J++){let Y=o[J],Z=Y[0],K=Y[1];Z!==Number.MAX_SAFE_INTEGER&&K?(j&&h.getAttribute("morphTarget"+J)!==j[Z]&&h.setAttribute("morphTarget"+J,j[Z]),q&&h.getAttribute("morphNormal"+J)!==q[Z]&&h.setAttribute("morphNormal"+J,q[Z]),i[J]=K,X+=K):(j&&!0===h.hasAttribute("morphTarget"+J)&&h.deleteAttribute("morphTarget"+J),q&&!0===h.hasAttribute("morphNormal"+J)&&h.deleteAttribute("morphNormal"+J),i[J]=0)}let Q=h.morphTargetsRelative?1:1-X;c.getUniforms().setValue(e,"morphTargetBaseInfluence",Q),c.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function am(e,t,n,r){let i=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){let s=r.render.frame,o=e.geometry,l=t.get(e,o);return i.get(l)!==s&&(t.update(l),i.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}let ag=new nI,av=new nz,ay=new nU,ax=new iB,a_=[],ab=[],aM=new Float32Array(16),aw=new Float32Array(9),aS=new Float32Array(4);function aT(e,t,n){let r=e[0];if(r<=0||r>0)return e;let i=t*n,a=a_[i];if(void 0===a&&(a=new Float32Array(i),a_[i]=a),0!==t){r.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=n,e[s].toArray(a,o)}return a}function aE(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function aA(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function aR(e,t){let n=ab[t];void 0===n&&(n=new Int32Array(t),ab[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function aC(e,t){let n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function aL(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(aE(n,t))return;e.uniform2fv(this.addr,t),aA(n,t)}}function aP(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(aE(n,t))return;e.uniform3fv(this.addr,t),aA(n,t)}}function aD(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(aE(n,t))return;e.uniform4fv(this.addr,t),aA(n,t)}}function aI(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(aE(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),aA(n,t)}else{if(aE(n,r))return;aS.set(r),e.uniformMatrix2fv(this.addr,!1,aS),aA(n,r)}}function aN(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(aE(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),aA(n,t)}else{if(aE(n,r))return;aw.set(r),e.uniformMatrix3fv(this.addr,!1,aw),aA(n,r)}}function aB(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(aE(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),aA(n,t)}else{if(aE(n,r))return;aM.set(r),e.uniformMatrix4fv(this.addr,!1,aM),aA(n,r)}}function az(e,t){let n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function aO(e,t){let n=this.cache;aE(n,t)||(e.uniform2iv(this.addr,t),aA(n,t))}function aU(e,t){let n=this.cache;aE(n,t)||(e.uniform3iv(this.addr,t),aA(n,t))}function aF(e,t){let n=this.cache;aE(n,t)||(e.uniform4iv(this.addr,t),aA(n,t))}function aH(e,t){let n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function aG(e,t){let n=this.cache;aE(n,t)||(e.uniform2uiv(this.addr,t),aA(n,t))}function ak(e,t){let n=this.cache;aE(n,t)||(e.uniform3uiv(this.addr,t),aA(n,t))}function aV(e,t){let n=this.cache;aE(n,t)||(e.uniform4uiv(this.addr,t),aA(n,t))}function aW(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||ag,i)}function aj(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||ay,i)}function aq(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||ax,i)}function aX(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||av,i)}function aJ(e,t){e.uniform1fv(this.addr,t)}function aY(e,t){let n=aT(t,this.size,2);e.uniform2fv(this.addr,n)}function aZ(e,t){let n=aT(t,this.size,3);e.uniform3fv(this.addr,n)}function aK(e,t){let n=aT(t,this.size,4);e.uniform4fv(this.addr,n)}function aQ(e,t){let n=aT(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function a$(e,t){let n=aT(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function a0(e,t){let n=aT(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function a1(e,t){e.uniform1iv(this.addr,t)}function a3(e,t){e.uniform2iv(this.addr,t)}function a2(e,t){e.uniform3iv(this.addr,t)}function a4(e,t){e.uniform4iv(this.addr,t)}function a5(e,t){e.uniform1uiv(this.addr,t)}function a6(e,t){e.uniform2uiv(this.addr,t)}function a7(e,t){e.uniform3uiv(this.addr,t)}function a8(e,t){e.uniform4uiv(this.addr,t)}function a9(e,t,n){let r=t.length,i=aR(n,r);e.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTexture2D(t[a]||ag,i[a])}function se(e,t,n){let r=t.length,i=aR(n,r);e.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTexture3D(t[a]||ay,i[a])}function st(e,t,n){let r=t.length,i=aR(n,r);e.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTextureCube(t[a]||ax,i[a])}function sn(e,t,n){let r=t.length,i=aR(n,r);e.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTexture2DArray(t[a]||av,i[a])}function sr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return aC;case 35664:return aL;case 35665:return aP;case 35666:return aD;case 35674:return aI;case 35675:return aN;case 35676:return aB;case 5124:case 35670:return az;case 35667:case 35671:return aO;case 35668:case 35672:return aU;case 35669:case 35673:return aF;case 5125:return aH;case 36294:return aG;case 36295:return ak;case 36296:return aV;case 35678:case 36198:case 36298:case 36306:case 35682:return aW;case 35679:case 36299:case 36307:return aj;case 35680:case 36300:case 36308:case 36293:return aq;case 36289:case 36303:case 36311:case 36292:return aX}}(t.type)}function si(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return aJ;case 35664:return aY;case 35665:return aZ;case 35666:return aK;case 35674:return aQ;case 35675:return a$;case 35676:return a0;case 5124:case 35670:return a1;case 35667:case 35671:return a3;case 35668:case 35672:return a2;case 35669:case 35673:return a4;case 5125:return a5;case 36294:return a6;case 36295:return a7;case 36296:return a8;case 35678:case 36198:case 36298:case 36306:case 35682:return a9;case 35679:case 36299:case 36307:return se;case 35680:case 36300:case 36308:case 36293:return st;case 36289:case 36303:case 36311:case 36292:return sn}}(t.type)}function sa(e){this.id=e,this.seq=[],this.map={}}sa.prototype.setValue=function(e,t,n){let r=this.seq;for(let i=0,a=r.length;i!==a;++i){let s=r[i];s.setValue(e,t[s.id],n)}};let ss=/(\w+)(\])?(\[|\.)?/g;function so(e,t){e.seq.push(t),e.map[t.id]=t}function sl(e,t,n){let r=e.name,i=r.length;for(ss.lastIndex=0;;){let a=ss.exec(r),s=ss.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===i){so(n,void 0===h?new sr(o,e,t):new si(o,e,t));break}{let u=n.map,c=u[o];void 0===c&&so(n,c=new sa(o)),n=c}}}function sh(e,t){this.seq=[],this.map={};let n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){let i=e.getActiveUniform(t,r),a=e.getUniformLocation(t,i.name);sl(i,a,this)}}function su(e,t,n){let r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}sh.prototype.setValue=function(e,t,n,r){let i=this.map[t];void 0!==i&&i.setValue(e,n,r)},sh.prototype.setOptional=function(e,t,n){let r=t[n];void 0!==r&&this.setValue(e,n,r)},sh.upload=function(e,t,n,r){for(let i=0,a=t.length;i!==a;++i){let s=t[i],o=n[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,r)}},sh.seqWithValue=function(e,t){let n=[];for(let r=0,i=e.length;r!==i;++r){let a=e[r];a.id in t&&n.push(a)}return n};let sc=0;function sd(e,t,n){let r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";let a=/ERROR: 0:(\d+)/.exec(i);if(!a)return i;{let s=parseInt(a[0]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){let n=e.split("\n"),r=[],i=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let s=i;s<a;s++)r.push(s+1+": "+n[s]);return r.join("\n")}(e.getShaderSource(t),s)}}function sp(e){return""!==e}function sf(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function sm(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let sg=/^[ \t]*#include +<([\w\d./]+)>/gm;function sv(e){return e.replace(sg,sy)}function sy(e,t){let n=iX[t];if(void 0===n)throw Error("Can not resolve #include <"+t+">");return sv(n)}let sx=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,s_=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sb(e){return e.replace(s_,sw).replace(sx,sM)}function sM(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sw(e,t,n,r)}function sw(e,t,n,r){let i="";for(let a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function sS(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function sT(e,t,n,r){var i,a;let s=e.getContext(),o=n.defines,l=n.vertexShader,h=n.fragmentShader,u,f=(u="SHADOWMAP_TYPE_BASIC",n.shadowMapType===c?u="SHADOWMAP_TYPE_PCF":n.shadowMapType===d?u="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===p&&(u="SHADOWMAP_TYPE_VSM"),u),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ea:case es:t="ENVMAP_TYPE_CUBE";break;case eh:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),g,v=(g="ENVMAP_MODE_REFLECTION",n.envMap&&n.envMapMode===es&&(g="ENVMAP_MODE_REFRACTION"),g),y=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Y:t="ENVMAP_BLENDING_MULTIPLY";break;case Z:t="ENVMAP_BLENDING_MIX";break;case K:t="ENVMAP_BLENDING_ADD"}return t}(n),x=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let n=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:1/t,maxMip:n}}(n),_=n.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(sp).join("\n")}(n),b=function(e){let t=[];for(let n in e){let r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(o),M=s.createProgram(),w,S,T=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((w=[b].filter(sp).join("\n")).length>0&&(w+="\n"),(S=[_,b].filter(sp).join("\n")).length>0&&(S+="\n")):(w=[sS(n),"#define SHADER_NAME "+n.shaderName,b,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+v:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(sp).join("\n"),S=[_,sS(n),"#define SHADER_NAME "+n.shaderName,b,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.envMap?"#define "+v:"",n.envMap?"#define "+y:"",x?"#define CUBEUV_TEXEL_WIDTH "+x.texelWidth:"",x?"#define CUBEUV_TEXEL_HEIGHT "+x.texelHeight:"",x?"#define CUBEUV_MAX_MIP "+x.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Q?"#define TONE_MAPPING":"",n.toneMapping!==Q?iX.tonemapping_pars_fragment:"",n.toneMapping!==Q?function(e,t){let n;switch(t){case $:n="Linear";break;case ee:n="Reinhard";break;case et:n="OptimizedCineon";break;case en:n="ACESFilmic";break;case er:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",iX.encodings_pars_fragment,function(e,t){let n=function(e){switch(e){case tM:return["Linear","( value )"];case tw:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(sp).join("\n")),l=sm(l=sf(l=sv(l),n),n),h=sm(h=sf(h=sv(h),n),n),l=sb(l),h=sb(h),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(T="#version 300 es\n",w="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+w,S=["#define varying in",n.glslVersion===t2?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===t2?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+S);let E=T+w+l,A=T+S+h,R=su(s,35633,E),C=su(s,35632,A);if(s.attachShader(M,R),s.attachShader(M,C),void 0!==n.index0AttributeName?s.bindAttribLocation(M,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(M,0,"position"),s.linkProgram(M),e.debug.checkShaderErrors){let L=s.getProgramInfoLog(M).trim(),P=s.getShaderInfoLog(R).trim(),D=s.getShaderInfoLog(C).trim(),I=!0,N=!0;if(!1===s.getProgramParameter(M,35714)){I=!1;let B=sd(s,R,"vertex"),z=sd(s,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(M,35715)+"\n\nProgram Info Log: "+L+"\n"+B+"\n"+z)}else""!==L?console.warn("THREE.WebGLProgram: Program Info Log:",L):(""===P||""===D)&&(N=!1);N&&(this.diagnostics={runnable:I,programLog:L,vertexShader:{log:P,prefix:w},fragmentShader:{log:D,prefix:S}})}s.deleteShader(R),s.deleteShader(C);let O;this.getUniforms=function(){return void 0===O&&(O=new sh(s,M)),O};let U;return this.getAttributes=function(){return void 0===U&&(U=function(e,t){let n={},r=e.getProgramParameter(t,35721);for(let i=0;i<r;i++){let a=e.getActiveAttrib(t,i),s=a.name,o=1;35674===a.type&&(o=2),35675===a.type&&(o=3),35676===a.type&&(o=4),n[s]={type:a.type,location:e.getAttribLocation(t,s),locationSize:o}}return n}(s,M)),U},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(M),this.program=void 0},this.name=n.shaderName,this.id=sc++,this.cacheKey=t,this.usedTimes=1,this.program=M,this.vertexShader=R,this.fragmentShader=C,this}let sE=0;class sA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){let t=this.shaderCache;if(!1===t.has(e)){let n=new sR(e);t.set(e,n)}return t.get(e)}}class sR{constructor(e){this.id=sE++,this.code=e,this.usedTimes=0}}function sC(e,t,n,r,i,a,s){let o=new r_,l=new sA,h=[],u=i.isWebGL2,c=i.logarithmicDepthBuffer,d=i.vertexTextures,p=i.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,o,h,v,y){let x=v.fog,b=y.geometry,M=a.isMeshStandardMaterial?v.environment:null,w=(a.isMeshStandardMaterial?n:t).get(a.envMap||M),S=w&&w.mapping===eh?w.image.height:null,T=f[a.type];null!==a.precision&&(p=i.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");let E=b.morphAttributes.position||b.morphAttributes.normal||b.morphAttributes.color,A=void 0!==E?E.length:0,R=0;void 0!==b.morphAttributes.position&&(R=1),void 0!==b.morphAttributes.normal&&(R=2),void 0!==b.morphAttributes.color&&(R=3);let C,L,P,D;if(T){let I=iY[T];C=I.vertexShader,L=I.fragmentShader}else C=a.vertexShader,L=a.fragmentShader,l.update(a),P=l.getVertexShaderID(a),D=l.getFragmentShaderID(a);let N=e.getRenderTarget(),B=a.alphaTest>0,z=a.clearcoat>0,O={isWebGL2:u,shaderID:T,shaderName:a.type,vertexShader:C,fragmentShader:L,defines:a.defines,customVertexShaderID:P,customFragmentShaderID:D,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:d,outputEncoding:null===N?e.outputEncoding:!0===N.isXRRenderTarget?N.texture.encoding:tM,map:!!a.map,matcap:!!a.matcap,envMap:!!w,envMapMode:w&&w.mapping,envMapCubeUVHeight:S,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===tA,tangentSpaceNormalMap:a.normalMapType===tE,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===tw,clearcoat:z,clearcoatMap:z&&!!a.clearcoatMap,clearcoatRoughnessMap:z&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:z&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&a.blending===_,alphaMap:!!a.alphaMap,alphaTest:B,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!b.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!b.attributes.color&&4===b.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!x,useFog:!0===a.fog,fogExp2:x&&x.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===y.isSkinnedMesh,morphTargets:void 0!==b.morphAttributes.position,morphNormals:void 0!==b.morphAttributes.normal,morphColors:void 0!==b.morphAttributes.color,morphTargetsCount:A,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:Q,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===g,flipSided:a.side===m,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return O},getProgramCacheKey:function(t){var n,r,i,a;let s=[];if(t.shaderID?s.push(t.shaderID):(s.push(t.customVertexShaderID),s.push(t.customFragmentShaderID)),void 0!==t.defines)for(let l in t.defines)s.push(l),s.push(t.defines[l]);return!1===t.isRawShaderMaterial&&(n=s,r=t,n.push(r.precision),n.push(r.outputEncoding),n.push(r.envMapMode),n.push(r.envMapCubeUVHeight),n.push(r.combine),n.push(r.vertexUvs),n.push(r.fogExp2),n.push(r.sizeAttenuation),n.push(r.morphTargetsCount),n.push(r.morphAttributeCount),n.push(r.numDirLights),n.push(r.numPointLights),n.push(r.numSpotLights),n.push(r.numHemiLights),n.push(r.numRectAreaLights),n.push(r.numDirLightShadows),n.push(r.numPointLightShadows),n.push(r.numSpotLightShadows),n.push(r.shadowMapType),n.push(r.toneMapping),n.push(r.numClippingPlanes),n.push(r.numClipIntersection),n.push(r.depthPacking),i=s,a=t,o.disableAll(),a.isWebGL2&&o.enable(0),a.supportsVertexTextures&&o.enable(1),a.instancing&&o.enable(2),a.instancingColor&&o.enable(3),a.map&&o.enable(4),a.matcap&&o.enable(5),a.envMap&&o.enable(6),a.lightMap&&o.enable(7),a.aoMap&&o.enable(8),a.emissiveMap&&o.enable(9),a.bumpMap&&o.enable(10),a.normalMap&&o.enable(11),a.objectSpaceNormalMap&&o.enable(12),a.tangentSpaceNormalMap&&o.enable(13),a.clearcoat&&o.enable(14),a.clearcoatMap&&o.enable(15),a.clearcoatRoughnessMap&&o.enable(16),a.clearcoatNormalMap&&o.enable(17),a.displacementMap&&o.enable(18),a.specularMap&&o.enable(19),a.roughnessMap&&o.enable(20),a.metalnessMap&&o.enable(21),a.gradientMap&&o.enable(22),a.alphaMap&&o.enable(23),a.alphaTest&&o.enable(24),a.vertexColors&&o.enable(25),a.vertexAlphas&&o.enable(26),a.vertexUvs&&o.enable(27),a.vertexTangents&&o.enable(28),a.uvsVertexOnly&&o.enable(29),a.fog&&o.enable(30),i.push(o.mask),o.disableAll(),a.useFog&&o.enable(0),a.flatShading&&o.enable(1),a.logarithmicDepthBuffer&&o.enable(2),a.skinning&&o.enable(3),a.morphTargets&&o.enable(4),a.morphNormals&&o.enable(5),a.morphColors&&o.enable(6),a.premultipliedAlpha&&o.enable(7),a.shadowMapEnabled&&o.enable(8),a.physicallyCorrectLights&&o.enable(9),a.doubleSided&&o.enable(10),a.flipSided&&o.enable(11),a.useDepthPacking&&o.enable(12),a.dithering&&o.enable(13),a.specularIntensityMap&&o.enable(14),a.specularColorMap&&o.enable(15),a.transmission&&o.enable(16),a.transmissionMap&&o.enable(17),a.thicknessMap&&o.enable(18),a.sheen&&o.enable(19),a.sheenColorMap&&o.enable(20),a.sheenRoughnessMap&&o.enable(21),a.decodeVideoTexture&&o.enable(22),a.opaque&&o.enable(23),i.push(o.mask),s.push(e.outputEncoding)),s.push(t.customProgramCacheKey),s.join()},getUniforms:function(e){let t=f[e.type],n;if(t){let r=iY[t];n=iL.clone(r.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let i=0,s=h.length;i<s;i++){let o=h[i];if(o.cacheKey===n){r=o,++r.usedTimes;break}}return void 0===r&&(r=new sT(e,n,t,a),h.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){let t=h.indexOf(e);h[t]=h[h.length-1],h.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:h,dispose:function(){l.dispose()}}}function sL(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function sP(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sD(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function sI(){let e=[],t=0,n=[],r=[],i=[];function a(n,r,i,a,s,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?r.push(u):!0===s.transparent?i.push(u):n.push(u)},unshift:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?r.unshift(u):!0===s.transparent?i.unshift(u):n.unshift(u)},finish:function(){for(let n=t,r=e.length;n<r;n++){let i=e[n];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.group=null}},sort:function(e,t){n.length>1&&n.sort(e||sP),r.length>1&&r.sort(t||sD),i.length>1&&i.sort(t||sD)}}}function sN(){let e=new WeakMap;return{get:function(t,n){let r;return!1===e.has(t)?(r=new sI,e.set(t,[r])):n>=e.get(t).length?(r=new sI,e.get(t).push(r)):r=e.get(t)[n],r},dispose:function(){e=new WeakMap}}}function sB(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new nk,color:new nA};break;case"SpotLight":n={position:new nk,direction:new nk,color:new nA,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new nk,color:new nA,distance:0,decay:0};break;case"HemisphereLight":n={direction:new nk,skyColor:new nA,groundColor:new nA};break;case"RectAreaLight":n={color:new nA,position:new nk,halfWidth:new nk,halfHeight:new nk}}return e[t.id]=n,n}}}let sz=0;function sO(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function sU(e,t){let n=new sB,r=function(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new nc};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new nc,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)i.probe.push(new nk);let s=new nk,o=new rh,l=new rh;return{setup:function(a,s){let o=0,l=0,h=0;for(let u=0;u<9;u++)i.probe[u].set(0,0,0);let c=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0;a.sort(sO);let x=!0!==s?Math.PI:1;for(let _=0,b=a.length;_<b;_++){let M=a[_],w=M.color,S=M.intensity,T=M.distance,E=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)o+=w.r*S*x,l+=w.g*S*x,h+=w.b*S*x;else if(M.isLightProbe)for(let A=0;A<9;A++)i.probe[A].addScaledVector(M.sh.coefficients[A],S);else if(M.isDirectionalLight){let R=n.get(M);if(R.color.copy(M.color).multiplyScalar(M.intensity*x),M.castShadow){let C=M.shadow,L=r.get(M);L.shadowBias=C.bias,L.shadowNormalBias=C.normalBias,L.shadowRadius=C.radius,L.shadowMapSize=C.mapSize,i.directionalShadow[c]=L,i.directionalShadowMap[c]=E,i.directionalShadowMatrix[c]=M.shadow.matrix,g++}i.directional[c]=R,c++}else if(M.isSpotLight){let P=n.get(M);if(P.position.setFromMatrixPosition(M.matrixWorld),P.color.copy(w).multiplyScalar(S*x),P.distance=T,P.coneCos=Math.cos(M.angle),P.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),P.decay=M.decay,M.castShadow){let D=M.shadow,I=r.get(M);I.shadowBias=D.bias,I.shadowNormalBias=D.normalBias,I.shadowRadius=D.radius,I.shadowMapSize=D.mapSize,i.spotShadow[p]=I,i.spotShadowMap[p]=E,i.spotShadowMatrix[p]=M.shadow.matrix,y++}i.spot[p]=P,p++}else if(M.isRectAreaLight){let N=n.get(M);N.color.copy(w).multiplyScalar(S),N.halfWidth.set(.5*M.width,0,0),N.halfHeight.set(0,.5*M.height,0),i.rectArea[f]=N,f++}else if(M.isPointLight){let B=n.get(M);if(B.color.copy(M.color).multiplyScalar(M.intensity*x),B.distance=M.distance,B.decay=M.decay,M.castShadow){let z=M.shadow,O=r.get(M);O.shadowBias=z.bias,O.shadowNormalBias=z.normalBias,O.shadowRadius=z.radius,O.shadowMapSize=z.mapSize,O.shadowCameraNear=z.camera.near,O.shadowCameraFar=z.camera.far,i.pointShadow[d]=O,i.pointShadowMap[d]=E,i.pointShadowMatrix[d]=M.shadow.matrix,v++}i.point[d]=B,d++}else if(M.isHemisphereLight){let U=n.get(M);U.skyColor.copy(M.color).multiplyScalar(S*x),U.groundColor.copy(M.groundColor).multiplyScalar(S*x),i.hemi[m]=U,m++}}f>0&&(t.isWebGL2?(i.rectAreaLTC1=iJ.LTC_FLOAT_1,i.rectAreaLTC2=iJ.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=iJ.LTC_FLOAT_1,i.rectAreaLTC2=iJ.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=iJ.LTC_HALF_1,i.rectAreaLTC2=iJ.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=h;let F=i.hash;(F.directionalLength!==c||F.pointLength!==d||F.spotLength!==p||F.rectAreaLength!==f||F.hemiLength!==m||F.numDirectionalShadows!==g||F.numPointShadows!==v||F.numSpotShadows!==y)&&(i.directional.length=c,i.spot.length=p,i.rectArea.length=f,i.point.length=d,i.hemi.length=m,i.directionalShadow.length=g,i.directionalShadowMap.length=g,i.pointShadow.length=v,i.pointShadowMap.length=v,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=g,i.pointShadowMatrix.length=v,i.spotShadowMatrix.length=y,F.directionalLength=c,F.pointLength=d,F.spotLength=p,F.rectAreaLength=f,F.hemiLength=m,F.numDirectionalShadows=g,F.numPointShadows=v,F.numSpotShadows=y,i.version=sz++)},setupView:function(e,t){let n=0,r=0,a=0,h=0,u=0,c=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){let f=e[d];if(f.isDirectionalLight){let m=i.directional[n];m.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),m.direction.sub(s),m.direction.transformDirection(c),n++}else if(f.isSpotLight){let g=i.spot[a];g.position.setFromMatrixPosition(f.matrixWorld),g.position.applyMatrix4(c),g.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(s),g.direction.transformDirection(c),a++}else if(f.isRectAreaLight){let v=i.rectArea[h];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(c),l.identity(),o.copy(f.matrixWorld),o.premultiply(c),l.extractRotation(o),v.halfWidth.set(.5*f.width,0,0),v.halfHeight.set(0,.5*f.height,0),v.halfWidth.applyMatrix4(l),v.halfHeight.applyMatrix4(l),h++}else if(f.isPointLight){let y=i.point[r];y.position.setFromMatrixPosition(f.matrixWorld),y.position.applyMatrix4(c),r++}else if(f.isHemisphereLight){let x=i.hemi[u];x.direction.setFromMatrixPosition(f.matrixWorld),x.direction.transformDirection(c),u++}}},state:i}}function sF(e,t){let n=new sU(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function sH(e,t){let n=new WeakMap;return{get:function(r,i=0){let a;return!1===n.has(r)?(a=new sF(e,t),n.set(r,[a])):i>=n.get(r).length?(a=new sF(e,t),n.get(r).push(a)):a=n.get(r)[i],a},dispose:function(){n=new WeakMap}}}class sG extends rX{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=tS,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}sG.prototype.isMeshDepthMaterial=!0;class sk extends rX{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new nk,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sV(e,t,n){let r=new iV,i=new nc,a=new nc,s=new nN,o=new sG({depthPacking:tT}),l=new sk,h={},u=n.maxTextureSize,d={0:m,1:f,2:g},v=new iP({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new nc},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),y=v.clone();y.defines.HORIZONTAL_PASS=1;let _=new is;_.setAttribute("position",new rK(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let b=new iT(_,v),M=this;function w(n,r){let i=t.update(b);v.defines.VSM_SAMPLES!==n.blurSamples&&(v.defines.VSM_SAMPLES=n.blurSamples,y.defines.VSM_SAMPLES=n.blurSamples,v.needsUpdate=!0,y.needsUpdate=!0),v.uniforms.shadow_pass.value=n.map.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,i,v,b,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,i,y,b,null)}function S(t,n,r,i,a,s){let u=null,c=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(u=void 0!==c?c:!0===r.isPointLight?l:o,e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){let f=u.uuid,m=n.uuid,g=h[f];void 0===g&&(g={},h[f]=g);let v=g[m];void 0===v&&(v=u.clone(),g[m]=v),u=v}return u.visible=n.visible,u.wireframe=n.wireframe,s===p?u.side=null!==n.shadowSide?n.shadowSide:n.side:u.side=null!==n.shadowSide?n.shadowSide:d[n.side],u.alphaMap=n.alphaMap,u.alphaTest=n.alphaTest,u.clipShadows=n.clipShadows,u.clippingPlanes=n.clippingPlanes,u.clipIntersection=n.clipIntersection,u.displacementMap=n.displacementMap,u.displacementScale=n.displacementScale,u.displacementBias=n.displacementBias,u.wireframeLinewidth=n.wireframeLinewidth,u.linewidth=n.linewidth,!0===r.isPointLight&&!0===u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(r.matrixWorld),u.nearDistance=i,u.farDistance=a),u}function T(n,i,a,s,o){if(!1===n.visible)return;let l=n.layers.test(i.layers);if(l&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===p)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);let h=t.update(n),u=n.material;if(Array.isArray(u)){let c=h.groups;for(let d=0,f=c.length;d<f;d++){let m=c[d],g=u[m.materialIndex];if(g&&g.visible){let v=S(n,g,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,v,n,m)}}}else if(u.visible){let y=S(n,u,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,y,n,null)}}let x=n.children;for(let _=0,b=x.length;_<b;_++)T(x[_],i,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=c,this.render=function(t,n,o){if(!1===M.enabled||!1===M.autoUpdate&&!1===M.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),h=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(x),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=t.length;f<m;f++){let g=t[f],v=g.shadow;if(void 0===v){console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");continue}if(!1===v.autoUpdate&&!1===v.needsUpdate)continue;i.copy(v.mapSize);let y=v.getFrameExtents();if(i.multiply(y),a.copy(v.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(a.x=Math.floor(u/y.x),i.x=a.x*y.x,v.mapSize.x=a.x),i.y>u&&(a.y=Math.floor(u/y.y),i.y=a.y*y.y,v.mapSize.y=a.y)),null!==v.map||v.isPointLightShadow||this.type!==p||(v.map=new nB(i.x,i.y),v.map.texture.name=g.name+".shadowMap",v.mapPass=new nB(i.x,i.y),v.camera.updateProjectionMatrix()),null===v.map){let _={minFilter:ep,magFilter:ep,format:ez};v.map=new nB(i.x,i.y,_),v.map.texture.name=g.name+".shadowMap",v.camera.updateProjectionMatrix()}e.setRenderTarget(v.map),e.clear();let b=v.getViewportCount();for(let S=0;S<b;S++){let E=v.getViewport(S);s.set(a.x*E.x,a.y*E.y,a.x*E.z,a.y*E.w),d.viewport(s),v.updateMatrices(g,S),r=v.getFrustum(),T(n,o,v.camera,g,this.type)}v.isPointLightShadow||this.type!==p||w(v,o),v.needsUpdate=!1}M.needsUpdate=!1,e.setRenderTarget(l,h,c)}}function sW(e,t,n){let r=n.isWebGL2,i=new function(){let t=!1,n=new nN,r=null,i=new nN(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,s,o){!0===o&&(t*=s,r*=s,a*=s),n.set(t,r,a,s),!1===i.equals(n)&&(e.clearColor(t,r,a,s),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){e?ex(2929):e_(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case G:e.depthFunc(512);break;case k:e.depthFunc(519);break;case V:e.depthFunc(513);break;case W:e.depthFunc(515);break;case j:e.depthFunc(514);break;case q:e.depthFunc(518);break;case X:e.depthFunc(516);break;case J:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},h=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?ex(2960):e_(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,s){(r!==t||i!==n||a!==s)&&(e.stencilFunc(t,n,s),r=t,i=n,a=s)},setOp:function(t,n,r){(s!==t||o!==n||l!==r)&&(e.stencilOp(t,n,r),s=t,o=n,l=r)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null}}},u={},c={},d=new WeakMap,p=[],f=null,v=!1,y=null,Y=null,Z=null,K=null,Q=null,$=null,ee=null,et=!1,en=null,er=null,ei=null,ea=null,es=null,eo=e.getParameter(35661),el=!1,eh=0,eu=e.getParameter(7938);-1!==eu.indexOf("WebGL")?el=parseFloat(/^WebGL (\d)/.exec(eu)[1])>=1:-1!==eu.indexOf("OpenGL ES")&&(el=parseFloat(/^OpenGL ES (\d)/.exec(eu)[1])>=2);let ec=null,ed={},ep=e.getParameter(3088),ef=e.getParameter(2978),em=new nN().fromArray(ep),eg=new nN().fromArray(ef);function ev(t,n,r){let i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let s=0;s<r;s++)e.texImage2D(n+s,0,6408,1,1,0,6408,5121,i);return a}let ey={};function ex(t){!0!==u[t]&&(e.enable(t),u[t]=!0)}function e_(t){!1!==u[t]&&(e.disable(t),u[t]=!1)}ey[3553]=ev(3553,3553,1),ey[34067]=ev(34067,34069,6),i.setClear(0,0,0,1),a.setClear(1),h.setClear(0),ex(2929),a.setFunc(W),eT(!1),eE(o),ex(2884),eS(x);let eb={[T]:32774,[E]:32778,[A]:32779};if(r)eb[R]=32775,eb[C]=32776;else{let eM=t.get("EXT_blend_minmax");null!==eM&&(eb[R]=eM.MIN_EXT,eb[C]=eM.MAX_EXT)}let ew={[L]:0,[P]:1,[D]:768,[N]:770,[H]:776,[U]:774,[z]:772,[I]:769,[B]:771,[F]:775,[O]:773};function eS(t,n,r,i,a,s,o,l){if(t===x){!0===v&&(e_(3042),v=!1);return}if(!1===v&&(ex(3042),v=!0),t!==S){if(t!==y||l!==et){if((Y!==T||Q!==T)&&(e.blendEquation(32774),Y=T,Q=T),l)switch(t){case _:e.blendFuncSeparate(1,771,1,771);break;case b:e.blendFunc(1,1);break;case M:e.blendFuncSeparate(0,769,0,1);break;case w:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case _:e.blendFuncSeparate(770,771,1,771);break;case b:e.blendFunc(770,1);break;case M:e.blendFuncSeparate(0,769,0,1);break;case w:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}Z=null,K=null,$=null,ee=null,y=t,et=l}return}a=a||n,s=s||r,o=o||i,(n!==Y||a!==Q)&&(e.blendEquationSeparate(eb[n],eb[a]),Y=n,Q=a),(r!==Z||i!==K||s!==$||o!==ee)&&(e.blendFuncSeparate(ew[r],ew[i],ew[s],ew[o]),Z=r,K=i,$=s,ee=o),y=t,et=null}function eT(t){en!==t&&(t?e.frontFace(2304):e.frontFace(2305),en=t)}function eE(t){t!==s?(ex(2884),t!==er&&(t===o?e.cullFace(1029):t===l?e.cullFace(1028):e.cullFace(1032))):e_(2884),er=t}function eA(t,n,r){t?(ex(32823),(ea!==n||es!==r)&&(e.polygonOffset(n,r),ea=n,es=r)):e_(32823)}function eR(t){void 0===t&&(t=33984+eo-1),ec!==t&&(e.activeTexture(t),ec=t)}return{buffers:{color:i,depth:a,stencil:h},enable:ex,disable:e_,bindFramebuffer:function(t,n){return c[t]!==n&&(e.bindFramebuffer(t,n),c[t]=n,r&&(36009===t&&(c[36160]=n),36160===t&&(c[36009]=n)),!0)},drawBuffers:function(r,i){let a=p,s=!1;if(r){if(void 0===(a=d.get(i))&&(a=[],d.set(i,a)),r.isWebGLMultipleRenderTargets){let o=r.texture;if(a.length!==o.length||36064!==a[0]){for(let l=0,h=o.length;l<h;l++)a[l]=36064+l;a.length=o.length,s=!0}}else 36064!==a[0]&&(a[0]=36064,s=!0)}else 1029!==a[0]&&(a[0]=1029,s=!0);s&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return f!==t&&(e.useProgram(t),f=t,!0)},setBlending:eS,setMaterial:function(e,t){e.side===g?e_(2884):ex(2884);let n=e.side===m;t&&(n=!n),eT(n),e.blending===_&&!1===e.transparent?eS(x):eS(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite);let r=e.stencilWrite;h.setTest(r),r&&(h.setMask(e.stencilWriteMask),h.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),h.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),eA(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?ex(32926):e_(32926)},setFlipSided:eT,setCullFace:eE,setLineWidth:function(t){t!==ei&&(el&&e.lineWidth(t),ei=t)},setPolygonOffset:eA,setScissorTest:function(e){e?ex(3089):e_(3089)},activeTexture:eR,bindTexture:function(t,n){null===ec&&eR();let r=ed[ec];void 0===r&&(r={type:void 0,texture:void 0},ed[ec]=r),(r.type!==t||r.texture!==n)&&(e.bindTexture(t,n||ey[t]),r.type=t,r.texture=n)},unbindTexture:function(){let t=ed[ec];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===em.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),em.copy(t))},viewport:function(t){!1===eg.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),eg.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),u={},ec=null,ed={},c={},d=new WeakMap,p=[],f=null,v=!1,y=null,Y=null,Z=null,K=null,Q=null,$=null,ee=null,et=!1,en=null,er=null,ei=null,ea=null,es=null,em.set(0,0,e.canvas.width,e.canvas.height),eg.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),h.reset()}}}function sj(e,t,n,r,i,a,s){let o=i.isWebGL2,l=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,c=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap,m,g=new WeakMap,v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(y){}function x(e,t){return v?new OffscreenCanvas(e,t):ng("canvas")}function _(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let a=t?nh:Math.floor,s=a(i*e.width),o=a(i*e.height);void 0===m&&(m=x(s,o));let l=n?x(s,o):m;l.width=s,l.height=o;let h=l.getContext("2d");return h.drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function b(e){return no(e.width)&&no(e.height)}function M(e,t){return e.generateMipmaps&&t&&e.minFilter!==ep&&e.minFilter!==ey}function w(t){e.generateMipmap(t)}function S(n,r,i,a,s=!1){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;return 6403===r&&(5126===i&&(l=33326),5131===i&&(l=33325),5121===i&&(l=33321)),33319===r&&(5126===i&&(l=33328),5131===i&&(l=33327),5121===i&&(l=33323)),6408===r&&(5126===i&&(l=34836),5131===i&&(l=34842),5121===i&&(l=a===tw&&!1===s?35907:32856),32819===i&&(l=32854),32820===i&&(l=32855)),(33325===l||33326===l||33327===l||33328===l||34842===l||34836===l)&&t.get("EXT_color_buffer_float"),l}function T(e,t,n){return!0===M(e,n)||e.isFramebufferTexture&&e.minFilter!==ep&&e.minFilter!==ey?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function E(e){return e===ep||e===ef||e===eg?9728:9729}function A(e){let t=e.target;t.removeEventListener("dispose",A),function(e){let t=r.get(e);if(void 0===t.__webglInit)return;let n=e.source,i=g.get(n);if(i){let a=i[t.__cacheKey];a.usedTimes--,0===a.usedTimes&&C(e),0===Object.keys(i).length&&g.delete(n)}r.remove(e)}(t),t.isVideoTexture&&f.delete(t)}function R(t){let n=t.target;n.removeEventListener("dispose",R),function(t){let n=t.texture,i=r.get(t),a=r.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(i.__webglFramebuffer[o]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[o]);else e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&e.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let l=0,h=n.length;l<h;l++){let u=r.get(n[l]);u.__webglTexture&&(e.deleteTexture(u.__webglTexture),s.memory.textures--),r.remove(n[l])}r.remove(n),r.remove(t)}(n)}function C(t){let n=r.get(t);e.deleteTexture(n.__webglTexture);let i=t.source,a=g.get(i);delete a[n.__cacheKey],s.memory.textures--}let L=0;function P(e,t){let i=r.get(e);if(e.isVideoTexture&&function(e){let t=s.render.frame;f.get(e)!==t&&(f.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&i.__version!==e.version){let a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{z(i,e,t);return}}n.activeTexture(33984+t),n.bindTexture(3553,i.__webglTexture)}let D={[eu]:10497,[ec]:33071,[ed]:33648},I={[ep]:9728,[ef]:9984,[eg]:9986,[ey]:9729,[ex]:9985,[eb]:9987};function N(n,a,s){if(s?(e.texParameteri(n,10242,D[a.wrapS]),e.texParameteri(n,10243,D[a.wrapT]),(32879===n||35866===n)&&e.texParameteri(n,32882,D[a.wrapR]),e.texParameteri(n,10240,I[a.magFilter]),e.texParameteri(n,10241,I[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),(32879===n||35866===n)&&e.texParameteri(n,32882,33071),(a.wrapS!==ec||a.wrapT!==ec)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,E(a.magFilter)),e.texParameteri(n,10241,E(a.minFilter)),a.minFilter!==ep&&a.minFilter!==ey&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let l=t.get("EXT_texture_filter_anisotropic");(a.type!==eC||!1!==t.has("OES_texture_float_linear"))&&(!1!==o||a.type!==eL||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function B(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",A));let i=n.source,a=g.get(i);void 0===a&&(a={},g.set(i,a));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,r=!0),a[o].usedTimes++;let l=a[t.__cacheKey];void 0!==l&&(a[t.__cacheKey].usedTimes--,0===l.usedTimes&&C(n)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return r}function z(t,r,i){let s=3553;r.isDataArrayTexture&&(s=35866),r.isData3DTexture&&(s=32879);let l=B(t,r),h=r.source;if(n.activeTexture(33984+i),n.bindTexture(s,t.__webglTexture),h.version!==h.__currentVersion||!0===l){var c;e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);let d=!o&&(r.wrapS!==ec||r.wrapT!==ec||r.minFilter!==ep&&r.minFilter!==ey)&&!1===b(r.image),p=_(r.image,d,!1,u);p=k(r,p);let f=b(p)||o,m=a.convert(r.format,r.encoding),g=a.convert(r.type),v=S(r.internalFormat,m,g,r.encoding,r.isVideoTexture);N(s,r,f);let y,x=r.mipmaps,E=o&&!0!==r.isVideoTexture,A=void 0===t.__version||!0===l,R=T(r,p,f);if(r.isDepthTexture)v=6402,o?v=r.type===eC?36012:r.type===eR?33190:r.type===eI?35056:33189:r.type===eC&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===eF&&6402===v&&r.type!==eE&&r.type!==eR&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=eE,g=a.convert(r.type)),r.format===eH&&6402===v&&(v=34041,r.type!==eI&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=eI,g=a.convert(r.type))),A&&(E?n.texStorage2D(3553,1,v,p.width,p.height):n.texImage2D(3553,0,v,p.width,p.height,0,m,g,null));else if(r.isDataTexture){if(x.length>0&&f){E&&A&&n.texStorage2D(3553,R,v,x[0].width,x[0].height);for(let C=0,L=x.length;C<L;C++)y=x[C],E?n.texSubImage2D(3553,C,0,0,y.width,y.height,m,g,y.data):n.texImage2D(3553,C,v,y.width,y.height,0,m,g,y.data);r.generateMipmaps=!1}else E?(A&&n.texStorage2D(3553,R,v,p.width,p.height),n.texSubImage2D(3553,0,0,0,p.width,p.height,m,g,p.data)):n.texImage2D(3553,0,v,p.width,p.height,0,m,g,p.data)}else if(r.isCompressedTexture){E&&A&&n.texStorage2D(3553,R,v,x[0].width,x[0].height);for(let P=0,D=x.length;P<D;P++)y=x[P],r.format!==ez?null!==m?E?n.compressedTexSubImage2D(3553,P,0,0,y.width,y.height,m,y.data):n.compressedTexImage2D(3553,P,v,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage2D(3553,P,0,0,y.width,y.height,m,g,y.data):n.texImage2D(3553,P,v,y.width,y.height,0,m,g,y.data)}else if(r.isDataArrayTexture)E?(A&&n.texStorage3D(35866,R,v,p.width,p.height,p.depth),n.texSubImage3D(35866,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):n.texImage3D(35866,0,v,p.width,p.height,p.depth,0,m,g,p.data);else if(r.isData3DTexture)E?(A&&n.texStorage3D(32879,R,v,p.width,p.height,p.depth),n.texSubImage3D(32879,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):n.texImage3D(32879,0,v,p.width,p.height,p.depth,0,m,g,p.data);else if(r.isFramebufferTexture){if(A){if(E)n.texStorage2D(3553,R,v,p.width,p.height);else{let I=p.width,z=p.height;for(let O=0;O<R;O++)n.texImage2D(3553,O,v,I,z,0,m,g,null),I>>=1,z>>=1}}}else if(x.length>0&&f){E&&A&&n.texStorage2D(3553,R,v,x[0].width,x[0].height);for(let U=0,F=x.length;U<F;U++)y=x[U],E?n.texSubImage2D(3553,U,0,0,m,g,y):n.texImage2D(3553,U,v,m,g,y);r.generateMipmaps=!1}else E?(A&&n.texStorage2D(3553,R,v,p.width,p.height),n.texSubImage2D(3553,0,0,0,m,g,p)):n.texImage2D(3553,0,v,m,g,p);M(r,f)&&w(s),h.__currentVersion=h.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function O(t,i,s,o,l){let h=a.convert(s.format,s.encoding),u=a.convert(s.type),c=S(s.internalFormat,h,u,s.encoding),p=r.get(i);p.__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,c,i.width,i.height,i.depth,0,h,u,null):n.texImage2D(l,0,c,i.width,i.height,0,h,u,null)),n.bindFramebuffer(36160,t),G(i)?d.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(s).__webglTexture,0,H(i)):e.framebufferTexture2D(36160,o,l,r.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function U(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||G(n)){let s=n.depthTexture;s&&s.isDepthTexture&&(s.type===eC?i=36012:s.type===eR&&(i=33190));let o=H(n);G(n)?d.renderbufferStorageMultisampleEXT(36161,o,i,n.width,n.height):e.renderbufferStorageMultisample(36161,o,i,n.width,n.height)}else e.renderbufferStorage(36161,i,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){let l=H(n);r&&!1===G(n)?e.renderbufferStorageMultisample(36161,l,35056,n.width,n.height):G(n)?d.renderbufferStorageMultisampleEXT(36161,l,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{let h=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,u=a.convert(h.format,h.encoding),c=a.convert(h.type),p=S(h.internalFormat,u,c,h.encoding),f=H(n);r&&!1===G(n)?e.renderbufferStorageMultisample(36161,f,p,n.width,n.height):G(n)?d.renderbufferStorageMultisampleEXT(36161,f,p,n.width,n.height):e.renderbufferStorage(36161,p,n.width,n.height)}e.bindRenderbuffer(36161,null)}function F(t){let i=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,i){let a=i&&i.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!(i.depthTexture&&i.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),P(i.depthTexture,0);let s=r.get(i.depthTexture).__webglTexture,o=H(i);if(i.depthTexture.format===eF)G(i)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,o):e.framebufferTexture2D(36160,36096,3553,s,0);else if(i.depthTexture.format===eH)G(i)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,o):e.framebufferTexture2D(36160,33306,3553,s,0);else throw Error("Unknown depthTexture format")}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let s=0;s<6;s++)n.bindFramebuffer(36160,i.__webglFramebuffer[s]),i.__webglDepthbuffer[s]=e.createRenderbuffer(),U(i.__webglDepthbuffer[s],t,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),U(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function H(e){return Math.min(c,e.samples)}function G(e){let n=r.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function k(e,n){let r=e.encoding,i=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===t4||r!==tM&&(r===tw?!1===o?!0===t.has("EXT_sRGB")&&i===ez?(e.format=t4,e.minFilter=ey,e.generateMipmaps=!1):n=nC.sRGBToLinear(n):(i!==ez||a!==ew)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),n}this.allocateTextureUnit=function(){let e=L;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),L+=1,e},this.resetTextureUnits=function(){L=0},this.setTexture2D=P,this.setTexture2DArray=function(e,t){let i=r.get(e);if(e.version>0&&i.__version!==e.version){z(i,e,t);return}n.activeTexture(33984+t),n.bindTexture(35866,i.__webglTexture)},this.setTexture3D=function(e,t){let i=r.get(e);if(e.version>0&&i.__version!==e.version){z(i,e,t);return}n.activeTexture(33984+t),n.bindTexture(32879,i.__webglTexture)},this.setTextureCube=function(t,i){let s=r.get(t);if(t.version>0&&s.__version!==t.version){(function(t,r,i){if(6!==r.image.length)return;let s=B(t,r),l=r.source;if(n.activeTexture(33984+i),n.bindTexture(34067,t.__webglTexture),l.version!==l.__currentVersion||!0===s){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);let u=r.isCompressedTexture||r.image[0].isCompressedTexture,c=r.image[0]&&r.image[0].isDataTexture,d=[];for(let p=0;p<6;p++)u||c?d[p]=c?r.image[p].image:r.image[p]:d[p]=_(r.image[p],!1,!0,h),d[p]=k(r,d[p]);let f=d[0],m=b(f)||o,g=a.convert(r.format,r.encoding),v=a.convert(r.type),y=S(r.internalFormat,g,v,r.encoding),x=o&&!0!==r.isVideoTexture,E=void 0===t.__version,A=T(r,f,m);N(34067,r,m);let R;if(u){x&&E&&n.texStorage2D(34067,A,y,f.width,f.height);for(let C=0;C<6;C++){R=d[C].mipmaps;for(let L=0;L<R.length;L++){let P=R[L];r.format!==ez?null!==g?x?n.compressedTexSubImage2D(34069+C,L,0,0,P.width,P.height,g,P.data):n.compressedTexImage2D(34069+C,L,y,P.width,P.height,0,P.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):x?n.texSubImage2D(34069+C,L,0,0,P.width,P.height,g,v,P.data):n.texImage2D(34069+C,L,y,P.width,P.height,0,g,v,P.data)}}}else{R=r.mipmaps,x&&E&&(R.length>0&&A++,n.texStorage2D(34067,A,y,d[0].width,d[0].height));for(let D=0;D<6;D++)if(c){x?n.texSubImage2D(34069+D,0,0,0,d[D].width,d[D].height,g,v,d[D].data):n.texImage2D(34069+D,0,y,d[D].width,d[D].height,0,g,v,d[D].data);for(let I=0;I<R.length;I++){let z=R[I],O=z.image[D].image;x?n.texSubImage2D(34069+D,I+1,0,0,O.width,O.height,g,v,O.data):n.texImage2D(34069+D,I+1,y,O.width,O.height,0,g,v,O.data)}}else{x?n.texSubImage2D(34069+D,0,0,0,g,v,d[D]):n.texImage2D(34069+D,0,y,g,v,d[D]);for(let U=0;U<R.length;U++){let F=R[U];x?n.texSubImage2D(34069+D,U+1,0,0,g,v,F.image[D]):n.texImage2D(34069+D,U+1,y,g,v,F.image[D])}}}M(r,m)&&w(34067),l.__currentVersion=l.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version})(s,t,i);return}n.activeTexture(33984+i),n.bindTexture(34067,s.__webglTexture)},this.rebindTextures=function(e,t,n){let i=r.get(e);void 0!==t&&O(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&F(e)},this.setupRenderTarget=function(t){let l=t.texture,h=r.get(t),u=r.get(l);t.addEventListener("dispose",R),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=l.version,s.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=b(t)||o;if(c){h.__webglFramebuffer=[];for(let f=0;f<6;f++)h.__webglFramebuffer[f]=e.createFramebuffer()}else if(h.__webglFramebuffer=e.createFramebuffer(),d){if(i.drawBuffers){let m=t.texture;for(let g=0,v=m.length;g<v;g++){let y=r.get(m[g]);void 0===y.__webglTexture&&(y.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(o&&t.samples>0&&!1===G(t)){h.__webglMultisampledFramebuffer=e.createFramebuffer(),h.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,h.__webglColorRenderbuffer);let x=a.convert(l.format,l.encoding),_=a.convert(l.type),T=S(l.internalFormat,x,_,l.encoding),E=H(t);e.renderbufferStorageMultisample(36161,E,T,t.width,t.height),n.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,h.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(h.__webglDepthRenderbuffer=e.createRenderbuffer(),U(h.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}if(c){n.bindTexture(34067,u.__webglTexture),N(34067,l,p);for(let A=0;A<6;A++)O(h.__webglFramebuffer[A],t,l,36064,34069+A);M(l,p)&&w(34067),n.unbindTexture()}else if(d){let C=t.texture;for(let L=0,P=C.length;L<P;L++){let D=C[L],I=r.get(D);n.bindTexture(3553,I.__webglTexture),N(3553,D,p),O(h.__webglFramebuffer,t,D,36064+L,3553),M(D,p)&&w(3553)}n.unbindTexture()}else{let B=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?B=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(B,u.__webglTexture),N(B,l,p),O(h.__webglFramebuffer,t,l,36064,B),M(l,p)&&w(B),n.unbindTexture()}t.depthBuffer&&F(t)},this.updateRenderTargetMipmap=function(e){let t=b(e)||o,i=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,s=i.length;a<s;a++){let l=i[a];if(M(l,t)){let h=e.isWebGLCubeRenderTarget?34067:3553,u=r.get(l).__webglTexture;n.bindTexture(h,u),w(h),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===G(t)){let i=t.width,a=t.height,s=16384,l=[36064],h=t.stencilBuffer?33306:36096;t.depthBuffer&&l.push(h);let u=r.get(t),c=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;!1===c&&(t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024)),n.bindFramebuffer(36008,u.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,u.__webglFramebuffer),!0===c&&(e.invalidateFramebuffer(36008,[h]),e.invalidateFramebuffer(36009,[h])),e.blitFramebuffer(0,0,i,a,0,0,i,a,s,9728),p&&e.invalidateFramebuffer(36008,l),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=O,this.useMultisampledRTT=G}function sq(e,t,n){let r=n.isWebGL2;return{convert:function(n,i=null){let a;if(n===ew)return 5121;if(n===eP)return 32819;if(n===eD)return 32820;if(n===eS)return 5120;if(n===eT)return 5122;if(n===eE)return 5123;if(n===eA)return 5124;if(n===eR)return 5125;if(n===eC)return 5126;if(n===eL)return r?5131:null!==(a=t.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(n===eN)return 6406;if(n===ez)return 6408;if(n===eO)return 6409;if(n===eU)return 6410;if(n===eF)return 6402;if(n===eH)return 34041;if(n===eG)return 6403;if(n===eB)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===t4)return null!==(a=t.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;if(n===ek)return 36244;if(n===eV)return 33319;if(n===eW)return 33320;if(n===ej)return 36249;if(n===eq||n===eX||n===eJ||n===eY){if(i===tw){if(null===(a=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(n===eq)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===eX)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===eJ)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===eY)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=t.get("WEBGL_compressed_texture_s3tc")))return null;if(n===eq)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===eX)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===eJ)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===eY)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(n===eZ||n===eK||n===eQ||n===e$){if(null===(a=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(n===eZ)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===eK)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===eQ)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===e$)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===e0)return null!==(a=t.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===e1||n===e3){if(null===(a=t.get("WEBGL_compressed_texture_etc")))return null;if(n===e1)return i===tw?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===e3)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(n===e2||n===e4||n===e5||n===e6||n===e7||n===e8||n===e9||n===te||n===tt||n===tn||n===tr||n===ti||n===ta||n===ts){if(null===(a=t.get("WEBGL_compressed_texture_astc")))return null;if(n===e2)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===e4)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===e5)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===e6)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===e7)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===e8)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===e9)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===te)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===tt)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===tn)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===tr)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ti)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===ta)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ts)return i===tw?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===to){if(null===(a=t.get("EXT_texture_compression_bptc")))return null;if(n===to)return i===tw?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===eI?r?34042:null!==(a=t.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[n]?e[n]:null}}}sk.prototype.isMeshDistanceMaterial=!0;class sX extends iI{constructor(e=[]){super(),this.cameras=e}}sX.prototype.isArrayCamera=!0;class sJ extends rN{constructor(){super(),this.type="Group"}}sJ.prototype.isGroup=!0;let sY={type:"move"};class sZ{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new sJ,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new sJ,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new nk,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new nk),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new sJ,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new nk,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new nk),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(null!==s&&null!==(r=t.getPose(e.targetRaySpace,n))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(sY)),l&&e.hand){for(let h of(a=!0,e.hand.values())){let u=t.getJointPose(h,n);if(void 0===l.joints[h.jointName]){let c=new sJ;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[h.jointName]=c,l.add(c)}let d=l.joints[h.jointName];null!==u&&(d.matrix.fromArray(u.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=u.radius),d.visible=null!==u}let p=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],m=p.position.distanceTo(f.position);l.inputState.pinching&&m>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,n))&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1)}return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}class sK extends nI{constructor(e,t,n,r,i,a,s,o,l,h){if((h=void 0!==h?h:eF)!==eF&&h!==eH)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&h===eF&&(n=eE),void 0===n&&h===eH&&(n=eI),super(null,r,i,a,s,o,h,n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:ep,this.minFilter=void 0!==o?o:ep,this.flipY=!1,this.generateMipmaps=!1}}sK.prototype.isDepthTexture=!0;class sQ extends t5{constructor(e,t){super();let n=this,r=null,i=1,a=null,s="local-floor",o=null,l=null,h=null,u=null,c=null,d=null,p=t.getContextAttributes(),f=null,m=null,g=[],v=new Map,y=new iI;y.layers.enable(1),y.viewport=new nN;let x=new iI;x.layers.enable(2),x.viewport=new nN;let _=[y,x],b=new sX;b.layers.enable(1),b.layers.enable(2);let M=null,w=null;function S(e){let t=v.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function T(){v.forEach(function(e,t){e.disconnect(t)}),v.clear(),M=null,w=null,e.setRenderTarget(f),c=null,u=null,h=null,r=null,m=null,P.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function E(e){let t=r.inputSources;for(let n=0;n<t.length;n++){let i="right"===t[n].handedness?1:0;v.set(t[n],g[i])}for(let a=0;a<e.removed.length;a++){let s=e.removed[a],o=v.get(s);o&&(o.dispatchEvent({type:"disconnected",data:s}),v.delete(s))}for(let l=0;l<e.added.length;l++){let h=e.added[l],u=v.get(h);u&&u.dispatchEvent({type:"connected",data:h})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new sZ,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new sZ,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new sZ,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||a},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==u?u:c},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(o){if(null!==(r=o)){if(f=e.getRenderTarget(),r.addEventListener("select",S),r.addEventListener("selectstart",S),r.addEventListener("selectend",S),r.addEventListener("squeeze",S),r.addEventListener("squeezestart",S),r.addEventListener("squeezeend",S),r.addEventListener("end",T),r.addEventListener("inputsourceschange",E),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){let l={antialias:void 0!==r.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:i};c=new XRWebGLLayer(r,t,l),r.updateRenderState({baseLayer:c}),m=new nB(c.framebufferWidth,c.framebufferHeight,{format:ez,type:ew,encoding:e.outputEncoding})}else{let d=null,g=null,v=null;p.depth&&(v=p.stencil?35056:33190,d=p.stencil?eH:eF,g=p.stencil?eI:eE);let y={colorFormat:e.outputEncoding===tw?35907:32856,depthFormat:v,scaleFactor:i};u=(h=new XRWebGLBinding(r,t)).createProjectionLayer(y),r.updateRenderState({layers:[u]}),m=new nB(u.textureWidth,u.textureHeight,{format:ez,type:ew,depthTexture:new sK(u.textureWidth,u.textureHeight,g,void 0,void 0,void 0,void 0,void 0,void 0,d),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});let x=e.properties.get(m);x.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),a=await r.requestReferenceSpace(s),P.setContext(r),P.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};let A=new nk,R=new nk;function C(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;b.near=x.near=y.near=e.near,b.far=x.far=y.far=e.far,(M!==b.near||w!==b.far)&&(r.updateRenderState({depthNear:b.near,depthFar:b.far}),M=b.near,w=b.far);let t=e.parent,n=b.cameras;C(b,t);for(let i=0;i<n.length;i++)C(n[i],t);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),e.position.copy(b.position),e.quaternion.copy(b.quaternion),e.scale.copy(b.scale),e.matrix.copy(b.matrix),e.matrixWorld.copy(b.matrixWorld);let a=e.children;for(let s=0,o=a.length;s<o;s++)a[s].updateMatrixWorld(!0);2===n.length?function(e,t,n){A.setFromMatrixPosition(t.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);let r=A.distanceTo(R),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],h=(i[9]-1)/i[5],u=(i[8]-1)/i[0],c=(a[8]+1)/a[0],d=r/(-u+c),p=-(d*u);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*u-p,s*c+(r-p),l*o/m*f,h*o/m*f,f,m)}(b,y,x):b.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(e){null!==u&&(u.fixedFoveation=e),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=e)};let L=null,P=new iW;P.setAnimationLoop(function(t,n){if(l=n.getViewerPose(o||a),d=n,null!==l){let i=l.views;null!==c&&(e.setRenderTargetFramebuffer(m,c.framebuffer),e.setRenderTarget(m));let s=!1;i.length!==b.cameras.length&&(b.cameras.length=0,s=!0);for(let p=0;p<i.length;p++){let f=i[p],y=null;if(null!==c)y=c.getViewport(f);else{let x=h.getViewSubImage(u,f);y=x.viewport,0===p&&(e.setRenderTargetTextures(m,x.colorTexture,u.ignoreDepthValues?void 0:x.depthStencilTexture),e.setRenderTarget(m))}let M=_[p];M.matrix.fromArray(f.transform.matrix),M.projectionMatrix.fromArray(f.projectionMatrix),M.viewport.set(y.x,y.y,y.width,y.height),0===p&&b.matrix.copy(M.matrix),!0===s&&b.cameras.push(M)}}let w=r.inputSources;for(let S=0;S<g.length;S++){let T=w[S],E=v.get(T);void 0!==E&&E.update(T,n,o||a)}L&&L(t,n),d=null}),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function s$(e,t){function n(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map),r.alphaMap&&(n.alphaMap.value=r.alphaMap),r.bumpMap&&(n.bumpMap.value=r.bumpMap,n.bumpScale.value=r.bumpScale,r.side===m&&(n.bumpScale.value*=-1)),r.displacementMap&&(n.displacementMap.value=r.displacementMap,n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap),r.normalMap&&(n.normalMap.value=r.normalMap,n.normalScale.value.copy(r.normalScale),r.side===m&&n.normalScale.value.negate()),r.specularMap&&(n.specularMap.value=r.specularMap),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);let i=t.get(r).envMap;if(i&&(n.envMap.value=i,n.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;let a=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*a}r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity);let s;r.map?s=r.map:r.specularMap?s=r.specularMap:r.displacementMap?s=r.displacementMap:r.normalMap?s=r.normalMap:r.bumpMap?s=r.bumpMap:r.roughnessMap?s=r.roughnessMap:r.metalnessMap?s=r.metalnessMap:r.alphaMap?s=r.alphaMap:r.emissiveMap?s=r.emissiveMap:r.clearcoatMap?s=r.clearcoatMap:r.clearcoatNormalMap?s=r.clearcoatNormalMap:r.clearcoatRoughnessMap?s=r.clearcoatRoughnessMap:r.specularIntensityMap?s=r.specularIntensityMap:r.specularColorMap?s=r.specularColorMap:r.transmissionMap?s=r.transmissionMap:r.thicknessMap?s=r.thicknessMap:r.sheenColorMap?s=r.sheenColorMap:r.sheenRoughnessMap&&(s=r.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uvTransform.value.copy(s.matrix));let o;r.aoMap?o=r.aoMap:r.lightMap&&(o=r.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),n.uv2Transform.value.copy(o.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,i,a,s){var o,l,h,u,c,d,p,f,g,v,y,x,_,b,M,w,S,T,E,A,R;let C,L;r.isMeshBasicMaterial?n(e,r):r.isMeshLambertMaterial?n(e,r):r.isMeshToonMaterial?(n(e,r),o=e,(l=r).gradientMap&&(o.gradientMap.value=l.gradientMap)):r.isMeshPhongMaterial?(n(e,r),h=e,u=r,h.specular.value.copy(u.specular),h.shininess.value=Math.max(u.shininess,1e-4)):r.isMeshStandardMaterial?(n(e,r),function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap);let r=t.get(n).envMap;r&&(e.envMapIntensity.value=n.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&(c=e,d=r,p=s,c.ior.value=d.ior,d.sheen>0&&(c.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),c.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(c.sheenColorMap.value=d.sheenColorMap),d.sheenRoughnessMap&&(c.sheenRoughnessMap.value=d.sheenRoughnessMap)),d.clearcoat>0&&(c.clearcoat.value=d.clearcoat,c.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(c.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(c.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),c.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===m&&c.clearcoatNormalScale.value.negate())),d.transmission>0&&(c.transmission.value=d.transmission,c.transmissionSamplerMap.value=p.texture,c.transmissionSamplerSize.value.set(p.width,p.height),d.transmissionMap&&(c.transmissionMap.value=d.transmissionMap),c.thickness.value=d.thickness,d.thicknessMap&&(c.thicknessMap.value=d.thicknessMap),c.attenuationDistance.value=d.attenuationDistance,c.attenuationColor.value.copy(d.attenuationColor)),c.specularIntensity.value=d.specularIntensity,c.specularColor.value.copy(d.specularColor),d.specularIntensityMap&&(c.specularIntensityMap.value=d.specularIntensityMap),d.specularColorMap&&(c.specularColorMap.value=d.specularColorMap))):r.isMeshMatcapMaterial?(n(e,r),f=e,(g=r).matcap&&(f.matcap.value=g.matcap)):r.isMeshDepthMaterial?n(e,r):r.isMeshDistanceMaterial?(n(e,r),v=e,y=r,v.referencePosition.value.copy(y.referencePosition),v.nearDistance.value=y.nearDistance,v.farDistance.value=y.farDistance):r.isMeshNormalMaterial?n(e,r):r.isLineBasicMaterial?(x=e,_=r,x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,r.isLineDashedMaterial&&(b=e,M=r,b.dashSize.value=M.dashSize,b.totalSize.value=M.dashSize+M.gapSize,b.scale.value=M.scale)):r.isPointsMaterial?(w=e,S=r,T=i,E=a,w.diffuse.value.copy(S.color),w.opacity.value=S.opacity,w.size.value=S.size*T,w.scale.value=.5*E,S.map&&(w.map.value=S.map),S.alphaMap&&(w.alphaMap.value=S.alphaMap),S.alphaTest>0&&(w.alphaTest.value=S.alphaTest),S.map?C=S.map:S.alphaMap&&(C=S.alphaMap),void 0!==C&&(!0===C.matrixAutoUpdate&&C.updateMatrix(),w.uvTransform.value.copy(C.matrix))):r.isSpriteMaterial?(A=e,R=r,A.diffuse.value.copy(R.color),A.opacity.value=R.opacity,A.rotation.value=R.rotation,R.map&&(A.map.value=R.map),R.alphaMap&&(A.alphaMap.value=R.alphaMap),R.alphaTest>0&&(A.alphaTest.value=R.alphaTest),R.map?L=R.map:R.alphaMap&&(L=R.alphaMap),void 0!==L&&(!0===L.matrixAutoUpdate&&L.updateMatrix(),A.uvTransform.value.copy(L.matrix))):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function s0(e={}){let t=void 0!==e.canvas?e.canvas:function(){let e=ng("canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c;c=null!==n?n.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let d=null,p=null,v=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=tM,this.physicallyCorrectLights=!1,this.toneMapping=Q,this.toneMappingExposure=1;let x=this,_=!1,b=0,M=0,w=null,S=-1,T=null,E=new nN,A=new nN,R=null,C=t.width,L=t.height,P=1,D=null,I=null,N=new nN(0,0,C,L),B=new nN(0,0,C,L),z=!1,O=new iV,U=!1,F=!1,H=null,G=new rh,k=new nc,V=new nk,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===w?P:1}let q=n;function X(e,n){for(let r=0;r<e.length;r++){let i=e[r],a=t.getContext(i,n);if(null!==a)return a}return null}try{if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${r}`),t.addEventListener("webglcontextlost",eS,!1),t.addEventListener("webglcontextrestored",eT,!1),null===q){let J=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&J.shift(),q=X(J,{alpha:!0,depth:i,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u}),null===q){if(X(J))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===q.getShaderPrecisionFormat&&(q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Y){throw console.error("THREE.WebGLRenderer: "+Y.message),Y}let Z,K,$,ee,et,en,er,ei,ea,es,eo,el,eh,eu,ec,ed,ep,ef,em,eg,ev,ey,ex;function e_(){Z=new ao(q),K=new i$(q,Z,e),Z.init(K),ey=new sq(q,Z,K),$=new sW(q,Z,K),ee=new au(q),et=new sL,en=new sj(q,Z,$,et,K,ey,ee),er=new i1(x),ei=new as(x),ea=new ij(q,K),ex=new iK(q,Z,ea,K),es=new al(q,ea,ee,ex),eo=new am(q,es,ea,ee),em=new af(q,K,en),ed=new i0(et),el=new sC(x,er,ei,Z,K,ex,ed),eh=new s$(x,et),eu=new sN,ec=new sH(Z,K),ef=new iZ(x,er,$,eo,c,o),ep=new sV(x,eo,K),eg=new iQ(q,Z,ee,K),ev=new ah(q,Z,ee,K),ee.programs=el.programs,x.capabilities=K,x.extensions=Z,x.properties=et,x.renderLists=eu,x.shadowMap=ep,x.state=$,x.info=ee}e_();let eM=new sQ(x,q);function eS(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function eT(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;let e=ee.autoReset,t=ep.enabled,n=ep.autoUpdate,r=ep.needsUpdate,i=ep.type;e_(),ee.autoReset=e,ep.enabled=t,ep.autoUpdate=n,ep.needsUpdate=r,ep.type=i}function eE(e){var t;let n=e.target;n.removeEventListener("dispose",eE),function(e){let t=et.get(e).programs;void 0!==t&&(t.forEach(function(e){el.releaseProgram(e)}),e.isShaderMaterial&&el.releaseShaderCache(e))}(t=n),et.remove(t)}this.xr=eM,this.getContext=function(){return q},this.getContextAttributes=function(){return q.getContextAttributes()},this.forceContextLoss=function(){let e=Z.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=Z.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(e){void 0!==e&&(P=e,this.setSize(C,L,!1))},this.getSize=function(e){return e.set(C,L)},this.setSize=function(e,n,r){if(eM.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=e,L=n,t.width=Math.floor(e*P),t.height=Math.floor(n*P),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n)},this.getDrawingBufferSize=function(e){return e.set(C*P,L*P).floor()},this.setDrawingBufferSize=function(e,n,r){C=e,L=n,P=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(E)},this.getViewport=function(e){return e.copy(N)},this.setViewport=function(e,t,n,r){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,n,r),$.viewport(E.copy(N).multiplyScalar(P).floor())},this.getScissor=function(e){return e.copy(B)},this.setScissor=function(e,t,n,r){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,n,r),$.scissor(A.copy(B).multiplyScalar(P).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(e){$.setScissorTest(z=e)},this.setOpaqueSort=function(e){D=e},this.setTransparentSort=function(e){I=e},this.getClearColor=function(e){return e.copy(ef.getClearColor())},this.setClearColor=function(){ef.setClearColor.apply(ef,arguments)},this.getClearAlpha=function(){return ef.getClearAlpha()},this.setClearAlpha=function(){ef.setClearAlpha.apply(ef,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;e&&(r|=16384),t&&(r|=256),n&&(r|=1024),q.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",eS,!1),t.removeEventListener("webglcontextrestored",eT,!1),eu.dispose(),ec.dispose(),et.dispose(),er.dispose(),ei.dispose(),eo.dispose(),ex.dispose(),el.dispose(),eM.dispose(),eM.removeEventListener("sessionstart",eR),eM.removeEventListener("sessionend",eP),H&&(H.dispose(),H=null),eD.stop()},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=W);let s=i.isMesh&&0>i.matrixWorld.determinant(),o=function(e,t,n,r,i){var a,s;!0!==t.isScene&&(t=W),en.resetTextureUnits();let o=t.fog,l=r.isMeshStandardMaterial?t.environment:null,h=null===w?x.outputEncoding:!0===w.isXRRenderTarget?w.texture.encoding:tM,u=(r.isMeshStandardMaterial?ei:er).get(r.envMap||l),c=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,d=!!r.normalMap&&!!n.attributes.tangent,f=!!n.morphAttributes.position,m=!!n.morphAttributes.normal,g=!!n.morphAttributes.color,v=r.toneMapped?x.toneMapping:Q,y=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==y?y.length:0,b=et.get(r),M=p.state.lights;if(!0===U&&(!0===F||e!==T)){let E=e===T&&r.id===S;ed.setState(r,e,E)}let A=!1;r.version===b.__version?b.needsLights&&b.lightsStateVersion!==M.state.version?A=!0:b.outputEncoding!==h?A=!0:i.isInstancedMesh&&!1===b.instancing?A=!0:i.isInstancedMesh||!0!==b.instancing?i.isSkinnedMesh&&!1===b.skinning?A=!0:i.isSkinnedMesh||!0!==b.skinning?b.envMap!==u?A=!0:!0===r.fog&&b.fog!==o?A=!0:void 0!==b.numClippingPlanes&&(b.numClippingPlanes!==ed.numPlanes||b.numIntersection!==ed.numIntersection)?A=!0:b.vertexAlphas!==c?A=!0:b.vertexTangents!==d?A=!0:b.morphTargets!==f?A=!0:b.morphNormals!==m?A=!0:b.morphColors!==g?A=!0:b.toneMapping!==v?A=!0:!0===K.isWebGL2&&b.morphTargetsCount!==_&&(A=!0):A=!0:A=!0:(A=!0,b.__version=r.version);let R=b.currentProgram;!0===A&&(R=eO(r,t,i));let C=!1,D=!1,I=!1,N=R.getUniforms(),B=b.uniforms;if($.useProgram(R.program)&&(C=!0,D=!0,I=!0),r.id!==S&&(S=r.id,D=!0),C||T!==e){if(N.setValue(q,"projectionMatrix",e.projectionMatrix),K.logarithmicDepthBuffer&&N.setValue(q,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),T!==e&&(T=e,D=!0,I=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){let z=N.map.cameraPosition;void 0!==z&&z.setValue(q,V.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&N.setValue(q,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&N.setValue(q,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){N.setOptional(q,i,"bindMatrix"),N.setOptional(q,i,"bindMatrixInverse");let O=i.skeleton;O&&(K.floatVertexTextures?(null===O.boneTexture&&O.computeBoneTexture(),N.setValue(q,"boneTexture",O.boneTexture,en),N.setValue(q,"boneTextureSize",O.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let G=n.morphAttributes;return(void 0!==G.position||void 0!==G.normal||void 0!==G.color&&!0===K.isWebGL2)&&em.update(i,n,r,R),(D||b.receiveShadow!==i.receiveShadow)&&(b.receiveShadow=i.receiveShadow,N.setValue(q,"receiveShadow",i.receiveShadow)),D&&(N.setValue(q,"toneMappingExposure",x.toneMappingExposure),b.needsLights&&(a=B,s=I,a.ambientLightColor.needsUpdate=s,a.lightProbe.needsUpdate=s,a.directionalLights.needsUpdate=s,a.directionalLightShadows.needsUpdate=s,a.pointLights.needsUpdate=s,a.pointLightShadows.needsUpdate=s,a.spotLights.needsUpdate=s,a.spotLightShadows.needsUpdate=s,a.rectAreaLights.needsUpdate=s,a.hemisphereLights.needsUpdate=s),o&&!0===r.fog&&eh.refreshFogUniforms(B,o),eh.refreshMaterialUniforms(B,r,P,L,H),sh.upload(q,b.uniformsList,B,en)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(sh.upload(q,b.uniformsList,B,en),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&N.setValue(q,"center",i.center),N.setValue(q,"modelViewMatrix",i.modelViewMatrix),N.setValue(q,"normalMatrix",i.normalMatrix),N.setValue(q,"modelMatrix",i.matrixWorld),R}(e,t,n,r,i);$.setMaterial(r,s);let l=n.index,h=n.attributes.position;if(null===l){if(void 0===h||0===h.count)return}else if(0===l.count)return;let u=1;!0===r.wireframe&&(l=es.getWireframeAttribute(n),u=2),ex.setup(i,r,o,n,l);let c,d=eg;null!==l&&(c=ea.get(l),(d=ev).setIndex(c));let f=null!==l?l.count:h.count,m=n.drawRange.start*u,g=n.drawRange.count*u,v=null!==a?a.start*u:0,y=null!==a?a.count*u:1/0,_=Math.max(m,v),b=Math.max(0,Math.min(f,m+g,v+y)-1-_+1);if(0!==b){if(i.isMesh)!0===r.wireframe?($.setLineWidth(r.wireframeLinewidth*j()),d.setMode(1)):d.setMode(4);else if(i.isLine){let M=r.linewidth;void 0===M&&(M=1),$.setLineWidth(M*j()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(_,b,i.count);else if(n.isInstancedBufferGeometry){let E=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(_,b,E)}else d.render(_,b)}},this.compile=function(e,t){(p=ec.get(e)).init(),y.push(p),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(p.pushLight(e),e.castShadow&&p.pushShadow(e))}),p.setupLights(x.physicallyCorrectLights),e.traverse(function(t){let n=t.material;if(n){if(Array.isArray(n))for(let r=0;r<n.length;r++){let i=n[r];eO(i,e,t)}else eO(n,e,t)}}),y.pop(),p=null};let eA=null;function eR(){eD.stop()}function eP(){eD.start()}let eD=new iW;function eI(e,t,n,r){let i=e.opaque,a=e.transmissive,o=e.transparent;p.setupLightsView(n),a.length>0&&function(e,t,n){let r=K.isWebGL2;null===H&&(H=new nB(1,1,{generateMipmaps:!0,type:Z.has("EXT_color_buffer_half_float")?eL:ew,minFilter:eb,samples:r&&!0===s?4:0})),x.getDrawingBufferSize(k),r?H.setSize(k.x,k.y):H.setSize(nh(k.x),nh(k.y));let i=x.getRenderTarget();x.setRenderTarget(H),x.clear();let a=x.toneMapping;x.toneMapping=Q,eN(e,t,n),x.toneMapping=a,en.updateMultisampleRenderTarget(H),en.updateRenderTargetMipmap(H),x.setRenderTarget(i)}(i,t,n),r&&$.viewport(E.copy(r)),i.length>0&&eN(i,t,n),a.length>0&&eN(a,t,n),o.length>0&&eN(o,t,n),$.buffers.depth.setTest(!0),$.buffers.depth.setMask(!0),$.buffers.color.setMask(!0),$.setPolygonOffset(!1)}function eN(e,t,n){let r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){let s=e[i],o=s.object,l=s.geometry,h=null===r?s.material:r,u=s.group;o.layers.test(n.layers)&&eB(o,t,n,l,h,u)}}function eB(e,t,n,r,i,a){e.onBeforeRender(x,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(x,t,n,r,e,a),!0===i.transparent&&i.side===g?(i.side=m,i.needsUpdate=!0,x.renderBufferDirect(n,t,r,i,e,a),i.side=f,i.needsUpdate=!0,x.renderBufferDirect(n,t,r,i,e,a),i.side=g):x.renderBufferDirect(n,t,r,i,e,a),e.onAfterRender(x,t,n,r,i,a)}function eO(e,t,n){var r;!0!==t.isScene&&(t=W);let i=et.get(e),a=p.state.lights,s=p.state.shadowsArray,o=a.state.version,l=el.getParameters(e,a.state,s,t,n),h=el.getProgramCacheKey(l),u=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?ei:er).get(e.envMap||i.environment),void 0===u&&(e.addEventListener("dispose",eE),u=new Map,i.programs=u);let c=u.get(h);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===o)return eU(e,l),c}else l.uniforms=el.getUniforms(e),e.onBuild(n,l,x),e.onBeforeCompile(l,x),c=el.acquireProgram(l,h),u.set(h,c),i.uniforms=l.uniforms;let d=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=ed.uniform),eU(e,l),i.needsLights=(r=e,r.isMeshLambertMaterial||r.isMeshToonMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.isShadowMaterial||r.isShaderMaterial&&!0===r.lights),i.lightsStateVersion=o,i.needsLights&&(d.ambientLightColor.value=a.state.ambient,d.lightProbe.value=a.state.probe,d.directionalLights.value=a.state.directional,d.directionalLightShadows.value=a.state.directionalShadow,d.spotLights.value=a.state.spot,d.spotLightShadows.value=a.state.spotShadow,d.rectAreaLights.value=a.state.rectArea,d.ltc_1.value=a.state.rectAreaLTC1,d.ltc_2.value=a.state.rectAreaLTC2,d.pointLights.value=a.state.point,d.pointLightShadows.value=a.state.pointShadow,d.hemisphereLights.value=a.state.hemi,d.directionalShadowMap.value=a.state.directionalShadowMap,d.directionalShadowMatrix.value=a.state.directionalShadowMatrix,d.spotShadowMap.value=a.state.spotShadowMap,d.spotShadowMatrix.value=a.state.spotShadowMatrix,d.pointShadowMap.value=a.state.pointShadowMap,d.pointShadowMatrix.value=a.state.pointShadowMatrix);let f=c.getUniforms(),m=sh.seqWithValue(f.seq,d);return i.currentProgram=c,i.uniformsList=m,c}function eU(e,t){let n=et.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}eD.setAnimationLoop(function(e){eA&&eA(e)}),"undefined"!=typeof self&&eD.setContext(self),this.setAnimationLoop=function(e){eA=e,eM.setAnimationLoop(e),null===e?eD.stop():eD.start()},eM.addEventListener("sessionstart",eR),eM.addEventListener("sessionend",eP),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===_)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===eM.enabled&&!0===eM.isPresenting&&(!0===eM.cameraAutoUpdate&&eM.updateCamera(t),t=eM.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,w),(p=ec.get(e,y.length)).init(),y.push(p),G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),O.setFromProjectionMatrix(G),F=this.localClippingEnabled,U=ed.init(this.clippingPlanes,F,t),(d=eu.get(e,v.length)).init(),v.push(d),function e(t,n,r,i){if(!1===t.visible)return;let a=t.layers.test(n.layers);if(a){if(t.isGroup)r=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(n);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||O.intersectsSprite(t)){i&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let s=eo.update(t),o=t.material;o.visible&&d.push(t,s,o,r,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==ee.render.frame&&(t.skeleton.update(),t.skeleton.frame=ee.render.frame),!t.frustumCulled||O.intersectsObject(t))){i&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let l=eo.update(t),h=t.material;if(Array.isArray(h)){let u=l.groups;for(let c=0,f=u.length;c<f;c++){let m=u[c],g=h[m.materialIndex];g&&g.visible&&d.push(t,l,g,r,V.z,m)}}else h.visible&&d.push(t,l,h,r,V.z,null)}}let v=t.children;for(let y=0,x=v.length;y<x;y++)e(v[y],n,r,i)}(e,t,0,x.sortObjects),d.finish(),!0===x.sortObjects&&d.sort(D,I),!0===U&&ed.beginShadows();let n=p.state.shadowsArray;if(ep.render(n,e,t),!0===U&&ed.endShadows(),!0===this.info.autoReset&&this.info.reset(),ef.render(d,e),p.setupLights(x.physicallyCorrectLights),t.isArrayCamera){let r=t.cameras;for(let i=0,a=r.length;i<a;i++){let s=r[i];eI(d,e,s,s.viewport)}}else eI(d,e,t);null!==w&&(en.updateMultisampleRenderTarget(w),en.updateRenderTargetMipmap(w)),!0===e.isScene&&e.onAfterRender(x,e,t),ex.resetDefaultState(),S=-1,T=null,y.pop(),p=y.length>0?y[y.length-1]:null,v.pop(),d=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(e,t,n){et.get(e.texture).__webglTexture=t,et.get(e.depthTexture).__webglTexture=n;let r=et.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0!==Z.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let n=et.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){w=e,b=t,M=n;let r=!0;if(e){let i=et.get(e);void 0!==i.__useDefaultFramebuffer?($.bindFramebuffer(36160,null),r=!1):void 0===i.__webglFramebuffer?en.setupRenderTarget(e):i.__hasExternalTextures&&en.rebindTextures(e,et.get(e.texture).__webglTexture,et.get(e.depthTexture).__webglTexture)}let a=null,s=!1,o=!1;if(e){let l=e.texture;(l.isData3DTexture||l.isDataArrayTexture)&&(o=!0);let h=et.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=h[t],s=!0):a=K.isWebGL2&&e.samples>0&&!1===en.useMultisampledRTT(e)?et.get(e).__webglMultisampledFramebuffer:h,E.copy(e.viewport),A.copy(e.scissor),R=e.scissorTest}else E.copy(N).multiplyScalar(P).floor(),A.copy(B).multiplyScalar(P).floor(),R=z;let u=$.bindFramebuffer(36160,a);if(u&&K.drawBuffers&&r&&$.drawBuffers(e,a),$.viewport(E),$.scissor(A),$.setScissorTest(R),s){let c=et.get(e.texture);q.framebufferTexture2D(36160,36064,34069+t,c.__webglTexture,n)}else if(o){let d=et.get(e.texture);q.framebufferTextureLayer(36160,36064,d.__webglTexture,n||0,t||0)}S=-1},this.readRenderTargetPixels=function(e,t,n,r,i,a,s){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=et.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){$.bindFramebuffer(36160,o);try{let l=e.texture,h=l.format,u=l.type;if(h!==ez&&ey.convert(h)!==q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=u===eL&&(Z.has("EXT_color_buffer_half_float")||K.isWebGL2&&Z.has("EXT_color_buffer_float"));if(u!==ew&&ey.convert(u)!==q.getParameter(35738)&&!(u===eC&&(K.isWebGL2||Z.has("OES_texture_float")||Z.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&q.readPixels(t,n,r,i,ey.convert(h),ey.convert(u),a)}finally{let d=null!==w?et.get(w).__webglFramebuffer:null;$.bindFramebuffer(36160,d)}}},this.copyFramebufferToTexture=function(e,t,n=0){if(!0!==t.isFramebufferTexture){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}let r=Math.pow(2,-n),i=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);en.setTexture2D(t,0),q.copyTexSubImage2D(3553,n,0,0,e.x,e.y,i,a),$.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){let i=t.image.width,a=t.image.height,s=ey.convert(n.format),o=ey.convert(n.type);en.setTexture2D(n,0),q.pixelStorei(37440,n.flipY),q.pixelStorei(37441,n.premultiplyAlpha),q.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?q.texSubImage2D(3553,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?q.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):q.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&q.generateMipmap(3553),$.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,i=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=ey.convert(r.format),h=ey.convert(r.type),u;if(r.isData3DTexture)en.setTexture3D(r,0),u=32879;else if(r.isDataArrayTexture)en.setTexture2DArray(r,0),u=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}q.pixelStorei(37440,r.flipY),q.pixelStorei(37441,r.premultiplyAlpha),q.pixelStorei(3317,r.unpackAlignment);let c=q.getParameter(3314),d=q.getParameter(32878),p=q.getParameter(3316),f=q.getParameter(3315),m=q.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;q.pixelStorei(3314,g.width),q.pixelStorei(32878,g.height),q.pixelStorei(3316,e.min.x),q.pixelStorei(3315,e.min.y),q.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?q.texSubImage3D(u,i,t.x,t.y,t.z,a,s,o,l,h,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),q.compressedTexSubImage3D(u,i,t.x,t.y,t.z,a,s,o,l,g.data)):q.texSubImage3D(u,i,t.x,t.y,t.z,a,s,o,l,h,g),q.pixelStorei(3314,c),q.pixelStorei(32878,d),q.pixelStorei(3316,p),q.pixelStorei(3315,f),q.pixelStorei(32877,m),0===i&&r.generateMipmaps&&q.generateMipmap(u),$.unbindTexture()},this.initTexture=function(e){en.setTexture2D(e,0),$.unbindTexture()},this.resetState=function(){b=0,M=0,w=null,$.reset(),ex.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}s0.prototype.isWebGLRenderer=!0;class s1 extends s0{}s1.prototype.isWebGL1Renderer=!0;class s3{constructor(e,t=25e-5){this.name="",this.color=new nA(e),this.density=t}clone(){return new s3(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}s3.prototype.isFogExp2=!0;class s2{constructor(e,t=1,n=1e3){this.name="",this.color=new nA(e),this.near=t,this.far=n}clone(){return new s2(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}s2.prototype.isFog=!0;class s4 extends rN{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}s4.prototype.isScene=!0;class s5{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=tX,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=nt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=nt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=nt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}s5.prototype.isInterleavedBuffer=!0;let s6=new nk;class s7{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)s6.fromBufferAttribute(this,t),s6.applyMatrix4(e),this.setXYZ(t,s6.x,s6.y,s6.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)s6.fromBufferAttribute(this,t),s6.applyNormalMatrix(e),this.setXYZ(t,s6.x,s6.y,s6.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)s6.fromBufferAttribute(this,t),s6.transformDirection(e),this.setXYZ(t,s6.x,s6.y,s6.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new s7(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let r=n*this.data.stride+this.offset;for(let i=0;i<this.itemSize;i++)t.push(this.data.array[r+i])}return new rK(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let r=n*this.data.stride+this.offset;for(let i=0;i<this.itemSize;i++)t.push(this.data.array[r+i])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}s7.prototype.isInterleavedBufferAttribute=!0;class s8 extends rX{constructor(e){super(),this.type="SpriteMaterial",this.color=new nA(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}s8.prototype.isSpriteMaterial=!0;let s9,oe=new nk,ot=new nk,on=new nk,or=new nc,oi=new nc,oa=new rh,os=new nk,oo=new nk,ol=new nk,oh=new nc,ou=new nc,oc=new nc;class od extends rN{constructor(e){if(super(),this.type="Sprite",void 0===s9){s9=new is;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new s5(t,5);s9.setIndex([0,1,2,0,2,3]),s9.setAttribute("position",new s7(n,3,0,!1)),s9.setAttribute("uv",new s7(n,2,3,!1))}this.geometry=s9,this.material=void 0!==e?e:new s8,this.center=new nc(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ot.setFromMatrixScale(this.matrixWorld),oa.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),on.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ot.multiplyScalar(-on.z);let n=this.material.rotation,r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));let a=this.center;op(os.set(-.5,-.5,0),on,a,ot,r,i),op(oo.set(.5,-.5,0),on,a,ot,r,i),op(ol.set(.5,.5,0),on,a,ot,r,i),oh.set(0,0),ou.set(1,0),oc.set(1,1);let s=e.ray.intersectTriangle(os,oo,ol,!1,oe);if(null===s&&(op(oo.set(-.5,.5,0),on,a,ot,r,i),ou.set(0,1),null===(s=e.ray.intersectTriangle(os,ol,oo,!1,oe))))return;let o=e.ray.origin.distanceTo(oe);o<e.near||o>e.far||t.push({distance:o,point:oe.clone(),uv:rj.getUV(oe,os,oo,ol,oh,ou,oc,new nc),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function op(e,t,n,r,i,a){or.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(oi.x=a*or.x-i*or.y,oi.y=i*or.x+a*or.y):oi.copy(or),e.copy(t),e.x+=oi.x,e.y+=oi.y,e.applyMatrix4(oa)}od.prototype.isSprite=!0;let of=new nk,om=new nk;class og extends rN{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let n=0,r=t.length;n<r;n++){let i=t[n];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);let n=this.levels,r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){let n=this.levels;if(n.length>0){of.setFromMatrixPosition(this.matrixWorld);let r=e.ray.origin.distanceTo(of);this.getObjectForDistance(r).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){of.setFromMatrixPosition(e.matrixWorld),om.setFromMatrixPosition(this.matrixWorld);let n=of.distanceTo(om)/e.zoom;t[0].object.visible=!0;let r,i;for(r=1,i=t.length;r<i;r++)if(n>=t[r].distance)t[r-1].object.visible=!1,t[r].object.visible=!0;else break;for(this._currentLevel=r-1;r<i;r++)t[r].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let n=this.levels;for(let r=0,i=n.length;r<i;r++){let a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}let ov=new nk,oy=new nN,ox=new nN,o_=new nk,ob=new rh;class oM extends iT{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new rh,this.bindMatrixInverse=new rh}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new nN,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);let i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let n=this.skeleton,r=this.geometry;oy.fromBufferAttribute(r.attributes.skinIndex,e),ox.fromBufferAttribute(r.attributes.skinWeight,e),ov.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let i=0;i<4;i++){let a=ox.getComponent(i);if(0!==a){let s=oy.getComponent(i);ob.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),t.addScaledVector(o_.copy(ov).applyMatrix4(ob),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}oM.prototype.isSkinnedMesh=!0;class ow extends rN{constructor(){super(),this.type="Bone"}}ow.prototype.isBone=!0;class oS extends nI{constructor(e=null,t=1,n=1,r,i,a,s,o,l=ep,h=ep,u,c){super(null,a,s,o,l,h,r,i,u,c),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}oS.prototype.isDataTexture=!0;let oT=new rh,oE=new rh;class oA{constructor(e=[],t=[]){this.uuid=nt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new rh)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let n=new rh;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let r=0,i=this.bones.length;r<i;r++){let a=this.bones[r];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let i=0,a=e.length;i<a;i++){let s=e[i]?e[i].matrixWorld:oE;oT.multiplyMatrices(s,t[i]),oT.toArray(n,16*i)}null!==r&&(r.needsUpdate=!0)}clone(){return new oA(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=nl(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let n=new oS(t,e,e,ez,eC);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){let r=this.bones[t];if(r.name===e)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){let i=e.bones[n],a=t[i];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),a=new ow),this.bones.push(a),this.boneInverses.push(new rh().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,n=this.boneInverses;for(let r=0,i=t.length;r<i;r++){let a=t[r];e.bones.push(a.uuid);let s=n[r];e.boneInverses.push(s.toArray())}return e}}class oR extends rK{constructor(e,t,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}oR.prototype.isInstancedBufferAttribute=!0;let oC=new rh,oL=new rh,oP=[],oD=new iT;class oI extends iT{constructor(e,t,n){super(e,t),this.instanceMatrix=new oR(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let n=this.matrixWorld,r=this.count;if(oD.geometry=this.geometry,oD.material=this.material,void 0!==oD.material)for(let i=0;i<r;i++){this.getMatrixAt(i,oC),oL.multiplyMatrices(n,oC),oD.matrixWorld=oL,oD.raycast(e,oP);for(let a=0,s=oP.length;a<s;a++){let o=oP[a];o.instanceId=i,o.object=this,t.push(o)}oP.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new oR(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}oI.prototype.isInstancedMesh=!0;class oN extends rX{constructor(e){super(),this.type="LineBasicMaterial",this.color=new nA(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}oN.prototype.isLineBasicMaterial=!0;let oB=new nk,oz=new nk,oO=new rh,oU=new rl,oF=new re;class oH extends rN{constructor(e=new is,t=new oN){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,n=[0];for(let r=1,i=t.count;r<i;r++)oB.fromBufferAttribute(t,r-1),oz.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=oB.distanceTo(oz);e.setAttribute("lineDistance",new r6(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){let n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),oF.copy(n.boundingSphere),oF.applyMatrix4(r),oF.radius+=i,!1===e.ray.intersectsSphere(oF))return;oO.copy(r).invert(),oU.copy(e.ray).applyMatrix4(oO);let s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new nk,h=new nk,u=new nk,c=new nk,d=this.isLineSegments?2:1;if(n.isBufferGeometry){let p=n.index,f=n.attributes,m=f.position;if(null!==p){let g=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let y=g,x=v-1;y<x;y+=d){let _=p.getX(y),b=p.getX(y+1);l.fromBufferAttribute(m,_),h.fromBufferAttribute(m,b);let M=oU.distanceSqToSegment(l,h,c,u);if(M>o)continue;c.applyMatrix4(this.matrixWorld);let w=e.ray.origin.distanceTo(c);w<e.near||w>e.far||t.push({distance:w,point:u.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{let S=Math.max(0,a.start),T=Math.min(m.count,a.start+a.count);for(let E=S,A=T-1;E<A;E+=d){l.fromBufferAttribute(m,E),h.fromBufferAttribute(m,E+1);let R=oU.distanceSqToSegment(l,h,c,u);if(R>o)continue;c.applyMatrix4(this.matrixWorld);let C=e.ray.origin.distanceTo(c);C<e.near||C>e.far||t.push({distance:C,point:u.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=r.length;i<a;i++){let s=r[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=i}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}oH.prototype.isLine=!0;let oG=new nk,ok=new nk;class oV extends oH{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,n=[];for(let r=0,i=t.count;r<i;r+=2)oG.fromBufferAttribute(t,r),ok.fromBufferAttribute(t,r+1),n[r]=0===r?0:n[r-1],n[r+1]=n[r]+oG.distanceTo(ok);e.setAttribute("lineDistance",new r6(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}oV.prototype.isLineSegments=!0;class oW extends oH{constructor(e,t){super(e,t),this.type="LineLoop"}}oW.prototype.isLineLoop=!0;class oj extends rX{constructor(e){super(),this.type="PointsMaterial",this.color=new nA(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}oj.prototype.isPointsMaterial=!0;let oq=new rh,oX=new rl,oJ=new re,oY=new nk;class oZ extends rN{constructor(e=new is,t=new oj){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),oJ.copy(n.boundingSphere),oJ.applyMatrix4(r),oJ.radius+=i,!1===e.ray.intersectsSphere(oJ))return;oq.copy(r).invert(),oX.copy(e.ray).applyMatrix4(oq);let s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){let l=n.index,h=n.attributes,u=h.position;if(null!==l){let c=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let p=c;p<d;p++){let f=l.getX(p);oY.fromBufferAttribute(u,f),oK(oY,f,o,r,e,t,this)}}else{let m=Math.max(0,a.start),g=Math.min(u.count,a.start+a.count);for(let v=m;v<g;v++)oY.fromBufferAttribute(u,v),oK(oY,v,o,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=r.length;i<a;i++){let s=r[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=i}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function oK(e,t,n,r,i,a,s){let o=oX.distanceSqToPoint(e);if(o<n){let l=new nk;oX.closestPointToPoint(e,l),l.applyMatrix4(r);let h=i.ray.origin.distanceTo(l);if(h<i.near||h>i.far)return;a.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}oZ.prototype.isPoints=!0;class oQ extends nI{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.minFilter=void 0!==a?a:ey,this.magFilter=void 0!==i?i:ey,this.generateMipmaps=!1;let h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}oQ.prototype.isVideoTexture=!0;class o$ extends nI{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=ep,this.minFilter=ep,this.generateMipmaps=!1,this.needsUpdate=!0}}o$.prototype.isFramebufferTexture=!0;class o0 extends nI{constructor(e,t,n,r,i,a,s,o,l,h,u,c){super(null,a,s,o,l,h,r,i,u,c),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}o0.prototype.isCompressedTexture=!0;class o1 extends nI{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}}o1.prototype.isCanvasTexture=!0;class o3{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],n,r=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)t.push(i+=(n=this.getPoint(a/e)).distanceTo(r)),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let n=this.getLengths(),r=0,i=n.length,a;a=t||e*n[i-1];let s=0,o=i-1,l;for(;s<=o;)if((l=n[r=Math.floor(s+(o-s)/2)]-a)<0)s=r+1;else if(l>0)o=r-1;else{o=r;break}if(n[r=o]===a)return r/(i-1);let h=n[r],u=n[r+1],c=(r+(a-h)/(u-h))/(i-1);return c}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),r>1&&(r=1);let i=this.getPoint(n),a=this.getPoint(r),s=t||(i.isVector2?new nc:new nk);return s.copy(a).sub(i).normalize(),s}getTangentAt(e,t){let n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){let n=new nk,r=[],i=[],a=[],s=new nk,o=new rh;for(let l=0;l<=e;l++){let h=l/e;r[l]=this.getTangentAt(h,new nk)}i[0]=new nk,a[0]=new nk;let u=Number.MAX_VALUE,c=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);c<=u&&(u=c,n.set(1,0,0)),d<=u&&(u=d,n.set(0,1,0)),p<=u&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let f=1;f<=e;f++){if(i[f]=i[f-1].clone(),a[f]=a[f-1].clone(),s.crossVectors(r[f-1],r[f]),s.length()>Number.EPSILON){s.normalize();let m=Math.acos(nn(r[f-1].dot(r[f]),-1,1));i[f].applyMatrix4(o.makeRotationAxis(s,m))}a[f].crossVectors(r[f],i[f])}if(!0===t){let g=Math.acos(nn(i[0].dot(i[e]),-1,1));g/=e,r[0].dot(s.crossVectors(i[0],i[e]))>0&&(g=-g);for(let v=1;v<=e;v++)i[v].applyMatrix4(o.makeRotationAxis(r[v],g*v)),a[v].crossVectors(r[v],i[v])}return{tangents:r,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class o2 extends o3{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let n=t||new nc,r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);let s=this.aStartAngle+e*i,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*h-d*u+this.aX,l=c*u+d*h+this.aY}return n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}o2.prototype.isEllipseCurve=!0;class o4 extends o2{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.type="ArcCurve"}}function o5(){let e=0,t=0,n=0,r=0;function i(i,a,s,o){e=i,t=s,n=-3*i+3*a-2*s-o,r=2*i-2*a+s+o}return{initCatmullRom:function(e,t,n,r,a){i(t,n,a*(n-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,a,s,o){let l=(t-e)/a-(n-e)/(a+s)+(n-t)/s,h=(n-t)/s-(r-t)/(s+o)+(r-n)/o;i(t,n,l*=s,h*=s)},calc:function(i){let a=i*i;return e+t*i+n*a+r*(a*i)}}}o4.prototype.isArcCurve=!0;let o6=new nk,o7=new o5,o8=new o5,o9=new o5;class le extends o3{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new nk){let n=this.points,r=n.length,i=(r-(this.closed?0:1))*e,a=Math.floor(i),s=i-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:0===s&&a===r-1&&(a=r-2,s=1);let o,l;this.closed||a>0?o=n[(a-1)%r]:(o6.subVectors(n[0],n[1]).add(n[0]),o=o6);let h=n[a%r],u=n[(a+1)%r];if(this.closed||a+2<r?l=n[(a+2)%r]:(o6.subVectors(n[r-1],n[r-2]).add(n[r-1]),l=o6),"centripetal"===this.curveType||"chordal"===this.curveType){let c="chordal"===this.curveType?.5:.25,d=Math.pow(o.distanceToSquared(h),c),p=Math.pow(h.distanceToSquared(u),c),f=Math.pow(u.distanceToSquared(l),c);p<1e-4&&(p=1),d<1e-4&&(d=p),f<1e-4&&(f=p),o7.initNonuniformCatmullRom(o.x,h.x,u.x,l.x,d,p,f),o8.initNonuniformCatmullRom(o.y,h.y,u.y,l.y,d,p,f),o9.initNonuniformCatmullRom(o.z,h.z,u.z,l.z,d,p,f)}else"catmullrom"===this.curveType&&(o7.initCatmullRom(o.x,h.x,u.x,l.x,this.tension),o8.initCatmullRom(o.y,h.y,u.y,l.y,this.tension),o9.initCatmullRom(o.z,h.z,u.z,l.z,this.tension));return t.set(o7.calc(s),o8.calc(s),o9.calc(s)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let r=e.points[t];this.points.push(new nk().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function lt(e,t,n,r,i){let a=(r-t)*.5,s=(i-n)*.5,o=e*e;return(2*n-2*r+a+s)*(e*o)+(-3*n+3*r-2*a-s)*o+a*e+n}function ln(e,t,n,r){var i,a,s,o;return function(e,t){let n=1-e;return n*n*t}(e,t)+2*(1-e)*e*n+e*e*r}function lr(e,t,n,r,i){var a,s,o,l;return function(e,t){let n=1-e;return n*n*n*t}(e,t)+function(e,t){let n=1-e;return 3*n*n*e*t}(e,n)+3*(1-e)*e*e*r+e*e*e*i}le.prototype.isCatmullRomCurve3=!0;class li extends o3{constructor(e=new nc,t=new nc,n=new nc,r=new nc){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new nc){let n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(lr(e,n.x,r.x,i.x,a.x),lr(e,n.y,r.y,i.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}li.prototype.isCubicBezierCurve=!0;class la extends o3{constructor(e=new nk,t=new nk,n=new nk,r=new nk){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new nk){let n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(lr(e,n.x,r.x,i.x,a.x),lr(e,n.y,r.y,i.y,a.y),lr(e,n.z,r.z,i.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}la.prototype.isCubicBezierCurve3=!0;class ls extends o3{constructor(e=new nc,t=new nc){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new nc){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let n=t||new nc;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ls.prototype.isLineCurve=!0;class lo extends o3{constructor(e=new nk,t=new nk){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new nk){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ll extends o3{constructor(e=new nc,t=new nc,n=new nc){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new nc){let n=this.v0,r=this.v1,i=this.v2;return t.set(ln(e,n.x,r.x,i.x),ln(e,n.y,r.y,i.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ll.prototype.isQuadraticBezierCurve=!0;class lh extends o3{constructor(e=new nk,t=new nk,n=new nk){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new nk){let n=this.v0,r=this.v1,i=this.v2;return t.set(ln(e,n.x,r.x,i.x),ln(e,n.y,r.y,i.y),ln(e,n.z,r.z,i.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lh.prototype.isQuadraticBezierCurve3=!0;class lu extends o3{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new nc){let n=this.points,r=(n.length-1)*e,i=Math.floor(r),a=r-i,s=n[0===i?i:i-1],o=n[i],l=n[i>n.length-2?n.length-1:i+1],h=n[i>n.length-3?n.length-1:i+2];return t.set(lt(a,s.x,o.x,l.x,h.x),lt(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let r=e.points[t];this.points.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let r=e.points[t];this.points.push(new nc().fromArray(r))}return this}}lu.prototype.isSplineCurve=!0;var lc=Object.freeze({__proto__:null,ArcCurve:o4,CatmullRomCurve3:le,CubicBezierCurve:li,CubicBezierCurve3:la,EllipseCurve:o2,LineCurve:ls,LineCurve3:lo,QuadraticBezierCurve:ll,QuadraticBezierCurve3:lh,SplineCurve:lu});class ld extends o3{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ls(t,e))}getPoint(e,t){let n=e*this.getLength(),r=this.getCurveLengths(),i=0;for(;i<r.length;){if(r[i]>=n){let a=r[i]-n,s=this.curves[i],o=s.getLength(),l=0===o?0:1-a/o;return s.getPointAt(l,t)}i++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let n=0,r=this.curves.length;n<r;n++)e.push(t+=this.curves[n].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],n;for(let r=0,i=this.curves;r<i.length;r++){let a=i[r],s=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let l=0;l<o.length;l++){let h=o[l];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){let r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let r=e.curves[t];this.curves.push(new lc[r.type]().fromJSON(r))}return this}}class lp extends ld{constructor(e){super(),this.type="Path",this.currentPoint=new nc,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let n=new ls(this.currentPoint.clone(),new nc(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){let i=new ll(this.currentPoint.clone(),new nc(e,t),new nc(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){let s=new li(this.currentPoint.clone(),new nc(e,t),new nc(n,r),new nc(i,a));return this.curves.push(s),this.currentPoint.set(i,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),n=new lu(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,r,i,a,s,o),this}absellipse(e,t,n,r,i,a,s,o){let l=new o2(e,t,n,r,i,a,s,o);if(this.curves.length>0){let h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);let u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class lf extends is{constructor(e=[new nc(0,.5),new nc(.5,0),new nc(0,-.5)],t=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=nn(r,0,2*Math.PI);let i=[],a=[],s=[],o=[],l=[],h=1/t,u=new nk,c=new nc,d=new nk,p=new nk,f=new nk,m=0,g=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:m=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let y=0;y<=t;y++){let x=n+y*h*r,_=Math.sin(x),b=Math.cos(x);for(let M=0;M<=e.length-1;M++){u.x=e[M].x*_,u.y=e[M].y,u.z=e[M].x*b,a.push(u.x,u.y,u.z),c.x=y/t,c.y=M/(e.length-1),s.push(c.x,c.y);let w=o[3*M+0]*_,S=o[3*M+1],T=o[3*M+0]*b;l.push(w,S,T)}}for(let E=0;E<t;E++)for(let A=0;A<e.length-1;A++){let R=A+E*e.length,C=R+e.length,L=R+e.length+1,P=R+1;i.push(R,C,P),i.push(L,P,C)}this.setIndex(i),this.setAttribute("position",new r6(a,3)),this.setAttribute("uv",new r6(s,2)),this.setAttribute("normal",new r6(l,3))}static fromJSON(e){return new lf(e.points,e.segments,e.phiStart,e.phiLength)}}class lm extends lf{constructor(e=1,t=1,n=4,r=8){let i=new lp;i.absarc(0,-t/2,e,1.5*Math.PI,0),i.absarc(0,t/2,e,0,.5*Math.PI),super(i.getPoints(n),r),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:r}}static fromJSON(e){return new lm(e.radius,e.length,e.capSegments,e.radialSegments)}}class lg extends is{constructor(e=1,t=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);let i=[],a=[],s=[],o=[],l=new nk,h=new nc;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let u=0,c=3;u<=t;u++,c+=3){let d=n+u/t*r;l.x=e*Math.cos(d),l.y=e*Math.sin(d),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[c]/e+1)/2,h.y=(a[c+1]/e+1)/2,o.push(h.x,h.y)}for(let p=1;p<=t;p++)i.push(p,p+1,0);this.setIndex(i),this.setAttribute("position",new r6(a,3)),this.setAttribute("normal",new r6(s,3)),this.setAttribute("uv",new r6(o,2))}static fromJSON(e){return new lg(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class lv extends is{constructor(e=1,t=1,n=1,r=8,i=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:s,thetaLength:o};let l=this;r=Math.floor(r),i=Math.floor(i);let h=[],u=[],c=[],d=[],p=0,f=[],m=n/2,g=0;function v(n){let i=p,a=new nc,f=new nk,v=0,y=!0===n?e:t,x=!0===n?1:-1;for(let _=1;_<=r;_++)u.push(0,m*x,0),c.push(0,x,0),d.push(.5,.5),p++;let b=p;for(let M=0;M<=r;M++){let w=M/r,S=w*o+s,T=Math.cos(S),E=Math.sin(S);f.x=y*E,f.y=m*x,f.z=y*T,u.push(f.x,f.y,f.z),c.push(0,x,0),a.x=.5*T+.5,a.y=.5*E*x+.5,d.push(a.x,a.y),p++}for(let A=0;A<r;A++){let R=i+A,C=b+A;!0===n?h.push(C,C+1,R):h.push(C+1,C,R),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}(function(){let a=new nk,v=new nk,y=0,x=(t-e)/n;for(let _=0;_<=i;_++){let b=[],M=_/i,w=M*(t-e)+e;for(let S=0;S<=r;S++){let T=S/r,E=T*o+s,A=Math.sin(E),R=Math.cos(E);v.x=w*A,v.y=-M*n+m,v.z=w*R,u.push(v.x,v.y,v.z),a.set(A,x,R).normalize(),c.push(a.x,a.y,a.z),d.push(T,1-M),b.push(p++)}f.push(b)}for(let C=0;C<r;C++)for(let L=0;L<i;L++){let P=f[L][C],D=f[L+1][C],I=f[L+1][C+1],N=f[L][C+1];h.push(P,D,N),h.push(D,I,N),y+=6}l.addGroup(g,y,0),g+=y})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new r6(u,3)),this.setAttribute("normal",new r6(c,3)),this.setAttribute("uv",new r6(d,2))}static fromJSON(e){return new lv(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ly extends lv{constructor(e=1,t=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(e){return new ly(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lx extends is{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};let i=[],a=[];function s(e,t,n,r){let i=r+1,a=[];for(let s=0;s<=i;s++){a[s]=[];let l=e.clone().lerp(n,s/i),h=t.clone().lerp(n,s/i),u=i-s;for(let c=0;c<=u;c++)0===c&&s===i?a[s][c]=l:a[s][c]=l.clone().lerp(h,c/u)}for(let d=0;d<i;d++)for(let p=0;p<2*(i-d)-1;p++){let f=Math.floor(p/2);p%2==0?(o(a[d][f+1]),o(a[d+1][f]),o(a[d][f])):(o(a[d][f+1]),o(a[d+1][f+1]),o(a[d+1][f]))}}function o(e){i.push(e.x,e.y,e.z)}function l(t,n){let r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function h(e,t,n,r){r<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=r/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function(e){let n=new nk,r=new nk,i=new nk;for(let a=0;a<t.length;a+=3)l(t[a+0],n),l(t[a+1],r),l(t[a+2],i),s(n,r,i,e)})(r),function(e){let t=new nk;for(let n=0;n<i.length;n+=3)t.x=i[n+0],t.y=i[n+1],t.z=i[n+2],t.normalize().multiplyScalar(e),i[n+0]=t.x,i[n+1]=t.y,i[n+2]=t.z}(n),function(){let e=new nk;for(let t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];let n=u(e)/2/Math.PI+.5,r=c(e)/Math.PI+.5;a.push(n,1-r)}(function(){let e=new nk,t=new nk,n=new nk,r=new nk,s=new nc,o=new nc,l=new nc;for(let c=0,d=0;c<i.length;c+=9,d+=6){e.set(i[c+0],i[c+1],i[c+2]),t.set(i[c+3],i[c+4],i[c+5]),n.set(i[c+6],i[c+7],i[c+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),l.set(a[d+4],a[d+5]),r.copy(e).add(t).add(n).divideScalar(3);let p=u(r);h(s,d+0,e,p),h(o,d+2,t,p),h(l,d+4,n,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],n=a[e+2],r=a[e+4],i=Math.max(t,n,r),s=Math.min(t,n,r);i>.9&&s<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),r<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new r6(i,3)),this.setAttribute("normal",new r6(i.slice(),3)),this.setAttribute("uv",new r6(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new lx(e.vertices,e.indices,e.radius,e.details)}}class l_ extends lx{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l_(e.radius,e.detail)}}let lb=new nk,lM=new nk,lw=new nk,lS=new rj;class lT extends is{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let n=Math.cos(t9*t),r=e.getIndex(),i=e.getAttribute("position"),a=r?r.count:i.count,s=[0,0,0],o=["a","b","c"],l=[,,,],h={},u=[];for(let c=0;c<a;c+=3){r?(s[0]=r.getX(c),s[1]=r.getX(c+1),s[2]=r.getX(c+2)):(s[0]=c,s[1]=c+1,s[2]=c+2);let{a:d,b:p,c:f}=lS;if(d.fromBufferAttribute(i,s[0]),p.fromBufferAttribute(i,s[1]),f.fromBufferAttribute(i,s[2]),lS.getNormal(lw),l[0]=`${Math.round(1e4*d.x)},${Math.round(1e4*d.y)},${Math.round(1e4*d.z)}`,l[1]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,l[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let m=0;m<3;m++){let g=(m+1)%3,v=l[m],y=l[g],x=lS[o[m]],_=lS[o[g]],b=`${v}_${y}`,M=`${y}_${v}`;M in h&&h[M]?(lw.dot(h[M].normal)<=n&&(u.push(x.x,x.y,x.z),u.push(_.x,_.y,_.z)),h[M]=null):b in h||(h[b]={index0:s[m],index1:s[g],normal:lw.clone()})}}for(let w in h)if(h[w]){let{index0:S,index1:T}=h[w];lb.fromBufferAttribute(i,S),lM.fromBufferAttribute(i,T),u.push(lb.x,lb.y,lb.z),u.push(lM.x,lM.y,lM.z)}this.setAttribute("position",new r6(u,3))}}}class lE extends lp{constructor(e){super(e),this.uuid=nt(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){let r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let r=e.holes[t];this.holes.push(new lp().fromJSON(r))}return this}}let lA={triangulate:function(e,t,n=2){let r=t&&t.length,i=r?t[0]*n:e.length,a=lR(e,0,i,n,!0),s=[];if(!a||a.next===a.prev)return s;let o,l,h,u,c,d,p;if(r&&(a=function(e,t,n,r){let i=[],a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*r,l=a<s-1?t[a+1]*r:e.length,(h=lR(e,o,l,r,!1))===h.next&&(h.steiner=!0),i.push(lF(h));for(i.sort(lB),a=0;a<i.length;a++)lz(i[a],n),n=lC(n,n.next);return n}(e,t,a,n)),e.length>80*n){o=h=e[0],l=u=e[1];for(let f=n;f<i;f+=n)c=e[f],d=e[f+1],c<o&&(o=c),d<l&&(l=d),c>h&&(h=c),d>u&&(u=d);p=0!==(p=Math.max(h-o,u-l))?1/p:0}return lL(a,s,n,o,l,p),s}};function lR(e,t,n,r,i){let a,s;if(i===function(e,t,n,r){let i=0;for(let a=t,s=n-r;a<n;a+=r)i+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return i}(e,t,n,r)>0)for(a=t;a<n;a+=r)s=lY(a,e[a],e[a+1],s);else for(a=n-r;a>=t;a-=r)s=lY(a,e[a],e[a+1],s);return s&&lV(s,s.next)&&(lZ(s),s=s.next),s}function lC(e,t){if(!e)return e;t||(t=e);let n=e,r;do if(r=!1,!n.steiner&&(lV(n,n.next)||0===lk(n.prev,n,n.next))){if(lZ(n),(n=t=n.prev)===n.next)break;r=!0}else n=n.next;while(r||n!==t);return t}function lL(e,t,n,r,i,a,s){if(!e)return;!s&&a&&function(e,t,n,r){let i=e;do null===i.z&&(i.z=lU(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,n,r,i,a,s,o,l,h=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,r=n,o=0,t=0;t<h&&(o++,r=r.nextZ);t++);for(l=h;o>0||l>0&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,h*=2}while(s>1)}(i)}(e,r,i,a);let o=e,l,h;for(;e.prev!==e.next;){if(l=e.prev,h=e.next,a?lD(e,r,i,a):lP(e)){t.push(l.i/n),t.push(e.i/n),t.push(h.i/n),lZ(e),e=h.next,o=h.next;continue}if((e=h)===o){s?1===s?lL(e=lI(lC(e),t,n),t,n,r,i,a,2):2===s&&lN(e,t,n,r,i,a):lL(lC(e),t,n,r,i,a,1);break}}}function lP(e){let t=e.prev,n=e.next;if(lk(t,e,n)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(lH(t.x,t.y,e.x,e.y,n.x,n.y,r.x,r.y)&&lk(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function lD(e,t,n,r){let i=e.prev,a=e.next;if(lk(i,e,a)>=0)return!1;let s=i.x<e.x?i.x<a.x?i.x:a.x:e.x<a.x?e.x:a.x,o=i.y<e.y?i.y<a.y?i.y:a.y:e.y<a.y?e.y:a.y,l=i.x>e.x?i.x>a.x?i.x:a.x:e.x>a.x?e.x:a.x,h=i.y>e.y?i.y>a.y?i.y:a.y:e.y>a.y?e.y:a.y,u=lU(s,o,t,n,r),c=lU(l,h,t,n,r),d=e.prevZ,p=e.nextZ;for(;d&&d.z>=u&&p&&p.z<=c;){if(d!==e.prev&&d!==e.next&&lH(i.x,i.y,e.x,e.y,a.x,a.y,d.x,d.y)&&lk(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&lH(i.x,i.y,e.x,e.y,a.x,a.y,p.x,p.y)&&lk(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&lH(i.x,i.y,e.x,e.y,a.x,a.y,d.x,d.y)&&lk(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=c;){if(p!==e.prev&&p!==e.next&&lH(i.x,i.y,e.x,e.y,a.x,a.y,p.x,p.y)&&lk(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function lI(e,t,n){let r=e;do{let i=r.prev,a=r.next.next;!lV(i,a)&&lW(i,r,r.next,a)&&lX(i,a)&&lX(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),lZ(r),lZ(r.next),r=e=a),r=r.next}while(r!==e);return lC(r)}function lN(e,t,n,r,i,a){let s=e;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&lG(s,o)){let l=lJ(s,o);s=lC(s,s.next),l=lC(l,l.next),lL(s,t,n,r,i,a),lL(l,t,n,r,i,a);return}o=o.next}s=s.next}while(s!==e)}function lB(e,t){return e.x-t.x}function lz(e,t){if(t=function(e,t){let n=t,r=e.x,i=e.y,a=-1/0,s;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){let o=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=r&&o>a){if(a=o,o===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!s)return null;if(r===a)return s;let l=s,h=s.x,u=s.y,c=1/0,d;n=s;do r>=n.x&&n.x>=h&&r!==n.x&&lH(i<u?r:a,i,h,u,i<u?a:r,i,n.x,n.y)&&(d=Math.abs(i-n.y)/(r-n.x),lX(n,e)&&(d<c||d===c&&(n.x>s.x||n.x===s.x&&lO(s,n)))&&(s=n,c=d)),n=n.next;while(n!==l);return s}(e,t)){let n=lJ(t,e);lC(t,t.next),lC(n,n.next)}}function lO(e,t){return 0>lk(e.prev,e,t.prev)&&0>lk(t.next,e,e.next)}function lU(e,t,n,r,i){return(e=((e=((e=((e=((e=32767*(e-n)*i)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-r)*i)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function lF(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function lH(e,t,n,r,i,a,s,o){return(i-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(r-o)-(n-s)*(t-o)>=0&&(n-s)*(a-o)-(i-s)*(r-o)>=0}function lG(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&lW(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(lX(e,t)&&lX(t,e)&&function(e,t){let n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==e);return r}(e,t)&&(lk(e.prev,e,t.prev)||lk(e,t.prev,t))||lV(e,t)&&lk(e.prev,e,e.next)>0&&lk(t.prev,t,t.next)>0)}function lk(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function lV(e,t){return e.x===t.x&&e.y===t.y}function lW(e,t,n,r){let i=lq(lk(e,t,n)),a=lq(lk(e,t,r)),s=lq(lk(n,r,e)),o=lq(lk(n,r,t));return!!(i!==a&&s!==o||0===i&&lj(e,n,t)||0===a&&lj(e,r,t)||0===s&&lj(n,e,r)||0===o&&lj(n,t,r))}function lj(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function lq(e){return e>0?1:e<0?-1:0}function lX(e,t){return 0>lk(e.prev,e,e.next)?lk(e,t,e.next)>=0&&lk(e,e.prev,t)>=0:0>lk(e,t,e.prev)||0>lk(e,e.next,t)}function lJ(e,t){let n=new lK(e.i,e.x,e.y),r=new lK(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function lY(e,t,n,r){let i=new lK(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function lZ(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function lK(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lQ{static area(e){let t=e.length,n=0;for(let r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return .5*n}static isClockWise(e){return 0>lQ.area(e)}static triangulateShape(e,t){let n=[],r=[],i=[];l$(e),l0(n,e);let a=e.length;t.forEach(l$);for(let s=0;s<t.length;s++)r.push(a),a+=t[s].length,l0(n,t[s]);let o=lA.triangulate(n,r);for(let l=0;l<o.length;l+=3)i.push(o.slice(l,l+3));return i}}function l$(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function l0(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class l1 extends is{constructor(e=new lE([new nc(.5,.5),new nc(-.5,.5),new nc(-.5,-.5),new nc(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let n=this,r=[],i=[];for(let a=0,s=e.length;a<s;a++){let o=e[a];l(o)}function l(e){let a=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,h=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:u-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:l3;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,v=!1,y,x,_,b;f&&(g=f.getSpacedPoints(o),v=!0,h=!1,y=f.computeFrenetFrames(o,!1),x=new nk,_=new nk,b=new nk),h||(p=0,u=0,c=0,d=0);let M=e.extractPoints(s),w=M.shape,S=M.holes,T=!lQ.isClockWise(w);if(T){w=w.reverse();for(let E=0,A=S.length;E<A;E++){let R=S[E];lQ.isClockWise(R)&&(S[E]=R.reverse())}}let C=lQ.triangulateShape(w,S),L=w;for(let P=0,D=S.length;P<D;P++){let I=S[P];w=w.concat(I)}function N(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}let B=w.length,z=C.length;function O(e,t,n){let r,i,a,s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,h=n.y-e.y,u=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-o/c,f=t.y+s/c,m=n.x-h/d,g=n.y+l/d,v=((m-p)*h-(g-f)*l)/(s*h-o*l);r=p+s*v-e.x,i=f+o*v-e.y;let y=r*r+i*i;if(y<=2)return new nc(r,i);a=Math.sqrt(y/2)}else{let x=!1;s>Number.EPSILON?l>Number.EPSILON&&(x=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(x=!0):Math.sign(o)===Math.sign(h)&&(x=!0),x?(r=-o,i=s,a=Math.sqrt(u)):(r=s,i=o,a=Math.sqrt(u/2))}return new nc(r/a,i/a)}let U=[];for(let F=0,H=L.length,G=H-1,k=F+1;F<H;F++,G++,k++)G===H&&(G=0),k===H&&(k=0),U[F]=O(L[F],L[G],L[k]);let V=[],W,j=U.concat();for(let q=0,X=S.length;q<X;q++){let J=S[q];W=[];for(let Y=0,Z=J.length,K=Z-1,Q=Y+1;Y<Z;Y++,K++,Q++)K===Z&&(K=0),Q===Z&&(Q=0),W[Y]=O(J[Y],J[K],J[Q]);V.push(W),j=j.concat(W)}for(let $=0;$<p;$++){let ee=$/p,et=u*Math.cos(ee*Math.PI/2),en=c*Math.sin(ee*Math.PI/2)+d;for(let er=0,ei=L.length;er<ei;er++){let ea=N(L[er],U[er],en);eD(ea.x,ea.y,-et)}for(let es=0,eo=S.length;es<eo;es++){let el=S[es];W=V[es];for(let eh=0,eu=el.length;eh<eu;eh++){let ec=N(el[eh],W[eh],en);eD(ec.x,ec.y,-et)}}}let ed=c+d;for(let ep=0;ep<B;ep++){let ef=h?N(w[ep],j[ep],ed):w[ep];v?(_.copy(y.normals[0]).multiplyScalar(ef.x),x.copy(y.binormals[0]).multiplyScalar(ef.y),b.copy(g[0]).add(_).add(x),eD(b.x,b.y,b.z)):eD(ef.x,ef.y,0)}for(let em=1;em<=o;em++)for(let eg=0;eg<B;eg++){let ev=h?N(w[eg],j[eg],ed):w[eg];v?(_.copy(y.normals[em]).multiplyScalar(ev.x),x.copy(y.binormals[em]).multiplyScalar(ev.y),b.copy(g[em]).add(_).add(x),eD(b.x,b.y,b.z)):eD(ev.x,ev.y,l/o*em)}for(let ey=p-1;ey>=0;ey--){let ex=ey/p,e_=u*Math.cos(ex*Math.PI/2),eb=c*Math.sin(ex*Math.PI/2)+d;for(let eM=0,ew=L.length;eM<ew;eM++){let eS=N(L[eM],U[eM],eb);eD(eS.x,eS.y,l+e_)}for(let eT=0,eE=S.length;eT<eE;eT++){let eA=S[eT];W=V[eT];for(let eR=0,eC=eA.length;eR<eC;eR++){let eL=N(eA[eR],W[eR],eb);v?eD(eL.x,eL.y+g[o-1].y,g[o-1].x+e_):eD(eL.x,eL.y,l+e_)}}}function eP(e,t){let n=e.length;for(;--n>=0;){let r=n,i=n-1;i<0&&(i=e.length-1);for(let a=0,s=o+2*p;a<s;a++){let l=B*a,h=B*(a+1),u=t+r+l,c=t+i+l,d=t+i+h,f=t+r+h;eN(u,c,d,f)}}}function eD(e,t,n){a.push(e),a.push(t),a.push(n)}function eI(e,t,i){eB(e),eB(t),eB(i);let a=r.length/3,s=m.generateTopUV(n,r,a-3,a-2,a-1);ez(s[0]),ez(s[1]),ez(s[2])}function eN(e,t,i,a){eB(e),eB(t),eB(a),eB(t),eB(i),eB(a);let s=r.length/3,o=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);ez(o[0]),ez(o[1]),ez(o[3]),ez(o[1]),ez(o[2]),ez(o[3])}function eB(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function ez(e){i.push(e.x),i.push(e.y)}(function(){let e=r.length/3;if(h){let t=0,i=B*t;for(let a=0;a<z;a++){let s=C[a];eI(s[2]+i,s[1]+i,s[0]+i)}i=B*(t=o+2*p);for(let l=0;l<z;l++){let u=C[l];eI(u[0]+i,u[1]+i,u[2]+i)}}else{for(let c=0;c<z;c++){let d=C[c];eI(d[2],d[1],d[0])}for(let f=0;f<z;f++){let m=C[f];eI(m[0]+B*o,m[1]+B*o,m[2]+B*o)}}n.addGroup(e,r.length/3-e,0)})(),function(){let e=r.length/3,t=0;eP(L,t),t+=L.length;for(let i=0,a=S.length;i<a;i++){let s=S[i];eP(s,t),t+=s.length}n.addGroup(e,r.length/3-e,1)}()}this.setAttribute("position",new r6(r,3)),this.setAttribute("uv",new r6(i,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let r=0,i=e.length;r<i;r++){let a=e[r];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(t,n,e)}static fromJSON(e,t){let n=[];for(let r=0,i=e.shapes.length;r<i;r++){let a=t[e.shapes[r]];n.push(a)}let s=e.options.extrudePath;return void 0!==s&&(e.options.extrudePath=new lc[s.type]().fromJSON(s)),new l1(n,e.options)}}let l3={generateTopUV:function(e,t,n,r,i){let a=t[3*n],s=t[3*n+1],o=t[3*r],l=t[3*r+1],h=t[3*i],u=t[3*i+1];return[new nc(a,s),new nc(o,l),new nc(h,u)]},generateSideWallUV:function(e,t,n,r,i,a){let s=t[3*n],o=t[3*n+1],l=t[3*n+2],h=t[3*r],u=t[3*r+1],c=t[3*r+2],d=t[3*i],p=t[3*i+1],f=t[3*i+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(o-u)<Math.abs(s-h)?[new nc(s,1-l),new nc(h,1-c),new nc(d,1-f),new nc(m,1-v)]:[new nc(o,1-l),new nc(u,1-c),new nc(p,1-f),new nc(g,1-v)]}};class l2 extends lx{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l2(e.radius,e.detail)}}class l4 extends lx{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l4(e.radius,e.detail)}}class l5 extends is{constructor(e=.5,t=1,n=8,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n),r=Math.max(1,r);let s=[],o=[],l=[],h=[],u=e,c=(t-e)/r,d=new nk,p=new nc;for(let f=0;f<=r;f++){for(let m=0;m<=n;m++){let g=i+m/n*a;d.x=u*Math.cos(g),d.y=u*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let v=0;v<r;v++){let y=v*(n+1);for(let x=0;x<n;x++){let _=x+y,b=_+n+1,M=_+n+2,w=_+1;s.push(_,b,w),s.push(b,M,w)}}this.setIndex(s),this.setAttribute("position",new r6(o,3)),this.setAttribute("normal",new r6(l,3)),this.setAttribute("uv",new r6(h,2))}static fromJSON(e){return new l5(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class l6 extends is{constructor(e=new lE([new nc(0,.5),new nc(-.5,-.5),new nc(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let n=[],r=[],i=[],a=[],s=0,o=0;if(!1===Array.isArray(e))h(e);else for(let l=0;l<e.length;l++)h(e[l]),this.addGroup(s,o,l),s+=o,o=0;function h(e){let s=r.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===lQ.isClockWise(h)&&(h=h.reverse());for(let c=0,d=u.length;c<d;c++){let p=u[c];!0===lQ.isClockWise(p)&&(u[c]=p.reverse())}let f=lQ.triangulateShape(h,u);for(let m=0,g=u.length;m<g;m++){let v=u[m];h=h.concat(v)}for(let y=0,x=h.length;y<x;y++){let _=h[y];r.push(_.x,_.y,0),i.push(0,0,1),a.push(_.x,_.y)}for(let b=0,M=f.length;b<M;b++){let w=f[b],S=w[0]+s,T=w[1]+s,E=w[2]+s;n.push(S,T,E),o+=3}}this.setIndex(n),this.setAttribute("position",new r6(r,3)),this.setAttribute("normal",new r6(i,3)),this.setAttribute("uv",new r6(a,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){let i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let n=[];for(let r=0,i=e.shapes.length;r<i;r++){let a=t[e.shapes[r]];n.push(a)}return new l6(n,e.curveSegments)}}class l7 extends is{constructor(e=1,t=32,n=16,r=0,i=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));let o=Math.min(a+s,Math.PI),l=0,h=[],u=new nk,c=new nk,d=[],p=[],f=[],m=[];for(let g=0;g<=n;g++){let v=[],y=g/n,x=0;0==g&&0==a?x=.5/t:g==n&&o==Math.PI&&(x=-.5/t);for(let _=0;_<=t;_++){let b=_/t;u.x=-e*Math.cos(r+b*i)*Math.sin(a+y*s),u.y=e*Math.cos(a+y*s),u.z=e*Math.sin(r+b*i)*Math.sin(a+y*s),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(b+x,1-y),v.push(l++)}h.push(v)}for(let M=0;M<n;M++)for(let w=0;w<t;w++){let S=h[M][w+1],T=h[M][w],E=h[M+1][w],A=h[M+1][w+1];(0!==M||a>0)&&d.push(S,T,A),(M!==n-1||o<Math.PI)&&d.push(T,E,A)}this.setIndex(d),this.setAttribute("position",new r6(p,3)),this.setAttribute("normal",new r6(f,3)),this.setAttribute("uv",new r6(m,2))}static fromJSON(e){return new l7(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class l8 extends lx{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l8(e.radius,e.detail)}}class l9 extends is{constructor(e=1,t=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);let a=[],s=[],o=[],l=[],h=new nk,u=new nk,c=new nk;for(let d=0;d<=n;d++)for(let p=0;p<=r;p++){let f=p/r*i,m=d/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(f),u.y=(e+t*Math.cos(m))*Math.sin(f),u.z=t*Math.sin(m),s.push(u.x,u.y,u.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(p/r),l.push(d/n)}for(let g=1;g<=n;g++)for(let v=1;v<=r;v++){let y=(r+1)*g+v-1,x=(r+1)*(g-1)+v-1,_=(r+1)*(g-1)+v,b=(r+1)*g+v;a.push(y,x,b),a.push(x,_,b)}this.setIndex(a),this.setAttribute("position",new r6(s,3)),this.setAttribute("normal",new r6(o,3)),this.setAttribute("uv",new r6(l,2))}static fromJSON(e){return new l9(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class he extends is{constructor(e=1,t=.4,n=64,r=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},n=Math.floor(n),r=Math.floor(r);let s=[],o=[],l=[],h=[],u=new nk,c=new nk,d=new nk,p=new nk,f=new nk,m=new nk,g=new nk;for(let v=0;v<=n;++v){let y=v/n*i*Math.PI*2;C(y,i,a,e,d),C(y+.01,i,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let x=0;x<=r;++x){let _=x/r*Math.PI*2,b=-t*Math.cos(_),M=t*Math.sin(_);u.x=d.x+(b*g.x+M*f.x),u.y=d.y+(b*g.y+M*f.y),u.z=d.z+(b*g.z+M*f.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push(v/n),h.push(x/r)}}for(let w=1;w<=n;w++)for(let S=1;S<=r;S++){let T=(r+1)*(w-1)+(S-1),E=(r+1)*w+(S-1),A=(r+1)*w+S,R=(r+1)*(w-1)+S;s.push(T,E,R),s.push(E,A,R)}function C(e,t,n,r,i){let a=n/t*e,s=Math.cos(a);i.x=r*(2+s)*.5*Math.cos(e),i.y=r*(2+s)*Math.sin(e)*.5,i.z=r*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new r6(o,3)),this.setAttribute("normal",new r6(l,3)),this.setAttribute("uv",new r6(h,2))}static fromJSON(e){return new he(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ht extends is{constructor(e=new lh(new nk(-1,-1,0),new nk(-1,1,0),new nk(1,1,0)),t=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i};let a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new nk,o=new nk,l=new nc,h=new nk,u=[],c=[],d=[],p=[];function f(i){h=e.getPointAt(i/t,h);let l=a.normals[i],d=a.binormals[i];for(let p=0;p<=r;p++){let f=p/r*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);o.x=g*l.x+m*d.x,o.y=g*l.y+m*d.y,o.z=g*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=h.x+n*o.x,s.y=h.y+n*o.y,s.z=h.z+n*o.z,u.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===i?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=r;n++)l.x=e/t,l.y=n/r,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let n=1;n<=r;n++){let i=(r+1)*(e-1)+(n-1),a=(r+1)*e+(n-1),s=(r+1)*e+n,o=(r+1)*(e-1)+n;p.push(i,a,o),p.push(a,s,o)}}()})(),this.setIndex(p),this.setAttribute("position",new r6(u,3)),this.setAttribute("normal",new r6(c,3)),this.setAttribute("uv",new r6(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ht(new lc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class hn extends is{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],n=new Set,r=new nk,i=new nk;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let l=0,h=o.length;l<h;++l){let u=o[l],c=u.start,d=u.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let g=s.getX(p+m),v=s.getX(p+(m+1)%3);r.fromBufferAttribute(a,g),i.fromBufferAttribute(a,v),!0===hr(r,i,n)&&(t.push(r.x,r.y,r.z),t.push(i.x,i.y,i.z))}}}else{let y=e.attributes.position;for(let x=0,_=y.count/3;x<_;x++)for(let b=0;b<3;b++){let M=3*x+b,w=3*x+(b+1)%3;r.fromBufferAttribute(y,M),i.fromBufferAttribute(y,w),!0===hr(r,i,n)&&(t.push(r.x,r.y,r.z),t.push(i.x,i.y,i.z))}}this.setAttribute("position",new r6(t,3))}}}function hr(e,t,n){let r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r),n.add(i),!0)}var hi=Object.freeze({__proto__:null,BoxGeometry:iA,BoxBufferGeometry:iA,CapsuleGeometry:lm,CapsuleBufferGeometry:lm,CircleGeometry:lg,CircleBufferGeometry:lg,ConeGeometry:ly,ConeBufferGeometry:ly,CylinderGeometry:lv,CylinderBufferGeometry:lv,DodecahedronGeometry:l_,DodecahedronBufferGeometry:l_,EdgesGeometry:lT,ExtrudeGeometry:l1,ExtrudeBufferGeometry:l1,IcosahedronGeometry:l2,IcosahedronBufferGeometry:l2,LatheGeometry:lf,LatheBufferGeometry:lf,OctahedronGeometry:l4,OctahedronBufferGeometry:l4,PlaneGeometry:iq,PlaneBufferGeometry:iq,PolyhedronGeometry:lx,PolyhedronBufferGeometry:lx,RingGeometry:l5,RingBufferGeometry:l5,ShapeGeometry:l6,ShapeBufferGeometry:l6,SphereGeometry:l7,SphereBufferGeometry:l7,TetrahedronGeometry:l8,TetrahedronBufferGeometry:l8,TorusGeometry:l9,TorusBufferGeometry:l9,TorusKnotGeometry:he,TorusKnotBufferGeometry:he,TubeGeometry:ht,TubeBufferGeometry:ht,WireframeGeometry:hn});class ha extends rX{constructor(e){super(),this.type="ShadowMaterial",this.color=new nA(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}ha.prototype.isShadowMaterial=!0;class hs extends iP{constructor(e){super(e),this.type="RawShaderMaterial"}}hs.prototype.isRawShaderMaterial=!0;class ho extends rX{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new nA(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nA(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tE,this.normalScale=new nc(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}ho.prototype.isMeshStandardMaterial=!0;class hl extends ho{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new nc(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return nn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new nA(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new nA(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new nA(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}hl.prototype.isMeshPhysicalMaterial=!0;class hh extends rX{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new nA(16777215),this.specular=new nA(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nA(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tE,this.normalScale=new nc(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}hh.prototype.isMeshPhongMaterial=!0;class hu extends rX{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new nA(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nA(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tE,this.normalScale=new nc(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}hu.prototype.isMeshToonMaterial=!0;class hc extends rX{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tE,this.normalScale=new nc(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}hc.prototype.isMeshNormalMaterial=!0;class hd extends rX{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new nA(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nA(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}hd.prototype.isMeshLambertMaterial=!0;class hp extends rX{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new nA(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tE,this.normalScale=new nc(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}hp.prototype.isMeshMatcapMaterial=!0;class hf extends oN{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}hf.prototype.isLineDashedMaterial=!0;let hm={ShadowMaterial:ha,SpriteMaterial:s8,RawShaderMaterial:hs,ShaderMaterial:iP,PointsMaterial:oj,MeshPhysicalMaterial:hl,MeshStandardMaterial:ho,MeshPhongMaterial:hh,MeshToonMaterial:hu,MeshNormalMaterial:hc,MeshLambertMaterial:hd,MeshDepthMaterial:sG,MeshDistanceMaterial:sk,MeshBasicMaterial:rJ,MeshMatcapMaterial:hp,LineDashedMaterial:hf,LineBasicMaterial:oN,Material:rX};rX.fromType=function(e){return new hm[e]};let hg={arraySlice:function(e,t,n){return hg.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return e&&(n||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){let t=e.length,n=Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(function(t,n){return e[t]-e[n]}),n},sortedArray:function(e,t,n){let r=e.length,i=new e.constructor(r);for(let a=0,s=0;s!==r;++a){let o=n[a]*t;for(let l=0;l!==t;++l)i[s++]=e[o+l]}return i},flattenJSON:function(e,t,n,r){let i=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[i++];if(void 0===a)return;let s=a[r];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[r])&&(t.push(a.time),n.push.apply(n,s)),a=e[i++];while(void 0!==a);else if(void 0!==s.toArray)do void 0!==(s=a[r])&&(t.push(a.time),s.toArray(n,n.length)),a=e[i++];while(void 0!==a);else do void 0!==(s=a[r])&&(t.push(a.time),n.push(s)),a=e[i++];while(void 0!==a)}},subclip:function(e,t,n,r,i=30){let a=e.clone();a.name=t;let s=[];for(let o=0;o<a.tracks.length;++o){let l=a.tracks[o],h=l.getValueSize(),u=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*i;if(!(p<n)&&!(p>=r)){u.push(l.times[d]);for(let f=0;f<h;++f)c.push(l.values[d*h+f])}}0!==u.length&&(l.times=hg.convertArray(u,l.times.constructor),l.values=hg.convertArray(c,l.values.constructor),s.push(l))}a.tracks=s;let m=1/0;for(let g=0;g<a.tracks.length;++g)m>a.tracks[g].times[0]&&(m=a.tracks[g].times[0]);for(let v=0;v<a.tracks.length;++v)a.tracks[v].shift(-1*m);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,n=e,r=30){r<=0&&(r=30);let i=n.tracks.length,a=t/r;for(let s=0;s<i;++s){let o=n.tracks[s],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;let h=e.tracks.find(function(e){return e.name===o.name&&e.ValueTypeName===l});if(void 0===h)continue;let u=0,c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);let d=0,p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let f=o.times.length-1,m;if(a<=o.times[0]){let g=u,v=c-u;m=hg.arraySlice(o.values,g,v)}else if(a>=o.times[f]){let y=f*c+u,x=y+c-u;m=hg.arraySlice(o.values,y,x)}else{let _=o.createInterpolant(),b=u,M=c-u;_.evaluate(a),m=hg.arraySlice(_.resultBuffer,b,M)}if("quaternion"===l){let w=new nG().fromArray(m).normalize().conjugate();w.toArray(m)}let S=h.times.length;for(let T=0;T<S;++T){let E=T*p+d;if("quaternion"===l)nG.multiplyQuaternionsFlat(h.values,E,m,0,h.values,E);else{let A=p-2*d;for(let R=0;R<A;++R)h.values[E+R]-=m[R]}}}return e.blendMode=ty,e}};class hv{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];validate_interval:{seek:{let a;linear_scan:{forward_scan:if(!(e<r)){for(let s=n+2;;){if(void 0===r){if(e<i)break forward_scan;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===s)break;if(i=r,e<(r=t[++n]))break seek}a=t.length;break linear_scan}if(!(e>=i)){let o=t[1];e<o&&(n=2,i=o);for(let l=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===l)break;if(r=i,e>=(i=t[--n-1]))break seek}a=n,n=0;break linear_scan}break validate_interval}for(;n<a;){let h=n+a>>>1;e<t[h]?a=h:n=h+1}if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let a=0;a!==r;++a)t[a]=n[i+a];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}hv.prototype.beforeStart_=hv.prototype.copySampleValue_,hv.prototype.afterEnd_=hv.prototype.copySampleValue_;class hy extends hv{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tf,endingEnd:tf}}intervalChanged_(e,t,n){let r=this.parameterPositions,i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case tm:i=e,s=2*t-n;break;case tg:s=t+r[i=r.length-2]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case tm:a=e,o=2*n-t;break;case tg:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}let l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,v=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let _=0;_!==s;++_)i[_]=g*a[h+_]+v*a[l+_]+y*a[o+_]+x*a[u+_];return i}}class hx extends hv{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(n-t)/(r-t),u=1-h;for(let c=0;c!==s;++c)i[c]=a[l+c]*u+a[o+c]*h;return i}}class h_ extends hv{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class hb{constructor(e,t,n,r){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=hg.convertArray(t,this.TimeBufferType),this.values=hg.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:hg.convertArray(e.times,Array),values:hg.convertArray(e.values,Array)};let r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new h_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new hx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new hy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case tc:t=this.InterpolantFactoryMethodDiscrete;break;case td:t=this.InterpolantFactoryMethodLinear;break;case tp:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(n)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return tc;case this.InterpolantFactoryMethodLinear:return td;case this.InterpolantFactoryMethodSmooth:return tp}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){let n=this.times,r=n.length,i=0,a=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);let s=this.getValueSize();this.times=hg.arraySlice(n,i,a),this.values=hg.arraySlice(this.values,i*s,a*s)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let s=0;s!==i;s++){let o=n[s];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),e=!1;break}a=o}if(void 0!==r&&hg.isTypedArray(r))for(let l=0,h=r.length;l!==h;++l){let u=r[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){let e=hg.arraySlice(this.times),t=hg.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===tp,i=e.length-1,a=1;for(let s=1;s<i;++s){let o=!1,l=e[s],h=e[s+1];if(l!==h&&(1!==s||l!==e[0])){if(r)o=!0;else{let u=s*n,c=u-n,d=u+n;for(let p=0;p!==n;++p){let f=t[u+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(s!==a){e[a]=e[s];let m=s*n,g=a*n;for(let v=0;v!==n;++v)t[g+v]=t[m+v]}++a}}if(i>0){e[a]=e[i];for(let y=i*n,x=a*n,_=0;_!==n;++_)t[x+_]=t[y+_];++a}return a!==e.length?(this.times=hg.arraySlice(e,0,a),this.values=hg.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}clone(){let e=hg.arraySlice(this.times,0),t=hg.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}hb.prototype.TimeBufferType=Float32Array,hb.prototype.ValueBufferType=Float32Array,hb.prototype.DefaultInterpolation=td;class hM extends hb{}hM.prototype.ValueTypeName="bool",hM.prototype.ValueBufferType=Array,hM.prototype.DefaultInterpolation=tc,hM.prototype.InterpolantFactoryMethodLinear=void 0,hM.prototype.InterpolantFactoryMethodSmooth=void 0;class hw extends hb{}hw.prototype.ValueTypeName="color";class hS extends hb{}hS.prototype.ValueTypeName="number";class hT extends hv{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t),l=e*s;for(let h=l+s;l!==h;l+=4)nG.slerpFlat(i,0,a,l-s,a,l,o);return i}}class hE extends hb{InterpolantFactoryMethodLinear(e){return new hT(this.times,this.values,this.getValueSize(),e)}}hE.prototype.ValueTypeName="quaternion",hE.prototype.DefaultInterpolation=td,hE.prototype.InterpolantFactoryMethodSmooth=void 0;class hA extends hb{}hA.prototype.ValueTypeName="string",hA.prototype.ValueBufferType=Array,hA.prototype.DefaultInterpolation=tc,hA.prototype.InterpolantFactoryMethodLinear=void 0,hA.prototype.InterpolantFactoryMethodSmooth=void 0;class hR extends hb{}hR.prototype.ValueTypeName="vector";class hC{constructor(e,t=-1,n,r=tv){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=nt(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],n=e.tracks,r=1/(e.fps||1);for(let i=0,a=n.length;i!==a;++i)t.push(hL(n[i]).scale(r));let s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){let t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let i=0,a=n.length;i!==a;++i)t.push(hb.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(e,t,n,r){let i=t.length,a=[];for(let s=0;s<i;s++){let o=[],l=[];o.push((s+i-1)%i,s,(s+1)%i),l.push(0,1,0);let h=hg.getKeyframeOrder(o);o=hg.sortedArray(o,1,h),l=hg.sortedArray(l,1,h),r||0!==o[0]||(o.push(i),l.push(l[0])),a.push(new hS(".morphTargetInfluences["+t[s].name+"]",o,l).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){let r={},i=/^([\w-]*?)([\d]+)$/;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.name.match(i);if(l&&l.length>1){let h=l[1],u=r[h];u||(r[h]=u=[]),u.push(o)}}let c=[];for(let d in r)c.push(this.CreateFromMorphTargetSequence(d,r[d],t,n));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let n=function(e,t,n,r,i){if(0!==n.length){let a=[],s=[];hg.flattenJSON(n,a,s,r),0!==a.length&&i.push(new e(t,a,s))}},r=[],i=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let h=0;h<l.length;h++){let u=l[h].keys;if(u&&0!==u.length){if(u[0].morphTargets){let c={},d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)c[u[d].morphTargets[p]]=-1;for(let f in c){let m=[],g=[];for(let v=0;v!==u[d].morphTargets.length;++v){let y=u[d];m.push(y.time),g.push(y.morphTarget===f?1:0)}r.push(new hS(".morphTargetInfluence["+f+"]",m,g))}o=c.length*a}else{let x=".bones["+t[h].name+"]";n(hR,x+".position",u,"pos",r),n(hE,x+".quaternion",u,"rot",r),n(hR,x+".scale",u,"scl",r)}}}if(0===r.length)return null;let _=new this(i,o,r,s);return _}resetDuration(){let e=this.tracks,t=0;for(let n=0,r=e.length;n!==r;++n){let i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function hL(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return hS;case"vector":case"vector2":case"vector3":case"vector4":return hR;case"color":return hw;case"quaternion":return hE;case"bool":case"boolean":return hM;case"string":return hA}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let n=[],r=[];hg.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let hP={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class hD{constructor(e,t,n){let r=this,i=!1,a=0,s=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,s),a===s&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){let r=l[t],i=l[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return i}return null}}}let hI=new hD;class hN{constructor(e){this.manager=void 0!==e?e:hI,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(r,i){n.load(e,r,t,i)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let hB={};class hz extends hN{constructor(e){super(e)}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let i=hP.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout(()=>{t&&t(i),this.manager.itemEnd(e)},0),i;if(void 0!==hB[e]){hB[e].push({onLoad:t,onProgress:n,onError:r});return}hB[e]=[],hB[e].push({onLoad:t,onProgress:n,onError:r});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let n=hB[e],r=t.body.getReader(),i=t.headers.get("Content-Length"),a=i?parseInt(i):0,s=0!==a,o=0,l=new ReadableStream({start(e){(function t(){r.read().then(({done:r,value:i})=>{if(r)e.close();else{o+=i.byteLength;let l=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let h=0,u=n.length;h<u;h++){let c=n[h];c.onProgress&&c.onProgress(l)}e.enqueue(i),t()}})})()}});return new Response(l)}throw Error(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{let t=new DOMParser;return t.parseFromString(e,s)});case"json":return e.json();default:if(void 0===s)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(s),n=t&&t[1]?t[1].toLowerCase():void 0,r=new TextDecoder(n);return e.arrayBuffer().then(e=>r.decode(e))}}}).then(t=>{hP.add(e,t);let n=hB[e];delete hB[e];for(let r=0,i=n.length;r<i;r++){let a=n[r];a.onLoad&&a.onLoad(t)}}).catch(t=>{let n=hB[e];if(void 0===n)throw this.manager.itemError(e),t;delete hB[e];for(let r=0,i=n.length;r<i;r++){let a=n[r];a.onError&&a.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class hO extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=new hz(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(n){try{t(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(e)}},n,r)}parse(e){let t=[];for(let n=0;n<e.length;n++){let r=hC.parse(e[n]);t.push(r)}return t}}class hU extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=[],s=new o0,o=new hz(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function h(h){o.load(e[h],function(e){let n=i.parse(e,!0);a[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(l+=1)&&(1===n.mipmapCount&&(s.minFilter=ey),s.image=a,s.format=n.format,s.needsUpdate=!0,t&&t(s))},n,r)}if(Array.isArray(e))for(let u=0,c=e.length;u<c;++u)h(u);else o.load(e,function(e){let n=i.parse(e,!0);if(n.isCubemap){let r=n.mipmaps.length/n.mipmapCount;for(let o=0;o<r;o++){a[o]={mipmaps:[]};for(let l=0;l<n.mipmapCount;l++)a[o].mipmaps.push(n.mipmaps[o*n.mipmapCount+l]),a[o].format=n.format,a[o].width=n.width,a[o].height=n.height}s.image=a}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=ey),s.format=n.format,s.needsUpdate=!0,t&&t(s)},n,r);return s}}class hF extends hN{constructor(e){super(e)}load(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let i=this,a=hP.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;let s=ng("img");function o(){h(),hP.add(e,this),t&&t(this),i.manager.itemEnd(e)}function l(t){h(),r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(e),s.src=e,s}}class hH extends hN{constructor(e){super(e)}load(e,t,n,r){let i=new iB,a=new hF(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(e[n],function(e){i.images[n]=e,6==++s&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}for(let l=0;l<e.length;++l)o(l);return i}}class hG extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=new oS,s=new hz(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){let n=i.parse(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:ec,a.wrapT=void 0!==n.wrapT?n.wrapT:ec,a.magFilter=void 0!==n.magFilter?n.magFilter:ey,a.minFilter=void 0!==n.minFilter?n.minFilter:ey,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=eb),1===n.mipmapCount&&(a.minFilter=ey),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,t&&t(a,n))},n,r),a}}class hk extends hN{constructor(e){super(e)}load(e,t,n,r){let i=new nI,a=new hF(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i}}class hV extends rN{constructor(e,t=1){super(),this.type="Light",this.color=new nA(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}hV.prototype.isLight=!0;class hW extends hV{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(rN.DefaultUp),this.updateMatrix(),this.groundColor=new nA(t)}copy(e){return hV.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}hW.prototype.isHemisphereLight=!0;let hj=new rh,hq=new nk,hX=new nk;class hJ{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new nc(512,512),this.map=null,this.mapPass=null,this.matrix=new rh,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new iV,this._frameExtents=new nc(1,1),this._viewportCount=1,this._viewports=[new nN(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,n=this.matrix;hq.setFromMatrixPosition(e.matrixWorld),t.position.copy(hq),hX.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hX),t.updateMatrixWorld(),hj.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hj),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class hY extends hJ{constructor(){super(new iI(50,1,.5,500)),this.focus=1}updateMatrices(e){let t=this.camera,n=2*ne*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(n!==t.fov||r!==t.aspect||i!==t.far)&&(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}hY.prototype.isSpotLightShadow=!0;class hZ extends hV{constructor(e,t,n=0,r=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(rN.DefaultUp),this.updateMatrix(),this.target=new rN,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new hY}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}hZ.prototype.isSpotLight=!0;let hK=new rh,hQ=new nk,h$=new nk;class h0 extends hJ{constructor(){super(new iI(90,1,.5,500)),this._frameExtents=new nc(4,2),this._viewportCount=6,this._viewports=[new nN(2,1,1,1),new nN(0,1,1,1),new nN(3,1,1,1),new nN(1,1,1,1),new nN(3,0,1,1),new nN(1,0,1,1)],this._cubeDirections=[new nk(1,0,0),new nk(-1,0,0),new nk(0,0,1),new nk(0,0,-1),new nk(0,1,0),new nk(0,-1,0)],this._cubeUps=[new nk(0,1,0),new nk(0,1,0),new nk(0,1,0),new nk(0,1,0),new nk(0,0,1),new nk(0,0,-1)]}updateMatrices(e,t=0){let n=this.camera,r=this.matrix,i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),hQ.setFromMatrixPosition(e.matrixWorld),n.position.copy(hQ),h$.copy(n.position),h$.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(h$),n.updateMatrixWorld(),r.makeTranslation(-hQ.x,-hQ.y,-hQ.z),hK.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hK)}}h0.prototype.isPointLightShadow=!0;class h1 extends hV{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new h0}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}h1.prototype.isPointLight=!0;class h3 extends hJ{constructor(){super(new i3(-5,5,5,-5,.5,500))}}h3.prototype.isDirectionalLightShadow=!0;class h2 extends hV{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(rN.DefaultUp),this.updateMatrix(),this.target=new rN,this.shadow=new h3}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}h2.prototype.isDirectionalLight=!0;class h4 extends hV{constructor(e,t){super(e,t),this.type="AmbientLight"}}h4.prototype.isAmbientLight=!0;class h5 extends hV{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}h5.prototype.isRectAreaLight=!0;class h6{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new nk)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*i),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*r)),t.addScaledVector(a[5],1.092548*(r*i)),t.addScaledVector(a[6],.315392*(3*i*i-1)),t.addScaledVector(a[7],1.092548*(n*i)),t.addScaledVector(a[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){let n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*r),t.addScaledVector(a[2],1.023328*i),t.addScaledVector(a[3],1.023328*n),t.addScaledVector(a[4],.858086*n*r),t.addScaledVector(a[5],.858086*r*i),t.addScaledVector(a[6],.743125*i*i-.247708),t.addScaledVector(a[7],.858086*n*i),t.addScaledVector(a[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){let n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){let n=e.x,r=e.y,i=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-r*r)}}h6.prototype.isSphericalHarmonics3=!0;class h7 extends hV{constructor(e=new h6,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}h7.prototype.isLightProbe=!0;class h8 extends hN{constructor(e){super(e),this.textures={}}load(e,t,n,r){let i=this,a=new hz(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,function(n){try{t(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(e)}},n,r)}parse(e){let t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let r=rX.fromType(e.type);if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=e.sheen),void 0!==e.sheenColor&&(r.sheenColor=new nA().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(r.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.specularIntensity&&(r.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.thickness&&(r.thickness=e.thickness),void 0!==e.attenuationDistance&&(r.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let i in e.uniforms){let a=e.uniforms[i];switch(r.uniforms[i]={},a.type){case"t":r.uniforms[i].value=n(a.value);break;case"c":r.uniforms[i].value=new nA().setHex(a.value);break;case"v2":r.uniforms[i].value=new nc().fromArray(a.value);break;case"v3":r.uniforms[i].value=new nk().fromArray(a.value);break;case"v4":r.uniforms[i].value=new nN().fromArray(a.value);break;case"m3":r.uniforms[i].value=new nd().fromArray(a.value);break;case"m4":r.uniforms[i].value=new rh().fromArray(a.value);break;default:r.uniforms[i].value=a.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(let s in e.extensions)r.extensions[s]=e.extensions[s];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=n(e.map)),void 0!==e.matcap&&(r.matcap=n(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),r.normalScale=new nc().fromArray(o)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.specularIntensityMap&&(r.specularIntensityMap=n(e.specularIntensityMap)),void 0!==e.specularColorMap&&(r.specularColorMap=n(e.specularColorMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=new nc().fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(r.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(r.thicknessMap=n(e.thicknessMap)),void 0!==e.sheenColorMap&&(r.sheenColorMap=n(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(r.sheenRoughnessMap=n(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}}class h9{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(i){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}class ue extends is{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}ue.prototype.isInstancedBufferGeometry=!0;class ut extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=new hz(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,function(n){try{t(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(e)}},n,r)}parse(e){let t={},n={};function r(e,r){if(void 0!==t[r])return t[r];let i=e.interleavedBuffers,a=i[r],s=function(e,t){if(void 0!==n[t])return n[t];let r=e.arrayBuffers,i=r[t],a=new Uint32Array(i).buffer;return n[t]=a,a}(e,a.buffer),o=nm(a.type,s),l=new s5(o,a.stride);return l.uuid=a.uuid,t[r]=l,l}let i=e.isInstancedBufferGeometry?new ue:new is,a=e.data.index;if(void 0!==a){let s=nm(a.type,a.array);i.setIndex(new rK(s,1))}let o=e.data.attributes;for(let l in o){let h=o[l],u;if(h.isInterleavedBufferAttribute){let c=r(e.data,h.data);u=new s7(c,h.itemSize,h.offset,h.normalized)}else{let d=nm(h.type,h.array),p=h.isInstancedBufferAttribute?oR:rK;u=new p(d,h.itemSize,h.normalized)}void 0!==h.name&&(u.name=h.name),void 0!==h.usage&&u.setUsage(h.usage),void 0!==h.updateRange&&(u.updateRange.offset=h.updateRange.offset,u.updateRange.count=h.updateRange.count),i.setAttribute(l,u)}let f=e.data.morphAttributes;if(f)for(let m in f){let g=f[m],v=[];for(let y=0,x=g.length;y<x;y++){let _=g[y],b;if(_.isInterleavedBufferAttribute){let M=r(e.data,_.data);b=new s7(M,_.itemSize,_.offset,_.normalized)}else{let w=nm(_.type,_.array);b=new rK(w,_.itemSize,_.normalized)}void 0!==_.name&&(b.name=_.name),v.push(b)}i.morphAttributes[m]=v}let S=e.data.morphTargetsRelative;S&&(i.morphTargetsRelative=!0);let T=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==T)for(let E=0,A=T.length;E!==A;++E){let R=T[E];i.addGroup(R.start,R.count,R.materialIndex)}let C=e.data.boundingSphere;if(void 0!==C){let L=new nk;void 0!==C.center&&L.fromArray(C.center),i.boundingSphere=new re(L,C.radius)}return e.name&&(i.name=e.name),e.userData&&(i.userData=e.userData),i}}class un extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=""===this.path?h9.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new hz(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){let a=null;try{a=JSON.parse(n)}catch(s){void 0!==r&&r(s),console.error("THREE:ObjectLoader: Can't parse "+e+".",s.message);return}let o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}i.parse(a,t)},n,r)}async loadAsync(e,t){let n=""===this.path?h9.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;let r=new hz(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);let i=await r.loadAsync(e,t),a=JSON.parse(i),s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){let n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,i,o,s,n),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),void 0!==t){let u=!1;for(let c in a)if(a[c]instanceof HTMLImageElement){u=!0;break}!1===u&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),i=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,i),s=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,r,s,a,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let n=0,r=e.length;n<r;n++){let i=new lE().fromJSON(e[n]);t[i.uuid]=i}return t}parseSkeletons(e,t){let n={},r={};if(t.traverse(function(e){e.isBone&&(r[e.uuid]=e)}),void 0!==e)for(let i=0,a=e.length;i<a;i++){let s=new oA().fromJSON(e[i],r);n[s.uuid]=s}return n}parseGeometries(e,t){let n={};if(void 0!==e){let r=new ut;for(let i=0,a=e.length;i<a;i++){let s,o=e[i];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(o);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:o.type in hi?s=hi[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),n[o.uuid]=s}}return n}parseMaterials(e,t){let n={},r={};if(void 0!==e){let i=new h8;i.setTextures(t);for(let a=0,s=e.length;a<s;a++){let o=e[a];if("MultiMaterial"===o.type){let l=[];for(let h=0;h<o.materials.length;h++){let u=o.materials[h];void 0===n[u.uuid]&&(n[u.uuid]=i.parse(u)),l.push(n[u.uuid])}r[o.uuid]=l}else void 0===n[o.uuid]&&(n[o.uuid]=i.parse(o)),r[o.uuid]=n[o.uuid]}}return r}parseAnimations(e){let t={};if(void 0!==e)for(let n=0;n<e.length;n++){let r=e[n],i=hC.parse(r);t[i.uuid]=i}return t}parseImages(e,t){let n=this,r={},i;function a(e){if("string"==typeof e){var t;let r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;return n.manager.itemStart(r),i.load(r,function(){n.manager.itemEnd(r)},void 0,function(){n.manager.itemError(r),n.manager.itemEnd(r)})}return e.data?{data:nm(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let s=new hD(t);(i=new hF(s)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let h=e[o],u=h.url;if(Array.isArray(u)){let c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d],m=a(f);null!==m&&(m instanceof HTMLImageElement?c.push(m):c.push(new oS(m.data,m.width,m.height)))}r[h.uuid]=new nL(c)}else{let g=a(h.url);r[h.uuid]=new nL(g)}}}return r}async parseImagesAsync(e){let t=this,n={},r;async function i(e){if("string"==typeof e){let n=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:t.resourcePath+e;return await r.loadAsync(n)}return e.data?{data:nm(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(r=new hF(this.manager)).setCrossOrigin(this.crossOrigin);for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.url;if(Array.isArray(l)){let h=[];for(let u=0,c=l.length;u<c;u++){let d=l[u],p=await i(d);null!==p&&(p instanceof HTMLImageElement?h.push(p):h.push(new oS(p.data,p.width,p.height)))}n[o.uuid]=new nL(h)}else{let f=await i(o.url);n[o.uuid]=new nL(f)}}}return n}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let r={};if(void 0!==e)for(let i=0,a=e.length;i<a;i++){let s=e[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let o=t[s.image],l=o.data,h;Array.isArray(l)?(h=new iB,6===l.length&&(h.needsUpdate=!0)):(h=l&&l.data?new oS:new nI,l&&(h.needsUpdate=!0)),h.source=o,h.uuid=s.uuid,void 0!==s.name&&(h.name=s.name),void 0!==s.mapping&&(h.mapping=n(s.mapping,ur)),void 0!==s.offset&&h.offset.fromArray(s.offset),void 0!==s.repeat&&h.repeat.fromArray(s.repeat),void 0!==s.center&&h.center.fromArray(s.center),void 0!==s.rotation&&(h.rotation=s.rotation),void 0!==s.wrap&&(h.wrapS=n(s.wrap[0],ui),h.wrapT=n(s.wrap[1],ui)),void 0!==s.format&&(h.format=s.format),void 0!==s.type&&(h.type=s.type),void 0!==s.encoding&&(h.encoding=s.encoding),void 0!==s.minFilter&&(h.minFilter=n(s.minFilter,ua)),void 0!==s.magFilter&&(h.magFilter=n(s.magFilter,ua)),void 0!==s.anisotropy&&(h.anisotropy=s.anisotropy),void 0!==s.flipY&&(h.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(h.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(h.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(h.userData=s.userData),r[s.uuid]=h}return r}parseObject(e,t,n,r,i){let a;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let r=0,i=e.length;r<i;r++){let a=e[r];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(n[a])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function l(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let h,u;switch(e.type){case"Scene":a=new s4,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new nA(e.background):a.background=l(e.background)),void 0!==e.environment&&(a.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new s2(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new s3(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new iI(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new i3(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new h4(e.color,e.intensity);break;case"DirectionalLight":a=new h2(e.color,e.intensity);break;case"PointLight":a=new h1(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new h5(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new hZ(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new hW(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new h7().fromJSON(e);break;case"SkinnedMesh":h=s(e.geometry),u=o(e.material),a=new oM(h,u),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":h=s(e.geometry),u=o(e.material),a=new iT(h,u);break;case"InstancedMesh":h=s(e.geometry),u=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(a=new oI(h,u,c)).instanceMatrix=new oR(new Float32Array(d.array),16),void 0!==p&&(a.instanceColor=new oR(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new og;break;case"Line":a=new oH(s(e.geometry),o(e.material));break;case"LineLoop":a=new oW(s(e.geometry),o(e.material));break;case"LineSegments":a=new oV(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":a=new oZ(s(e.geometry),o(e.material));break;case"Sprite":a=new od(o(e.material));break;case"Group":a=new sJ;break;case"Bone":a=new ow;break;default:a=new rN}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)a.add(this.parseObject(f[m],t,n,r,i))}if(void 0!==e.animations){let g=e.animations;for(let v=0;v<g.length;v++){let y=g[v];a.animations.push(i[y])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);let x=e.levels;for(let _=0;_<x.length;_++){let b=x[_],M=a.getObjectByProperty("uuid",b.object);void 0!==M&&a.addLevel(M,b.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}let ur={UVMapping:ei,CubeReflectionMapping:ea,CubeRefractionMapping:es,EquirectangularReflectionMapping:eo,EquirectangularRefractionMapping:el,CubeUVReflectionMapping:eh},ui={RepeatWrapping:eu,ClampToEdgeWrapping:ec,MirroredRepeatWrapping:ed},ua={NearestFilter:ep,NearestMipmapNearestFilter:ef,NearestMipmapLinearFilter:eg,LinearFilter:ey,LinearMipmapNearestFilter:ex,LinearMipmapLinearFilter:eb};class us extends hN{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let i=this,a=hP.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(n){hP.add(e,n),t&&t(n),i.manager.itemEnd(e)}).catch(function(t){r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}),i.manager.itemStart(e)}}us.prototype.isImageBitmapLoader=!0;let uo,ul={getContext:function(){return void 0===uo&&(uo=new(window.AudioContext||window.webkitAudioContext)),uo},setContext:function(e){uo=e}};class uh extends hN{constructor(e){super(e)}load(e,t,n,r){let i=this,a=new hz(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(n){try{let a=n.slice(0),s=ul.getContext();s.decodeAudioData(a,function(e){t(e)})}catch(o){r?r(o):console.error(o),i.manager.itemError(e)}},n,r)}}class uu extends h7{constructor(e,t,n=1){super(void 0,n);let r=new nA().set(e),i=new nA().set(t),a=new nk(r.r,r.g,r.b),s=new nk(i.r,i.g,i.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(o*Math.sqrt(.75))}}uu.prototype.isHemisphereLightProbe=!0;class uc extends h7{constructor(e,t=1){super(void 0,t);let n=new nA().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}uc.prototype.isAmbientLightProbe=!0;let ud=new rh,up=new rh,uf=new rh;class um{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new iI,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new iI,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,uf.copy(e.projectionMatrix);let r=t.eyeSep/2,i=r*t.near/t.focus,a=t.near*Math.tan(t9*t.fov*.5)/t.zoom,s,o;up.elements[12]=-r,ud.elements[12]=r,s=-a*t.aspect+i,o=a*t.aspect+i,uf.elements[0]=2*t.near/(o-s),uf.elements[8]=(o+s)/(o-s),this.cameraL.projectionMatrix.copy(uf),s=-a*t.aspect-i,o=a*t.aspect-i,uf.elements[0]=2*t.near/(o-s),uf.elements[8]=(o+s)/(o-s),this.cameraR.projectionMatrix.copy(uf)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(up),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ud)}}class ug{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=uv(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=uv();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function uv(){return("undefined"==typeof performance?Date:performance).now()}let uy=new nk,ux=new nG,u_=new nk,ub=new nk;class uM extends rN{constructor(){super(),this.type="AudioListener",this.context=ul.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ug}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(uy,ux,u_),ub.set(0,0,-1).applyQuaternion(ux),t.positionX){let r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(uy.x,r),t.positionY.linearRampToValueAtTime(uy.y,r),t.positionZ.linearRampToValueAtTime(uy.z,r),t.forwardX.linearRampToValueAtTime(ub.x,r),t.forwardY.linearRampToValueAtTime(ub.y,r),t.forwardZ.linearRampToValueAtTime(ub.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r)}else t.setPosition(uy.x,uy.y,uy.z),t.setOrientation(ub.x,ub.y,ub.z,n.x,n.y,n.z)}}class uw extends rN{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let uS=new nk,uT=new nG,uE=new nk,uA=new nk;class uR extends uw{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(uS,uT,uE),uA.set(0,0,1).applyQuaternion(uT);let t=this.panner;if(t.positionX){let n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(uS.x,n),t.positionY.linearRampToValueAtTime(uS.y,n),t.positionZ.linearRampToValueAtTime(uS.z,n),t.orientationX.linearRampToValueAtTime(uA.x,n),t.orientationY.linearRampToValueAtTime(uA.y,n),t.orientationZ.linearRampToValueAtTime(uA.z,n)}else t.setPosition(uS.x,uS.y,uS.z),t.setOrientation(uA.x,uA.y,uA.z)}}class uC{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class uL{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,i,a;switch(t){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(0===a){for(let s=0;s!==r;++s)n[i+s]=n[s];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(n,i,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){let o=t*this._origIndex;this._mixBufferRegion(n,r,o,1-i,t)}a>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(n[l]!==n[l+t]){s.setValue(n,r);break}}saveOriginalState(){let e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let i=n;i!==r;++i)t[i]=t[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,i){if(r>=.5)for(let a=0;a!==i;++a)e[t+a]=e[n+a]}_slerp(e,t,n,r){nG.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,i){let a=this._workIndex*i;nG.multiplyQuaternionsFlat(e,a,e,t,e,n),nG.slerpFlat(e,t,e,t,e,a,r)}_lerp(e,t,n,r,i){let a=1-r;for(let s=0;s!==i;++s){let o=t+s;e[o]=e[o]*a+e[n+s]*r}}_lerpAdditive(e,t,n,r,i){for(let a=0;a!==i;++a){let s=t+a;e[s]=e[s]+e[n+a]*r}}}let uP="\\[\\]\\.:\\/",uD=RegExp("["+uP+"]","g"),uI="[^"+uP+"]",uN="[^"+uP.replace("\\.","")+"]",uB=/((?:WC+[\/:])*)/.source.replace("WC",uI),uz=/(WCOD+)?/.source.replace("WCOD",uN),uO=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",uI),uU=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",uI),uF=RegExp("^"+uB+uz+uO+uU+"$"),uH=["material","materials","bones"];class uG{constructor(e,t,n){this.path=t,this.parsedPath=n||uG.parseTrackName(t),this.node=uG.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new uG.Composite(e,t,n):new uG(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(uD,"")}static parseTrackName(e){let t=uF.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){let i=n.nodeName.substring(r+1);-1!==uH.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){let r=function(e){for(let n=0;n<e.length;n++){let i=e[n];if(i.name===t||i.uuid===t)return i;let a=r(i.children);if(a)return a}return null},i=r(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=uG.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let a=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let s=0;s<e.length;s++)if(e[s].name===a){a=s;break}break;default:if(void 0===e[n]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(void 0!==a){if(void 0===e[a]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}let o=e[r];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+r+" but it wasn't found.",e);return}let h=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?h=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=i}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][h]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}uG.Composite=class{constructor(e,t,n){let r=n||uG.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();let n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},uG.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},uG.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},uG.prototype.GetterByBindingType=[uG.prototype._getValue_direct,uG.prototype._getValue_array,uG.prototype._getValue_arrayElement,uG.prototype._getValue_toArray,],uG.prototype.SetterByBindingTypeAndVersioning=[[uG.prototype._setValue_direct,uG.prototype._setValue_direct_setNeedsUpdate,uG.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[uG.prototype._setValue_array,uG.prototype._setValue_array_setNeedsUpdate,uG.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[uG.prototype._setValue_arrayElement,uG.prototype._setValue_arrayElement_setNeedsUpdate,uG.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[uG.prototype._setValue_fromArray,uG.prototype._setValue_fromArray_setNeedsUpdate,uG.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class uk{constructor(){this.uuid=nt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,a=i.length,s,o=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){let c=arguments[h],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0;f!==a;++f)i[f].push(new uG(c,n[f],r[f]))}else if(p<l){s=e[p];let m=--l,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=c;for(let v=0;v!==a;++v){let y=i[v],x=y[m],_=y[p];y[p]=x,void 0===_&&(_=new uG(c,n[v],r[v])),y[m]=_}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length,i=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let o=arguments[a],l=o.uuid,h=t[l];if(void 0!==h&&h>=i){let u=i++,c=e[u];t[c.uuid]=h,e[h]=c,t[l]=u,e[u]=o;for(let d=0;d!==r;++d){let p=n[d],f=p[u],m=p[h];p[h]=f,p[u]=m}}}this.nCachedObjects_=i}uncache(){let e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length,i=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let l=arguments[s],h=l.uuid,u=t[h];if(void 0!==u){if(delete t[h],u<i){let c=--i,d=e[c],p=--a,f=e[p];t[d.uuid]=u,e[u]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0;m!==r;++m){let g=n[m],v=g[c],y=g[p];g[u]=v,g[c]=y,g.pop()}}else{let x=--a,_=e[x];x>0&&(t[_.uuid]=u),e[u]=_,e.pop();for(let b=0;b!==r;++b){let M=n[b];M[u]=M[x],M.pop()}}}}this.nCachedObjects_=i}subscribe_(e,t){let n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(void 0!==r)return i[r];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,u=Array(l);r=i.length,n[e]=r,a.push(e),s.push(t),i.push(u);for(let c=h,d=o.length;c!==d;++c){let p=o[c];u[c]=new uG(p,e,t)}return u}unsubscribe_(e){let t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){let r=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=n,a[n]=o,a.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}}uk.prototype.isAnimationObjectGroup=!0;class uV{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;let i=t.tracks,a=i.length,s=Array(a),o={endingStart:tf,endingEnd:tf};for(let l=0;l!==a;++l){let h=i[l].createInterpolant(null);s[l]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=th,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){let r=this._clip.duration,i=e._clip.duration;e.warp(1,i/r,t),this.warp(r/i,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){let r=this._mixer,i=r.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}let i=this._startTime;if(null!==i){let a=(e-i)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);let s=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,h=this._propertyBindings;if(this.blendMode===ty)for(let u=0,c=l.length;u!==c;++u)l[u].evaluate(s),h[u].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(s),h[d].accumulate(r,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let n=this._weightInterpolant;if(null!==n){let r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let n=this._timeScaleInterpolant;if(null!==n){let r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,n=this.loop,r=this.time+e,i=this._loopCount,a=n===tu;if(0===e)return -1===i?r:a&&(1&i)==1?t-r:r;if(n===tl){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){let s=Math.floor(r/t);r-=t*s,i+=Math.abs(s);let o=this.repetitions-i;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=r;if(a&&(1&i)==1)return t-r}return r}_setEndings(e,t,n){let r=this._interpolantSettings;n?(r.endingStart=tm,r.endingEnd=tm):(e?r.endingStart=this.zeroSlopeAtStart?tm:tf:r.endingStart=tg,t?r.endingEnd=this.zeroSlopeAtEnd?tm:tf:r.endingEnd=tg)}_scheduleFading(e,t,n){let r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=n,this}}class uW extends t5{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,s=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName,h=l[o];void 0===h&&(h={},l[o]=h);for(let u=0;u!==i;++u){let c=r[u],d=c.name,p=h[d];if(void 0!==p)++p.referenceCount,a[u]=p;else{if(void 0!==(p=a[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[u].binding.parsedPath;p=new uL(uG.create(n,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),a[u]=p}s[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}let i=e._propertyBindings;for(let a=0,s=i.length;a!==s;++a){let o=i[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){let i=t[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){let r=this._actions,i=this._actionsByClip,a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{let s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){let t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;let i=e._clip.uuid,a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;let u=s.actionByRoot,c=(e._localRoot||this._root).uuid;delete u[c],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){let i=t[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){let t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackAction(e){let t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_addInactiveBinding(e,t,n){let r=this._bindingsByRootAndName,i=this._bindings,a=r[t];void 0===a&&(a={},r[t]=a),a[n]=e,e._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){let t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[r]}_lendBinding(e){let t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackBinding(e){let t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new hx(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){let t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i}clipAction(e,t,n){let r=t||this._root,i=r.uuid,a="string"==typeof e?hC.findByName(r,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===n&&(n=null!==a?a.blendMode:tv),void 0!==o){let h=o.actionByRoot[i];if(void 0!==h&&h.blendMode===n)return h;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let u=new uV(this,a,t,n);return this._bindAction(u,l),this._addInactiveAction(u,s,i),u}existingAction(e,t){let n=t||this._root,r=n.uuid,i="string"==typeof e?hC.findByName(n,e):e,a=i?i.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[r]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;let t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==n;++s){let o=t[s];o._update(r,e,i,a)}let l=this._bindings,h=this._nActiveBindings;for(let u=0;u!==h;++u)l[u].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){let a=i.knownActions;for(let s=0,o=a.length;s!==o;++s){let l=a[s];this._deactivateAction(l);let h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete r[n]}}uncacheRoot(e){let t=e.uuid,n=this._actionsByClip;for(let r in n){let i=n[r].actionByRoot,a=i[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName,o=s[t];if(void 0!==o)for(let l in o){let h=o[l];h.restoreOriginalState(),this._removeInactiveBinding(h)}}uncacheAction(e,t){let n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}uW.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class uj{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new uj(void 0===this.value.clone?this.value:this.value.clone())}}class uq extends s5{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}uq.prototype.isInstancedInterleavedBuffer=!0;class uX{constructor(e,t,n,r,i){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}uX.prototype.isGLBufferAttribute=!0;class uJ{constructor(e,t,n=0,r=1/0){this.ray=new rl(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new r_,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return uZ(e,this,n,t),n.sort(uY),n}intersectObjects(e,t=!0,n=[]){for(let r=0,i=e.length;r<i;r++)uZ(e[r],this,n,t);return n.sort(uY),n}}function uY(e,t){return e.distance-t.distance}function uZ(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){let i=e.children;for(let a=0,s=i.length;a<s;a++)uZ(i[a],t,n,!0)}}class uK{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(nn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class uQ{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}let u$=new nc;class u0{constructor(e=new nc(Infinity,Infinity),t=new nc(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=u$.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=u$.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}u0.prototype.isBox2=!0;let u1=new nk,u3=new nk;class u2{constructor(e=new nk,t=new nk){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){u1.subVectors(e,this.start),u3.subVectors(this.end,this.start);let n=u3.dot(u3),r=u3.dot(u1),i=r/n;return t&&(i=nn(i,0,1)),i}closestPointToPoint(e,t,n){let r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let u4=new nk;class u5 extends rN{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let n=new is,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,a=1;i<32;i++,a++){let s=i/32*Math.PI*2,o=a/32*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new r6(r,3));let l=new oN({fog:!1,toneMapped:!1});this.cone=new oV(n,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),u4.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(u4),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let u6=new nk,u7=new rh,u8=new rh;class u9 extends oV{constructor(e){let t=function e(t){let n=[];!0===t.isBone&&n.push(t);for(let r=0;r<t.children.length;r++)n.push.apply(n,e(t.children[r]));return n}(e),n=new is,r=[],i=[],a=new nA(0,0,1),s=new nA(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new r6(r,3)),n.setAttribute("color",new r6(i,3));let h=new oN({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,n=this.geometry,r=n.getAttribute("position");u8.copy(this.root.matrixWorld).invert();for(let i=0,a=0;i<t.length;i++){let s=t[i];s.parent&&s.parent.isBone&&(u7.multiplyMatrices(u8,s.matrixWorld),u6.setFromMatrixPosition(u7),r.setXYZ(a,u6.x,u6.y,u6.z),u7.multiplyMatrices(u8,s.parent.matrixWorld),u6.setFromMatrixPosition(u7),r.setXYZ(a+1,u6.x,u6.y,u6.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class ce extends iT{constructor(e,t,n){let r=new l7(t,4,2),i=new rJ({wireframe:!0,fog:!1,toneMapped:!1});super(r,i),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let ct=new nk,cn=new nA,cr=new nA;class ci extends rN{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;let r=new l4(t);r.rotateY(.5*Math.PI),this.material=new rJ({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let i=r.getAttribute("position"),a=new Float32Array(3*i.count);r.setAttribute("color",new rK(a,3)),this.add(new iT(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");cn.copy(this.light.color),cr.copy(this.light.groundColor);for(let n=0,r=t.count;n<r;n++){let i=n<r/2?cn:cr;t.setXYZ(n,i.r,i.g,i.b)}t.needsUpdate=!0}e.lookAt(ct.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ca extends oV{constructor(e=10,t=10,n=4473924,r=8947848){n=new nA(n),r=new nA(r);let i=t/2,a=e/t,s=e/2,o=[],l=[];for(let h=0,u=0,c=-s;h<=t;h++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let d=h===i?n:r;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3}let p=new is;p.setAttribute("position",new r6(o,3)),p.setAttribute("color",new r6(l,3));let f=new oN({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}}class cs extends oV{constructor(e=10,t=16,n=8,r=64,i=4473924,a=8947848){i=new nA(i),a=new nA(a);let s=[],o=[];for(let l=0;l<=t;l++){let h=l/t*(2*Math.PI),u=Math.sin(h)*e,c=Math.cos(h)*e;s.push(0,0,0),s.push(u,0,c);let d=1&l?i:a;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<=n;p++){let f=1&p?i:a,m=e-e/n*p;for(let g=0;g<r;g++){let v=g/r*(2*Math.PI),y=Math.sin(v)*m,x=Math.cos(v)*m;s.push(y,0,x),o.push(f.r,f.g,f.b),y=Math.sin(v=(g+1)/r*(2*Math.PI))*m,x=Math.cos(v)*m,s.push(y,0,x),o.push(f.r,f.g,f.b)}}let _=new is;_.setAttribute("position",new r6(s,3)),_.setAttribute("color",new r6(o,3));let b=new oN({vertexColors:!0,toneMapped:!1});super(_,b),this.type="PolarGridHelper"}}let co=new nk,cl=new nk,ch=new nk;class cu extends rN{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new is;r.setAttribute("position",new r6([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let i=new oN({fog:!1,toneMapped:!1});this.lightPlane=new oH(r,i),this.add(this.lightPlane),(r=new is).setAttribute("position",new r6([0,0,0,0,0,1],3)),this.targetLine=new oH(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){co.setFromMatrixPosition(this.light.matrixWorld),cl.setFromMatrixPosition(this.light.target.matrixWorld),ch.subVectors(cl,co),this.lightPlane.lookAt(cl),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cl),this.targetLine.scale.z=ch.length()}}let cc=new nk,cd=new iD;class cp extends oV{constructor(e){let t=new is,n=new oN({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],a={},s=new nA(16755200),o=new nA(16711680),l=new nA(43775),h=new nA(16777215),u=new nA(3355443);function c(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}c("n1","n2",s),c("n2","n4",s),c("n4","n3",s),c("n3","n1",s),c("f1","f2",s),c("f2","f4",s),c("f4","f3",s),c("f3","f1",s),c("n1","f1",s),c("n2","f2",s),c("n3","f3",s),c("n4","f4",s),c("p","n1",o),c("p","n2",o),c("p","n3",o),c("p","n4",o),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l),c("c","t",h),c("p","c",u),c("cn1","cn2",u),c("cn3","cn4",u),c("cf1","cf2",u),c("cf3","cf4",u),t.setAttribute("position",new r6(r,3)),t.setAttribute("color",new r6(i,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){let e=this.geometry,t=this.pointMap;cd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),cf("c",t,e,cd,0,0,-1),cf("t",t,e,cd,0,0,1),cf("n1",t,e,cd,-1,-1,-1),cf("n2",t,e,cd,1,-1,-1),cf("n3",t,e,cd,-1,1,-1),cf("n4",t,e,cd,1,1,-1),cf("f1",t,e,cd,-1,-1,1),cf("f2",t,e,cd,1,-1,1),cf("f3",t,e,cd,-1,1,1),cf("f4",t,e,cd,1,1,1),cf("u1",t,e,cd,.7,1.1,-1),cf("u2",t,e,cd,-.7,1.1,-1),cf("u3",t,e,cd,0,2,-1),cf("cf1",t,e,cd,-1,0,1),cf("cf2",t,e,cd,1,0,1),cf("cf3",t,e,cd,0,-1,1),cf("cf4",t,e,cd,0,1,1),cf("cn1",t,e,cd,-1,0,-1),cf("cn2",t,e,cd,1,0,-1),cf("cn3",t,e,cd,0,-1,-1),cf("cn4",t,e,cd,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cf(e,t,n,r,i,a,s){cc.set(i,a,s).unproject(r);let o=t[e];if(void 0!==o){let l=n.getAttribute("position");for(let h=0,u=o.length;h<u;h++)l.setXYZ(o[h],cc.x,cc.y,cc.z)}}let cm=new nj;class cg extends oV{constructor(e,t=16776960){let n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new is;i.setIndex(new rK(n,1)),i.setAttribute("position",new rK(r,3)),super(i,new oN({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&cm.setFromObject(this.object),cm.isEmpty())return;let t=cm.min,n=cm.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=t.x,i[4]=n.y,i[5]=n.z,i[6]=t.x,i[7]=t.y,i[8]=n.z,i[9]=n.x,i[10]=t.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=t.z,i[15]=t.x,i[16]=n.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=n.x,i[22]=t.y,i[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return oV.prototype.copy.call(this,e),this.object=e.object,this}}class cv extends oV{constructor(e,t=16776960){let n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new is;r.setIndex(new rK(n,1)),r.setAttribute("position",new r6([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new oN({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cy extends oH{constructor(e,t=1,n=16776960){let r=new is;r.setAttribute("position",new r6([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new oN({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let i=new is;i.setAttribute("position",new r6([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new iT(i,new rJ({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}let cx=new nk,c_,cb;class cM extends rN{constructor(e=new nk(0,0,1),t=new nk(0,0,0),n=1,r=16776960,i=.2*n,a=.2*i){super(),this.type="ArrowHelper",void 0===c_&&((c_=new is).setAttribute("position",new r6([0,0,0,0,1,0],3)),(cb=new lv(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oH(c_,new oN({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new iT(cb,new rJ({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cx.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(cx,t)}}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class cw extends oV{constructor(e=1){let t=new is;t.setAttribute("position",new r6([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new r6([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let n=new oN({vertexColors:!0,toneMapped:!1});super(t,n),this.type="AxesHelper"}setColors(e,t,n){let r=new nA,i=this.geometry.attributes.color.array;return r.set(e),r.toArray(i,0),r.toArray(i,3),r.set(t),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cS{constructor(){this.type="ShapePath",this.color=new nA,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new lp,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(e){let t=[];for(let n=0,r=e.length;n<r;n++){let i=e[n],a=new lE;a.curves=i.curves,t.push(a)}return t}function r(e,t){let n=t.length,r=!1;for(let i=n-1,a=0;a<n;i=a++){let s=t[i],o=t[a],l=o.x-s.x,h=o.y-s.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(s=t[a],l=-l,o=t[i],h=-h),e.y<s.y||e.y>o.y)continue;if(e.y===s.y){if(e.x===s.x)return!0}else{let u=h*(e.x-s.x)-l*(e.y-s.y);if(0===u)return!0;if(u<0)continue;r=!r}}else{if(e.y!==s.y)continue;if(o.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=o.x)return!0}}return r}let i=lQ.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return n(a);let s,o,l,h=[];if(1===a.length)return o=a[0],(l=new lE).curves=o.curves,h.push(l),h;let u=!i(a[0].getPoints());u=e?!u:u;let c=[],d=[],p=[],f=0,m;d[f]=void 0,p[f]=[];for(let g=0,v=a.length;g<v;g++)s=i(m=(o=a[g]).getPoints()),(s=e?!s:s)?(!u&&d[f]&&f++,d[f]={s:new lE,p:m},d[f].s.curves=o.curves,u&&f++,p[f]=[]):p[f].push({h:o,p:m[0]});if(!d[0])return n(a);if(d.length>1){let y=!1,x=0;for(let _=0,b=d.length;_<b;_++)c[_]=[];for(let M=0,w=d.length;M<w;M++){let S=p[M];for(let T=0;T<S.length;T++){let E=S[T],A=!0;for(let R=0;R<d.length;R++)r(E.p,d[R].p)&&(M!==R&&x++,A?(A=!1,c[R].push(E)):y=!0);A&&c[M].push(E)}}x>0&&!1===y&&(p=c)}let C;for(let L=0,P=d.length;L<P;L++){l=d[L].s,h.push(l),C=p[L];for(let D=0,I=C.length;D<I;D++)l.holes.push(C[D].h)}return h}}class cT{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=nn(e,-65504,65504),cA[0]=e;let t=cR[0],n=t>>23&511;return cC[n]+((8388607&t)>>cL[n])}static fromHalfFloat(e){let t=e>>10;return cR[0]=cI[cB[t]+(1023&e)]+cN[t],cA[0]}}let cE=new ArrayBuffer(4),cA=new Float32Array(cE),cR=new Uint32Array(cE),cC=new Uint32Array(512),cL=new Uint32Array(512);for(let cP=0;cP<256;++cP){let cD=cP-127;cD<-27?(cC[cP]=0,cC[256|cP]=32768,cL[cP]=24,cL[256|cP]=24):cD<-14?(cC[cP]=1024>>-cD-14,cC[256|cP]=1024>>-cD-14|32768,cL[cP]=-cD-1,cL[256|cP]=-cD-1):cD<=15?(cC[cP]=cD+15<<10,cC[256|cP]=cD+15<<10|32768,cL[cP]=13,cL[256|cP]=13):cD<128?(cC[cP]=31744,cC[256|cP]=64512,cL[cP]=24,cL[256|cP]=24):(cC[cP]=31744,cC[256|cP]=64512,cL[cP]=13,cL[256|cP]=13)}let cI=new Uint32Array(2048),cN=new Uint32Array(64),cB=new Uint32Array(64);for(let cz=1;cz<1024;++cz){let cO=cz<<13,cU=0;for(;(8388608&cO)==0;)cO<<=1,cU-=8388608;cO&=-8388609,cU+=947912704,cI[cz]=cO|cU}for(let cF=1024;cF<2048;++cF)cI[cF]=939524096+(cF-1024<<13);for(let cH=1;cH<31;++cH)cN[cH]=cH<<23;cN[31]=1199570944,cN[32]=2147483648;for(let cG=33;cG<63;++cG)cN[cG]=2147483648+(cG-32<<23);cN[63]=3347054592;for(let ck=1;ck<64;++ck)32!==ck&&(cB[ck]=1024);let cV=0,cW=1,cj=0,cq=1,cX=2;function cJ(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function cY(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}class cZ extends oZ{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}}class cK extends od{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}}class cQ extends oZ{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}}class c$ extends oj{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class c0 extends oj{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class c1 extends oj{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class c3 extends nk{constructor(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,n)}}class c2 extends rK{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(tJ)}}class c4 extends rQ{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}}class c5 extends r${constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}}class c6 extends r0{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}}class c7 extends r1{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}}class c8 extends r3{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class c9 extends r2{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}}class de extends r4{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class dt extends r6{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}class dn extends r7{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}}o3.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(o3.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},lp.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)};class dr extends cw{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}}class di extends cg{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}}class da extends oV{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new lT(e.geometry),new oN({color:void 0!==t?t:16777215}))}}ca.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},u9.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class ds extends oV{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new hn(e.geometry),new oN({color:void 0!==t?t:16777215}))}}hN.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),h9.extractUrlBase(e)},hN.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class dl extends hz{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}}class dh extends hG{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}}u0.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},u0.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},u0.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},u0.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},nj.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},nj.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},nj.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},nj.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},nj.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},rx.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},re.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},iV.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},u2.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},nd.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},nd.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},nd.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},nd.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},nd.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},nd.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},rh.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},rh.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},rh.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new nk().setFromMatrixColumn(this,3)},rh.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},rh.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},rh.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},rh.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},rh.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rh.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},rh.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},rh.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},rh.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rh.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rh.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rh.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},rh.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},rh.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},rh.prototype.makeFrustum=function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},rh.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},iH.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},nG.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},nG.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},rl.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},rl.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},rl.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},rj.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},rj.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},rj.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},rj.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},rj.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},rj.barycoordFromPoint=function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),rj.getBarycoord(e,t,n,r,i)},rj.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),rj.getNormal(e,t,n,r)},lE.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},lE.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new l1(this,e)},lE.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new l6(this,e)},nc.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nc.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},nc.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nk.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},nk.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},nk.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},nk.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},nk.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},nk.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},nk.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nk.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},nk.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nN.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nN.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},rN.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},rN.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},rN.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},rN.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},rN.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(rN.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),iT.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(iT.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),tx},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),oM.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},iI.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(hV.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(rK.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===tJ},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(tJ)}}}),rK.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?tJ:tX),this},rK.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},rK.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},is.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},is.prototype.addAttribute=function(e,t){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute)?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new rK(arguments[1],arguments[2])))},is.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},is.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},is.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},is.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},is.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(is.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),s5.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?tJ:tX),this},s5.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},l1.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},l1.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},l1.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},s4.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},uj.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(rX.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new nA}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===v}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(iP.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),s0.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},s0.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},s0.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},s0.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},s0.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},s0.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},s0.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},s0.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},s0.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},s0.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},s0.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},s0.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},s0.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},s0.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},s0.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},s0.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},s0.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},s0.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},s0.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},s0.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},s0.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},s0.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},s0.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},s0.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},s0.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(s0.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?tw:tM}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(sV.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class du extends iz{constructor(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,n)}}function dc(){console.error("THREE.CanvasRenderer has been removed")}function dd(){console.error("THREE.JSONLoader has been removed.")}Object.defineProperties(nB.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),uw.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let t=this,n=new uh;return n.load(e,function(e){t.setBuffer(e)}),this},uC.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},iN.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},iN.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},nC.crossOrigin=void 0,nC.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let i=new hk;i.setCrossOrigin(this.crossOrigin);let a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},nC.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let i=new hH;i.setCrossOrigin(this.crossOrigin);let a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},nC.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},nC.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};let dp={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function df(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class dm extends is{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class dg extends is{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function dv(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function dy(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function dx(){console.error("THREE.ImmediateRenderObject has been removed.")}class d_ extends nB{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class db extends nz{constructor(e,t,n,r){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,r)}}class dM extends nU{constructor(e,t,n,r){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,r)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)}}]);